<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Install TensorFlow Object Detection API</title>
    <link href="/2020/11/09/Install-TensorFlow-Object-Detection-API/"/>
    <url>/2020/11/09/Install-TensorFlow-Object-Detection-API/</url>
    
    <content type="html"><![CDATA[<p>This Blog is writing for TensorFlow Object Detection API Installation on Win10.</p><a id="more"></a><h2 id="1-Install-TensorFlow"><a href="#1-Install-TensorFlow" class="headerlink" title="1. Install TensorFlow"></a>1. Install TensorFlow</h2><blockquote><p>Before install TF. Make sure CUDA and cdDNN has been installed successfully. Check the system environment has been set  correctly.</p><p> <strong>Verify the installation</strong></p><pre><code class="hljs bash">python -c <span class="hljs-string">"import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))"</span></code></pre></blockquote><blockquote><p>If warning <code>Could not load dynamic library &#39;cudnn64_7.dll&#39;</code> copy the file to CUDA\bin.</p></blockquote><h3 id="2-Install-Object-Detection-API"><a href="#2-Install-Object-Detection-API" class="headerlink" title="2. Install Object Detection API"></a>2. Install Object Detection API</h3><blockquote><p>Clone the TensorFlow Models repository and proceed to one of the installation options.</p></blockquote><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/tensorflow/models.git</code></pre><blockquote><p>Get the Proto Tool. Find the win64.zip in GitHub release packages.</p></blockquote><p><a href="https://github.com/protocolbuffers/protobuf/releases" target="_blank" rel="noopener">https://github.com/protocolbuffers/protobuf/releases</a></p><blockquote><p>Unzip the files to Tool folder, and add the Tool/protoc***/bin to the system environment path.</p></blockquote><blockquote><p>Install API</p></blockquote><pre><code class="hljs bash"><span class="hljs-comment"># From within TensorFlow/models/research/</span>Get-ChildItem object_detection/protos/*.proto | foreach &#123;protoc <span class="hljs-string">"object_detection/protos/<span class="hljs-variable">$($_.Name)</span>"</span> --python_out=.&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Install CUDA 11.1 &amp; cuDNN</title>
    <link href="/2020/10/25/Install%20CUDA%2011.1%20&amp;%20cuDNN/"/>
    <url>/2020/10/25/Install%20CUDA%2011.1%20&amp;%20cuDNN/</url>
    
    <content type="html"><![CDATA[<p>This Blog is writing for steps of CUDA installing on Ubuntu 20.04.</p><a id="more"></a><h2 id="Install-CUDA-11-1"><a href="#Install-CUDA-11-1" class="headerlink" title="Install CUDA 11.1"></a>Install CUDA 11.1</h2><ol><li>Check Updates</li></ol><pre><code class="hljs bash">sudo apt-get updatesudo apt-get upgradesudo apt-get autoremove</code></pre><ol start="2"><li>Switch Navida Metapackage Version<blockquote><p>Open Software &amp; Updates and switch Navida metapackage to 455.<br>Apply Changes.</p></blockquote><pre><code class="hljs bash">reboot</code></pre></li></ol><ol start="3"><li>Download Installer for Linux Ubuntu 20.04 x86_64 (<a href="https://developer.nvidia.com/cuda-downloads" target="_blank" rel="noopener">https://developer.nvidia.com/cuda-downloads</a>) </li></ol><pre><code class="hljs bash">wget https://developer.download.nvidia.com/compute/cuda/11.1.0/local_installers/cuda_11.1.0_455.23.05_linux.runsudo sh cuda_11.1.0_455.23.05_linux.run</code></pre><blockquote><p>On the first prompt choose Continue.<br>On the second prompt press Enter add the first metapackage to blacklist.<br>Choose Install.</p></blockquote><ol start="4"><li>Config Environment Variables</li></ol><pre><code class="hljs bash">gedit ~/.bashrc<span class="hljs-comment"># Add these lines to bashrc file.</span><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=<span class="hljs-variable">$LD_LIBRARY_PATH</span>:/usr/<span class="hljs-built_in">local</span>/cuda/lib64<span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/usr/<span class="hljs-built_in">local</span>/cuda/bin<span class="hljs-built_in">export</span> CUDA_HOME=<span class="hljs-variable">$CUDA_HOME</span>:/usr/<span class="hljs-built_in">local</span>/cuda<span class="hljs-comment"># Exit current terminal and open a new terminal.</span><span class="hljs-comment"># Config bashrc.</span><span class="hljs-built_in">source</span> ~/.bashrc<span class="hljs-comment"># Do the same with zshrc.</span></code></pre><ol start="5"><li>Test CUDA<pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/cuda/samples/1_Utilities/deviceQuerymake <span class="hljs-comment"># If permission denied type $ sudo make</span>./deviceQuery <span class="hljs-comment">#If permission denied type $ sudo ./deviceQuery</span><span class="hljs-comment"># Result = PASS indicate CUDA has installed successfully.</span></code></pre></li></ol><h2 id="Install-cuDNN"><a href="#Install-cuDNN" class="headerlink" title="Install cuDNN"></a>Install cuDNN</h2><ol><li>Download cuDnn</li></ol><ol start="2"><li><p>Extract Files</p><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/Downloadstar -xzf cudnn-11.1-linux-x64-v8.0.4.30.tgz</code></pre></li><li><p>Copy Files to Dictionary</p><pre><code class="hljs bash">sudo cp cuda/include/cudnn.h /usr/<span class="hljs-built_in">local</span>/cuda/includesudo cp cuda/lib64/libcudnn* /usr/<span class="hljs-built_in">local</span>/cuda/lib64sudo chmod a+r /usr/<span class="hljs-built_in">local</span>/cuda/include/cudnn.h /usr/<span class="hljs-built_in">local</span>/cuda/lib64/libcudnn*</code></pre></li></ol>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CFD-Note</title>
    <link href="/2020/10/17/CFD-Note/"/>
    <url>/2020/10/17/CFD-Note/</url>
    
    <content type="html"><![CDATA[<p>本文用于记录CFD软件使用心得。</p><a id="more"></a>]]></content>
    
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Test image</title>
    <link href="/2020/04/02/Test-image/"/>
    <url>/2020/04/02/Test-image/</url>
    
    <content type="html"><![CDATA[<p><img src="image/image-20191213232016958.png" srcset="/img/loading.gif" alt="velocity_profile"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>NOTE</title>
    <link href="/2020/03/08/NOTE/"/>
    <url>/2020/03/08/NOTE/</url>
    
    <content type="html"><![CDATA[<h1 id="elbow"><a href="#elbow" class="headerlink" title="elbow"></a>elbow</h1><blockquote><p>terminal</p></blockquote><pre><code class="hljs crmsh">fluentMeshToFoam elbow.mshsim //constant\poluMesh mesh locationfoamCleanTutorials cleanDirtouch case.foam</code></pre><blockquote><p>boundary condition<br>type            empty; 2D</p></blockquote><p>type            noSlip;</p><p>type            fixedValue;</p><p>value           uniform 0;</p><blockquote><p>flies<br>flie 0 boundary</p></blockquote><p>flie constant<br>transportProperties nu<br>turbulenceProperties method RAS LES laminar</p><p>flie system </p><blockquote><p>units</p><p>[kg,m,s,k…]</p></blockquote><blockquote><p>solve<br>steady: deltaT          1;<br>writeFormat     binary\ascii;</p></blockquote><h1 id="TShspe-TEST"><a href="#TShspe-TEST" class="headerlink" title="TShspe_TEST"></a>TShspe_TEST</h1><blockquote><p>constant    /boundary    /nu    /laminar<br>0    /p    /U</p></blockquote><pre><code class="hljs irpf90">blockMesh<span class="hljs-keyword">touch</span> <span class="hljs-keyword">case</span>.foamsimpleFoam</code></pre><h1 id="arota-transient"><a href="#arota-transient" class="headerlink" title="arota_transient"></a>arota_transient</h1><pre><code class="hljs css"><span class="hljs-selector-tag">fluent3DMeshToFoam</span> <span class="hljs-selector-tag">fluent</span><span class="hljs-selector-class">.msh</span></code></pre><blockquote><p>/p<br>type            codedFixedValue;<br>changable pressure with time on boundary</p></blockquote><p>“OUTLET.*”=OUTLET1 OUTLET2 OUTLET3…</p><blockquote><p>/controlDict<br>important: deltaT<br>writeFormat     binary;</p></blockquote><pre><code class="hljs awk">pimpleFoamfoamListTimes -rm  <span class="hljs-regexp">//</span><span class="hljs-keyword">delete</span> previous solution data</code></pre><p>postProcessing residuals data</p><p>foamMonitor -l postProcessing/residuals/0/residuals.dat</p><h1 id="sylinder-TEST"><a href="#sylinder-TEST" class="headerlink" title="_sylinder_TEST"></a>_sylinder_TEST</h1><pre><code class="hljs lsl">inGroups        List&lt;word&gt; <span class="hljs-number">1</span>(mywall);empty cyclic cyclicAMI wedge symmetry &gt; #includeEtc <span class="hljs-string">"caseDicts/setConstraintTypes"</span>internalField   uniform (<span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>);pimpleFoam &amp;&gt; lognOuterCorrectors    <span class="hljs-number">15</span>&gt;&gt;<span class="hljs-number">1</span>; pimple to pisofoamMonitor yrange <span class="hljs-string">"[0 1]"</span></code></pre><p>#_TaylorCouettte_steadyState</p><pre><code class="hljs routeros"><span class="hljs-string">".*"</span>&#123;<span class="hljs-built_in">type </span>zeroGradient;&#125;</code></pre><pre><code class="hljs bash">&gt; foamGet residuals<span class="hljs-built_in">functions</span>&#123;<span class="hljs-comment">#includeFunc residuals</span>&#125;</code></pre><pre><code class="hljs properties"><span class="hljs-attr">decomposePar</span> <span class="hljs-string"></span><span class="hljs-attr">mpirun</span> <span class="hljs-string">-np 4 simpleFoam -parallel</span></code></pre><h1 id="cyclic-RANS"><a href="#cyclic-RANS" class="headerlink" title="cyclic_RANS"></a>cyclic_RANS</h1><p>👉<br>wall function<br>    type    kqRWallFunction;<br>    value    $internalField;</p><p>./Allrun<br>decomposePar -force<br>mpirun -np 4 simpleFoam -parallel<br>reconstructPar</p><h1 id="dynMesh"><a href="#dynMesh" class="headerlink" title="_dynMesh"></a>_dynMesh</h1><p>dynamicMeshDict   movingwall nessary file</p><p>pointDisplacement</p><h1 id="livingRoom"><a href="#livingRoom" class="headerlink" title="_livingRoom"></a>_livingRoom</h1><p>topoSet<br>        name    window;<br>        type    faceSet;<br>        action  new;<br>        source  boxToFace;<br>        sourceInfo<br>        {<br>            box (0.5 1.0 -0.001)(2.5 2.0 0.001);<br>        }</p><p>p_rgh</p><pre><code>type        zerogradient;    type            fixedFluxPressure;    value           uniform 0;equationOfState perfectGas;</code></pre><p>buoyantSimpleFoam</p><h1 id="BernardCells"><a href="#BernardCells" class="headerlink" title="_BernardCells"></a>_BernardCells</h1><p>buoyantPimpleFoam</p><p>–&gt; FOAM FATAL ERROR:<br>LHS and RHS of - have different dimensions<br>     dimensions : [0 2 -2 0 0 0 0] - [1 -1 -2 0 0 0 0]</p><h1 id="rhiCentralFoam"><a href="#rhiCentralFoam" class="headerlink" title="rhiCentralFoam"></a>rhiCentralFoam</h1><h1 id="rhoSimpleFoam"><a href="#rhoSimpleFoam" class="headerlink" title="rhoSimpleFoam"></a>rhoSimpleFoam</h1><pre><code class="hljs scala">mu          <span class="hljs-number">0</span>;sutherland  mu relacted <span class="hljs-keyword">with</span> <span class="hljs-type">T</span>internalField   uniform $<span class="hljs-type">Uinlet</span>;internalField   uniform $pOut;<span class="hljs-class"><span class="hljs-keyword">type</span>           <span class="hljs-title">fixedMean</span></span>;  <span class="hljs-comment">//face average</span><span class="hljs-class"><span class="hljs-keyword">type</span>       <span class="hljs-title">totalTemperature</span></span>;<span class="hljs-class"><span class="hljs-keyword">type</span> <span class="hljs-title">turbulentIntensityKineticEnergyInlet</span></span>;</code></pre><h1 id="VOF"><a href="#VOF" class="headerlink" title="VOF"></a>VOF</h1><p>type           constantAlphaContactAngle;<br>interFoam</p><pre><code>pRefCell    0;pRefValue           0;</code></pre><h1 id="Mixture"><a href="#Mixture" class="headerlink" title="Mixture"></a>Mixture</h1><p>driftFluxFoam</p><p>relativeVelocityModel simple; //relative Velocity</p><h1 id="find-solvers"><a href="#find-solvers" class="headerlink" title="find solvers"></a>find solvers</h1><p>OpenFOAM/OpenFOAM-7/applications/solvers/xx/xx.c &gt; discriptions</p><p>OKSS2</p><p>laplacianFoam.c</p><pre><code class="hljs routeros">Application    laplacianFoamDescription    Solves a<span class="hljs-built_in"> simple </span>Laplace equation, e.g. <span class="hljs-keyword">for</span> thermal diffusion <span class="hljs-keyword">in</span> a solid.            fvScalarMatrix TEqn            (                fvm::ddt(T) - fvm::laplacian(DT, T)             ==                fvOptions(T)            );</code></pre><p>scalarTransportFoam</p><pre><code class="hljs excel">Application    scalarTransportFoamDescription    Solves the steady <span class="hljs-built_in">or</span> transient transport equation for a passive scalar.            fvScalarMatrix TEqn            (                f<span class="hljs-symbol">vm:</span><span class="hljs-symbol">:dd</span><span class="hljs-built_in">t</span>(<span class="hljs-built_in">T</span>)              + f<span class="hljs-symbol">vm:</span><span class="hljs-symbol">:di</span>v(<span class="hljs-built_in">phi</span>, <span class="hljs-built_in">T</span>)              - f<span class="hljs-symbol">vm:</span><span class="hljs-symbol">:la</span>placian(DT, <span class="hljs-built_in">T</span>)             ==                fvOptions(<span class="hljs-built_in">T</span>)            );</code></pre><h1 id="Energe-equation"><a href="#Energe-equation" class="headerlink" title="Energe equation"></a>Energe equation</h1><p>name.c&gt;Make&gt;flies&gt;name.C name</p><p>$ wmake</p><blockquote><p>name.c</p></blockquote><pre><code class="hljs autohotkey">   volScalarField T   &#123;IOobject&#123;    <span class="hljs-string">"T"</span>,           runTime.timeName(),<span class="hljs-built_in">           mesh,</span><span class="hljs-title">           IOobject::</span>MUST_READ,<span class="hljs-title">           IOobject::</span>AUTO_WRITE&#125;,       mesh   &#125;<span class="hljs-comment">;</span>   dimensionedScalar DT   &#123;       <span class="hljs-string">"DT"</span>,       dimensionSet(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,-<span class="hljs-number">1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>),       <span class="hljs-number">0.0001</span>   &#125;<span class="hljs-comment">;</span>   fvScalarMatrix TEqn   &#123;<span class="hljs-title">       fvm::</span>ddt(T)<span class="hljs-title">     + fvc::</span>div(phi, T)<span class="hljs-title">     - fvc::</span>laplacian(DT, T)   &#125;<span class="hljs-comment">;</span></code></pre><h1 id="projectionFoam"><a href="#projectionFoam" class="headerlink" title="projectionFoam"></a>projectionFoam</h1><p>projectionFoam.C</p><p>EXE = $(FOAM_USER_APPBIN)/projectionFoam</p><p>phi = fvc::interpolate(U) &amp; mesh.Sf(); volume to surface</p><h1 id="dym"><a href="#dym" class="headerlink" title="dym"></a>dym</h1><pre><code class="hljs autoit">&gt;pisoDyMFoam.C<span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-string">"dynamicFvMesh.H"</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-string">"createDynamicFvMesh.H"</span></span>mesh.update()<span class="hljs-comment">;</span>&gt;UEqnphi = phi - mesh.phi()<span class="hljs-comment">;</span>&gt;options-ldynamicFvMesh \-ltopoChangerFvMesh \-I$(LIB_SRC)/dynamicFvMesh/lnInclude \</code></pre><p>missing operator &gt;options environment variables</p><h1 id="EMMS"><a href="#EMMS" class="headerlink" title="EMMS"></a>EMMS</h1><h1 id="BASUOQU"><a href="#BASUOQU" class="headerlink" title="BASUOQU"></a>BASUOQU</h1><p>pimpleFoam -listScalarBCs -listVectorBCs \list boundary type</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Veen 2019 to 2020</title>
    <link href="/2020/03/08/Veen-2019-to-2020/"/>
    <url>/2020/03/08/Veen-2019-to-2020/</url>
    
    <content type="html"><![CDATA[<p align="center"><b>Hey veen, if the world make you unhappy fuck it!<p align="center"><b>希望10年、20年之后，我还是一直坚持着自己喜欢的，做让自己开心的事。> 2019说得最多的一个字是难，2020我希望最多的是开心。<p>从元旦就开始想写一篇推送总结总结自己的一年，一直没有时间动笔，今天终于把好几个任务推进了一步，空出一天整理整理。因为懒，所以就没有放上图片。开头那句话一直犹豫着要不要放上来，不过我觉得说得挺对。</p><p>翻开手机相册，打开微信朋友圈，把时间线拖到2019年1月1日，好像这一年之间过得并不快，甚至可以用艰难来 形容。细细一看生活中留下的快乐还是更多，因为吐槽生活的朋友圈一般不会保留1天，留下的大多数还是快乐。</p><blockquote><p>2019年任务其实完成的不错：</p></blockquote><ul><li><input disabled="" type="checkbox"> <p>没写SCI但是总不能只盯着 SCI和论文这一年能力上的提升比18年多了很多；</p></li><li><input disabled="" type="checkbox"> <p>省部级以上获奖证书也拿到了；</p></li><li><input disabled="" type="checkbox"> <p>思考人生这件事情做的不是很好；</p></li><li><input disabled="" type="checkbox"> <p>长途骑行还在规划当中；</p></li><li><input disabled="" type="checkbox"> <p>学法语这件事情扔了五六年，等上研究生再捡起来吧。</p></li></ul><p>19年重装了两次系统，大部分的钱花在了吃和设备上，回想起来运气的确是不大好。</p><p>写完2019年生活流水账，好像我的2019运气也没有那么差。20年中有今年的计划，也有今后5年甚至更久的计划，这次回家看了看之前高三写的未来规划，有些后悔没把它带到北京，按照计划我现在应该还有更多沉淀吧。</p><blockquote><p>2020年还是希望做一些改变：</p></blockquote><ul><li><input disabled="" type="checkbox"> 做个可爱的人</li><li><input disabled="" type="checkbox"> 管理好自己</li><li><input disabled="" type="checkbox"> 多陪陪家人</li><li><input disabled="" type="checkbox"> 成为能给周围人带来快乐的人</li><li><input disabled="" type="checkbox"> 经常反思</li><li><input disabled="" type="checkbox"> 如果有可能，放弃一些极限运动</li><li><input disabled="" type="checkbox"> 最后当然还是要多享受生活(●ˇ∀ˇ●)嘿嘿</li></ul><p>以下是一年的生活流水账：</p><pre><code class="hljs lsl"><span class="hljs-number">1</span>月<span class="hljs-number">1</span>号，发的新年第一篇朋友圈竟然是说数值模拟的，那么今年就在朋友圈多写一点关于生活的东西吧！<span class="hljs-number">1</span>月<span class="hljs-number">4</span>号，<span class="hljs-number">18</span>年听了<span class="hljs-number">3296</span>首新歌，<span class="hljs-number">19</span>年我听了两万多首，从听歌数量判断我<span class="hljs-number">19</span>年工作强度大概是之前的一倍，<span class="hljs-number">20</span>年可能还得继续保持。<span class="hljs-number">1</span>月<span class="hljs-number">17</span>号，这天是我做CFD一周年了，从一个数值模拟小白到今年已经能熟练使用大多数工具，一年之内又成长了许多。<span class="hljs-number">1</span>月<span class="hljs-number">30</span>号，打完美赛回宿舍睡了好久，虽然最后结果不太好，不过对我来说重要的是过程，结果是怎样就怎样，也不缺一个两个奖项（缺的是好几个）。<span class="hljs-number">1</span>月<span class="hljs-number">31</span>号，一个人回了四川，一个人在成都点了一个汤锅，也就是在这天突然习惯了一个人的生活，虽然一个人难免孤独，不过并不影响我享受生活啊。<span class="hljs-number">2</span>月<span class="hljs-number">14</span>号，竟然没发朋友圈，以后就算是一个人我也要送自己礼物！情人节有对象的给对象送礼物，我就厉害了，我给自己送礼物。<span class="hljs-number">2</span>月<span class="hljs-number">18</span>号，和yw一起跑了步，好像去年的跑步之约我最后没有坚持下去，今年还是要继续坚持运动。<span class="hljs-number">3</span>月<span class="hljs-number">3</span>号，三个大男生一起约了家适合情侣吃饭的店，感觉三个男生也能吃网红店情侣店啊。<span class="hljs-number">3</span>月<span class="hljs-number">17</span>号，一周之前算坏的SSD终于能换了，重新折腾了一个新系统。<span class="hljs-number">3</span>月<span class="hljs-number">26</span>号，我有个梦想：睡上一天。到现在我这个梦想还没实现，这个梦想实现起来太难了。<span class="hljs-number">3</span>月的最后一天，梁希杯复赛熬夜两周冠军小周还是没有改完论文，第二天中午去答辩的路上让zr同学帮我印了论文，又一次无准备答辩现场，答辩效果可想而知，不过虽然没有讲完，论文还是把我的分数拉上去了很多。<span class="hljs-number">4</span>月<span class="hljs-number">10</span>号，一个人在二教门口拉票，感谢jl中途来帮了我一会儿，那天路演结束之后，一个人的队伍票数位列中游，也算比较成功。<span class="hljs-number">4</span>月<span class="hljs-number">26</span>号，大创答辩抽到了最后一个，怎么说呢这也算是运气吧，效果很好，答辩分数第一成功立项。<span class="hljs-number">5</span>月<span class="hljs-number">1</span>号，突然发现我<span class="hljs-number">2019</span>年竟然出去玩了，虽然去沙雕广场感觉自己就像个沙雕，不过能和老乡们一起玩还是挺开心的。<span class="hljs-number">5</span>月<span class="hljs-number">9</span>号，找到了树木建模的软件，林木数值模拟在构思半年之后，在<span class="hljs-number">2019</span>年末成功落脚。<span class="hljs-number">5</span>月<span class="hljs-number">11</span>号，<span class="hljs-number">1000</span>m成绩get两年来最佳，好像那天又是熬夜一晚去跑步，之后尽量不玩命熬夜了。<span class="hljs-number">5</span>月<span class="hljs-number">20</span>号，这天我以为真的能结束自己今后的单身生活，后来发现<span class="hljs-number">19</span>年情路不顺这件事是的确存在的。<span class="hljs-number">5</span>月<span class="hljs-number">30</span>号，这天好像是土力学考试，第二天还需要首挑答辩，在儿童节凌晨<span class="hljs-number">1</span>点半写好了讲稿初稿，累得半死。<span class="hljs-number">6</span>月<span class="hljs-number">1</span>号，早上在去比赛现场的路上改好了终稿，一早上都在练习演讲，我觉得这次答辩算是这一年中最成功的一次，不负半年来的努力吧，首都挑战杯答辩顺利结束，没拿到特奖不过我已经很满意了。<span class="hljs-number">6</span>月<span class="hljs-number">8</span>号，半年紧绷的比赛生活，这天想找点刺激的东西玩玩，最后一个人也没有去，不过计划躺在了我的to do <span class="hljs-type">list</span>里有人陪了就去尝试一下。<span class="hljs-number">6</span>月<span class="hljs-number">27</span>号，全国挑战杯项目申报，在比赛前又一次更新了算例，这次长达一年多的案例调整最终结束，也在<span class="hljs-number">2020</span>年顺利把文章修改完了，其实最后的结果和之前几次的偏差都不大，但是经过一年半的研究，我既然没有论文压力 ，也不用去做一些灌水论文，或者是把自己不懂的结果发表出去。如果我想在这条路上继续行走，开始的时候走慢点没事，知识架构搭建牢固了，之后才会走得踏实。<span class="hljs-number">7</span>月<span class="hljs-number">8</span>号，开始又一次fluid mechanics学习，不得不说这次国外教授的上课方式是适合我的上课方式，第一次没有翻译的纯英文授课听下来也问题不大。<span class="hljs-number">7</span>月<span class="hljs-number">21</span>号，这天去看了梵高的画展，当走进展厅时候，随口说起梵高的故事，我都不知道自己竟然会对这些这么熟悉。“命运决定我生来就是一名冒险家”，其实我现在还不知道未来的方向到底在哪，但是年轻总是需要多些尝试和探索，不停地冒险让我感受到心跳的存在，我并不是在用什么做赌注，我是在感受生命体验生活。很多人不理解我为什么这么拼命，很多朋友也不知道我为什么这么敢去尝试，我内心也是犹豫的，但是我也没什么好失去的，去做了也不会后悔(●ˇ∀ˇ●)那就直接上就完事了。<span class="hljs-number">8</span>月<span class="hljs-number">8</span>号，整周都在跑模拟，不停崩不停跑，这个时候遇到了很多事，整个人都有点崩。<span class="hljs-number">8</span>月<span class="hljs-number">21</span>号，和sy师兄上鹫峰做风洞试验，自己做的比较赶，总而言之还挺顺利。<span class="hljs-number">8</span>月<span class="hljs-number">24</span>号，这是<span class="hljs-number">2019</span>年接到的第n个issue，感觉我挺擅长做problem solver或许咨询行业也许更适合我（有老板给我开<span class="hljs-number">7</span>位数年薪🐎）。<span class="hljs-number">8</span>月<span class="hljs-number">26</span>号，跟H老师发了邮件，希望能在T大做做实验，然后就顺利去汇报啦。<span class="hljs-number">9</span>月<span class="hljs-number">5</span>号，算是过了一个不孤独而且难忘的生日。<span class="hljs-number">9</span>月<span class="hljs-number">6</span>号，在生日之后见到了H老师，然后就越发喜欢这个可爱的导师了，然后在问问题的时候将我理论的缺陷展露无遗，<span class="hljs-number">2019</span>年后边几个月狂补数值模拟理论知识，现在还挺喜欢CFD这个方向的，期待某一天也能在清华有个自己的小工位。<span class="hljs-number">9</span>月<span class="hljs-number">17</span>号，接到很多好消息的一天。或许目前与周围相比我还算OK，但是相比更优秀的人，我还有很大进步空间，需要学习的知识和技能也得继续推进，<span class="hljs-number">2020</span>多看看自己之外的天空吧。<span class="hljs-number">9</span>月<span class="hljs-number">28</span>号，我和我的祖国提前点映，我一直以我是中国人骄傲和自豪。<span class="hljs-number">10</span>月<span class="hljs-number">1</span>号，在宿舍和舍友一起看了阅兵，晚上见了很久都没见的朋友。<span class="hljs-number">10</span>月<span class="hljs-number">12</span>号，第一次看见沙漠，或许之前我对我的专业没有太多感情 ，但是这一刻我觉得希望自己之后做的研究能真正有用，漫漫前路缓缓徐行。<span class="hljs-number">10</span>月<span class="hljs-number">14</span>号，第一次做学术汇报，比较激动，讲下来也特别顺利。<span class="hljs-number">10</span>月<span class="hljs-number">17</span>号，搭建好了自己的博客，以后还能建个网站，方便查询自己写的各种东西。<span class="hljs-number">10</span>月<span class="hljs-number">20</span>号，这天终于结束了半个月没在外边吃饭的酷刑，和yw同学一起吃了串串，只要有吃的就很开心，然后接下来一个月每天晚上自己都在外边加餐（⊙ｏ⊙）<span class="hljs-number">10</span>月<span class="hljs-number">23</span>号，<span class="hljs-number">3</span>ds max半天速成做出一个火车小视频，学软件速度*<span class="hljs-number">100</span>。<span class="hljs-number">10</span>月<span class="hljs-number">27</span>号，<span class="hljs-number">1028</span>全体体验北方传统搓澡。<span class="hljs-number">11</span>月<span class="hljs-number">3</span>号，挑战杯国赛紧张备战，一个人规划自己所有的东西，很多个熬夜的晚上都几近崩溃，想过直接退赛，想过不去比赛，想过直接在宿舍睡大觉。再让我一个人打一次比赛，我觉得到市赛我就退赛了吧。每次和家里打电话都是让我别那么累，其实大三我动摇了，我也可以选择回家过着安逸舒服的生活，越走的确越难，但是生活它不是热血动漫，我也没有主角光环，就让所有的难题变成刺激吧，毕竟我这么喜欢挑战。<span class="hljs-number">11</span>月<span class="hljs-number">6</span>号，挑战杯比赛前夕，这个时候我前半个月每天睡眠时间不超过<span class="hljs-number">5</span>H，熬夜已经熬到感觉走在路上整个人都是轻飘飘的。<span class="hljs-number">11</span>月<span class="hljs-number">8</span>号，听了丁肇中院士的讲座，第一次听大科学家做讲座，虽然是不同领域的研究，听完还是受益匪浅。<span class="hljs-number">11</span>月<span class="hljs-number">10</span>号，路演前一天，我还没准备讲稿，也不是我自己拖延，要想把一个人的项目展示好，一个人得做好一个团队的事情。<span class="hljs-number">11</span>月<span class="hljs-number">14</span>号，挑战杯完美落幕，虽只身一人走来，幸得众人相助，虽有难过遗憾，好在坚持完成。<span class="hljs-number">11</span>月<span class="hljs-number">24</span>号，和Nancy同学还有她的男票一起约了羊肉汤锅，好就好在我是一个人，不用可怜送女票回去的人(⊙﹏⊙)。<span class="hljs-number">11</span>月<span class="hljs-number">28</span>号，重新买了《梵高手稿 》希望新书给我带来新的体会、新的运气吧，真的一年之间遇见太多糟心的事情，做个梦都需要解梦，一直希望今年真的能不要再如此倒霉了。<span class="hljs-number">11</span>月<span class="hljs-number">29</span>号，北京初雪，大晚上和hwp、杨老师一起吃了饭。<span class="hljs-number">12</span>月<span class="hljs-number">2</span>号，又一次重做了Windows系统，升级硬件之后觉得我的电脑太香了。<span class="hljs-number">12</span>月<span class="hljs-number">4</span>号，装上了win10系统的Ubuntu，配置了the fuck，以后敲代码终于很解气了，不对fuck一下。<span class="hljs-number">12</span>月<span class="hljs-number">26</span>号，第三次跟H老师汇报，然后喜提春节工作月（实际上我现在已经工作了一个半月了）。<span class="hljs-number">12</span>月<span class="hljs-number">28</span>号，看了看火星探测的项目，或许之后也有机会做一些和宇宙相关的东西。<span class="hljs-number">12</span>月<span class="hljs-number">31</span>号，<span class="hljs-number">2019</span>最后一天竟然是流体力学相伴，<span class="hljs-number">2019</span>就这样结束了。</code></pre><p align="center"><b>一切过往皆为序章，未来之路仍是远方。<p align="center"><b>过去所有的遗憾都是未来的惊喜。<p align="center"><b>期待明年的自己。<p align="right"><I>--Veen 2020/03/07]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>文件下载器</title>
    <link href="/2020/03/08/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%99%A8/"/>
    <url>/2020/03/08/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<p>油猴网盘万能助手+XDown</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello Hexo</title>
    <link href="/2020/03/08/hello-world/"/>
    <url>/2020/03/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="提交修改"><a href="#提交修改" class="headerlink" title="提交修改"></a>提交修改</h3><pre><code class="hljs bash">$ hexo g -d</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Chrome浏览器截屏</title>
    <link href="/2019/12/25/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%B1%8F/"/>
    <url>/2019/12/25/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%B1%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="Chrome-谷歌浏览器）快速截取整个页面"><a href="#Chrome-谷歌浏览器）快速截取整个页面" class="headerlink" title="Chrome(谷歌浏览器）快速截取整个页面"></a>Chrome(谷歌浏览器）快速截取整个页面</h1><h2 id="打开网页页面"><a href="#打开网页页面" class="headerlink" title="打开网页页面"></a>打开网页页面</h2><p><img src="C:%5CUsers%5CVEEN_ZHOU%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191225093402263.png" srcset="/img/loading.gif" alt="image-20191225093402263"></p><h2 id="按F12打开开发者控制台"><a href="#按F12打开开发者控制台" class="headerlink" title="按F12打开开发者控制台"></a>按F12打开开发者控制台</h2><p><img src="C:%5CUsers%5CVEEN_ZHOU%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191225093415908.png" srcset="/img/loading.gif" alt="image-20191225093415908"></p><h2 id="使用快捷键ctrl-shift-p，打开一个命令行输入框。然后输入screen-选择【Capture-full-size-screenshot】"><a href="#使用快捷键ctrl-shift-p，打开一个命令行输入框。然后输入screen-选择【Capture-full-size-screenshot】" class="headerlink" title="使用快捷键ctrl+shift+p，打开一个命令行输入框。然后输入screen,选择【Capture full size screenshot】"></a>使用快捷键ctrl+shift+p，打开一个命令行输入框。然后输入screen,选择【Capture full size screenshot】</h2><p><img src="C:%5CUsers%5CVEEN_ZHOU%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191225093458817.png" srcset="/img/loading.gif" alt="image-20191225093458817"></p><p>几秒之后会弹出保存窗口，保存图片即可</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>learnmarkdown-cn</title>
    <link href="/2019/12/23/learnmarkdown-cn/"/>
    <url>/2019/12/23/learnmarkdown-cn/</url>
    
    <content type="html"><![CDATA[ <p>Markdown 由 John Gruber 于 2004年创立. 它旨在成为一门容易读写的语法结构，并可以便利地转换成 HTML（以及其他很多）格式。</p><p>在不同的解析器中，Markdown 的实现方法有所不同。此教程会指出哪些特征是通用，哪一些只对某一解析器有效。</p><ul><li><a href="#HTML标签">HTML标签</a></li><li><a href="#标题">标题</a></li><li><a href="#文本样式">文本样式</a></li><li><a href="#段落">段落</a></li><li><a href="#列表">列表</a></li><li><a href="#代码块">代码块</a></li><li><a href="#水平线分隔">水平线分隔</a></li><li><a href="#链接">链接</a></li><li><a href="#图片">图片</a></li><li><a href="#杂项">杂项</a></li></ul><h2>HTML标签</h2><p>Markdown 是 HTML 的父集，所以任何 HTML 文件都是有效的 Markdown。</p><div class="highlight"><pre><span></span>&lt;!--这意味着我们可以在 Markdown 里使用任何 HTML 元素，比如注释元素，且不会被 Markdown 解析器所影响。不过如果你在 Markdown 文件内创建了 HTML 元素，你将无法在 HTML 元素的内容中使用 Markdown 语法。--&gt;</pre></div><h2>标题</h2><p>通过在文本前加上不同数量的hash(#), 你可以创建相对应的 <code>&lt;h1&gt;</code> 到 <code>&lt;h6&gt;</code> HTML元素。</p><div class="highlight"><pre><span></span><span class="gh">#</span> 这是一个 &lt;h1&gt;<span class="gu">##</span> 这是一个 &lt;h2&gt;<span class="gu">###</span> 这是一个 &lt;h3&gt;<span class="gu">####</span> 这是一个 &lt;h4&gt;<span class="gu">#####</span> 这是一个 &lt;h5&gt;<span class="gu">######</span> 这是一个 &lt;h6&gt;</pre></div><p>实际效果（最终显示时会因设置而看起来不同）：</p><h1>这是一个</h1><h2>这也是一个</h2><h3>这还是一个</h3><h4>这依旧是一个</h4><h5>这真的是一个</h5><h6>这&hellip;是一个</h6><p>对于 <code>&lt;h1&gt;</code> 和 <code>&lt;h2&gt;</code> 元素，Markdown 额外提供了两种添加方式。</p><div class="highlight"><pre><span></span>这是一个 h1=============<h2 id="这是一个-h2"><a href="#这是一个-h2" class="headerlink" title="这是一个 h2"></a>这是一个 h2</h2><p></pre></div></p><h2>文本样式</h2><p>文本的<em>斜体</em>，<strong>粗体</strong>在 Markdown 中可以轻易实现。</p><div class="highlight"><pre><span></span>*此文本为斜体。*<span class="ge">_此文本也是。_</span><p><span class="gs"><strong>此文本为粗体。</strong></span><br><span class="gs"><strong>此文本也是</strong></span></p><p><span class="gs"><strong><em>此文本是斜体加粗体。</em></strong></span><br><span class="gs"><strong><em>或者这样。</em></strong></span><br><em><strong>这个也是！</strong></em><br></pre></div></p><p>GitHub 也支持 Markdown，在 GitHub 的 Markdown 解析器中，我们可以使用~~删除线~~：</p><div class="highlight"><pre><span></span>~~此文本为删除线效果。~~</pre></div><h2>段落</h2><p>段落由一个句子或是多个中间没有空行的句子组成，每个段落由一个或是多个空行分隔开来。（注：部分解析器有无需空行就能换行的设置，这个主要看个人喜好）</p><div class="highlight"><pre><span></span>这是第一段落. 这句话在同一个段落里，好玩么？<p>现在我是第二段落。<br>这句话也在第二段落！</p><p>这句话在第三段落！<br></pre></div></p><p>如果你想插入一个 <code>&lt;br /&gt;</code> 标签，你可以在段末加入两个以上的空格，然后另起一段。</p><p>(译者注：试了一下，很多解析器，并不需要空两个空格，直接换行就会添加一个<code>&lt;br /&gt;</code>)</p><div class="highlight"><pre><span></span>此段落结尾有两个空格（选中以显示）。  <p>上文有一个 &lt;br /&gt; ！<br></pre></div></p><p>段落引用可由 <code>&gt;</code> 字符轻松实现。</p><blockquote><p>对的很轻松</p></blockquote><div class="highlight"><pre><span></span><span class="k">&gt; </span><span class="ge">这是一个段落引用。 你可以</span><span class="k">&gt; </span><span class="ge">手动断开你的句子，然后在每句句子前面添加 `&gt;` 字符。或者让你的句子变得很长，以至于他们自动得换行。</span><span class="k">&gt; </span><span class="ge">只要你的文字以 `&gt;` 字符开头，两种方式无异。</span><p><span class="k">&gt; </span><span class="ge">你也可以对文本进行</span><br>&gt;&gt; 多层引用<br><span class="k">&gt; </span><span class="ge">这多机智啊！</span><br></pre></div></p><h2>列表</h2><ul><li>无序列表可由星号，加号或者减号来创建</li></ul><div class="highlight"><pre><span></span><span class="k">*</span> 项目<span class="k">*</span> 项目<span class="k">*</span> 另一个项目<p>或者</p><ul><li>项目</li><li>项目</li><li>另一个项目</li></ul><p>或者 </p><p><span class="k">-</span> 项目<br><span class="k">-</span> 项目<br><span class="k">-</span> 最后一个项目<br></pre></div></p><p>有序序列可由数字加上点 <code>.</code> 来实现</p><div class="highlight"><pre><span></span><span class="k">1.</span> 项目一<span class="k">2.</span> 项目二<span class="k">3.</span> 项目三</pre></div><p>即使你的数字标签有误，Markdown 依旧会呈现出正确的序号，不过这并不是一个好主意</p><div class="highlight"><pre><span></span><span class="k">1.</span> 项目一<span class="k">1.</span> 项目二<span class="k">1.</span> 项目三</pre></div><p>(此段与上面效果一模一样)</p><p>你也可以使用子列表</p><div class="highlight"><pre><span></span><span class="k">1.</span> 项目一<span class="k">2.</span> 项目二<span class="k">3.</span> 项目三    <span class="k">*</span> 子项目    <span class="k">*</span> 子项目<span class="k">4.</span> 项目四</pre></div><p>你甚至可以使用任务列表，它将会生成 HTML 的选择框（checkboxes）标签。</p><div class="highlight"><pre><span></span>下面方框里包含 &#39;x&#39; 的列表，将会生成选中效果的选择框。<span class="k">- [ ]</span> 任务一需要完成<span class="k">- [ ]</span> 任务二需要完成下面这个选择框将会是选中状态<span class="k">- [x]</span> 这个任务已经完成</pre></div><ul><li>[ ] 你看完了这个任务（注：此选择框是无法直接更改的，即禁用状态。）</li></ul><h2>代码块</h2><p>代码块（HTML中 <code>&lt;code&gt;</code> 标签）可以由缩进四格（spaces）或者一个制表符（tab）实现</p><div class="highlight"><pre><span></span>    This is code    So is this</pre></div><p>在你的代码中，你仍然使用tab（或者四个空格）可以进行缩进操作</p><div class="highlight"><pre><span></span>    my_array.each do |item|        puts item    end</pre></div><p>内联代码可由反引号 ` 实现</p><div class="highlight"><pre><span></span>John 甚至不知道 <span class="sb">`go_to()`</span> 方程是干嘛的!</pre></div><p>在GitHub的 Markdown（GitHub Flavored Markdown）解析器中，你可以使用特殊的语法表示代码块</p><pre><code class="highlight">&#x60;&#x60;&#x60;rubydef foobar    puts "Hello world!"end&#x60;&#x60;&#x60;</code></pre><p>以上代码不需要缩进，而且 GitHub 会根据`&ldquo;后指定的语言来进行语法高亮显示</p><h2>水平线分隔</h2><p>水平线（<code>&lt;hr/&gt;</code>）可由三个或以上的星号或是减号创建，它们之间可以带或不带空格</p><div class="highlight"><pre><span></span>***---<span class="k">-</span> - - ****************<p>下面这个就是示例<br></pre></div></p><hr><h2>链接</h2><p>Markdown 最棒的地方就是便捷的书写链接。把链接文字放在中括号[]内，在随后的括弧()内加入url就可以了。</p><div class="highlight"><pre><span></span>[<span class="nt">点我点我!</span>](<span class="na">http://test.com/</span>)</pre></div><p>你也可以在小括号内使用引号，为链接加上一个标题（title）</p><div class="highlight"><pre><span></span>[<span class="nt">点我点我!</span>](<span class="na">http://test.com/ &quot;连接到Test.com&quot;</span>)</pre></div><p>相对路径也可以有 </p><div class="highlight"><pre><span></span>[<span class="nt">去 music</span>](<span class="na">/music/</span>).</pre></div><p>Markdown同样支持引用形式的链接</p><div class="highlight"><pre><span></span>[点此链接][link1] 以获取更多信息！[看一看这个链接][foobar] 如果你愿意的话。</pre></div><p>对于引用形式，链接的标题可以处于单引号中，括弧中或是忽略。引用名可以在文档的任何地方，并且可以随意命名，只要名称不重复。</p><p>“隐含式命名” 的功能可以让链接文字作为引用名</p><div class="highlight"><pre><span></span>[This][] is a link.</pre></div><p>但这并不常用</p><h2>图片</h2><p>图片与链接相似，只需在前添加一个感叹号</p><div class="highlight"><pre><span></span>![<span class="nt">这是alt,请把鼠标放在图片上</span>](<span class="na">http://imgur.com/myimage.jpg &quot;这是title&quot;</span>)</pre></div><p>引用形式也同样起作用</p><div class="highlight"><pre><span></span>![这是alt][myimage]</pre></div><h2>杂项</h2><h3>自动链接</h3><div class="highlight"><pre><span></span>&lt;http://testwebsite.com/&gt; 与[<span class="nt">http://testwebsite.com/</span>](<span class="na">http://testwebsite.com/</span>) 等同</pre></div><h3>电子邮件的自动链接</h3><div class="highlight"><pre><span></span>&lt;foo@bar.com&gt;</pre></div><h3>转义字符</h3><div class="highlight"><pre><span></span>我希望 <span class="ge">*将这段文字置于星号之间*</span> 但是我不希望它被斜体化, 这么做: \*这段置文字于星号之间\*。</pre></div><p>对比一下：<em>将这段文字置于星号之间</em> 和 *将这段文字置于星号之间*</p><h3>键盘上的功能键</h3><p>在 GitHub 的 Markdown 中，你可以使用 <code>&lt;kbd&gt;</code> 标签来表示功能键。</p><div class="highlight"><pre><span></span>你的电脑死机了？试试&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt;</pre></div><p><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd></p><p>（译注：可能由于网站本身样式问题，效果不明显）</p><h3>表格</h3><p>下面示例的表格长这样：</p><table><thead><tr><th align="left">第一列</th><th align="center">第二列</th><th align="right">第三列</th></tr></thead><tbody><tr><td align="left">我是左对齐</td><td align="center">居个中</td><td align="right">右对齐</td></tr><tr><td align="left">注意</td><td align="center">冒</td><td align="right">号</td></tr></tbody></table><p>工整一点的写法是这样的：</p><div class="highlight"><pre><span></span>| 第一列        | 第二列    | 第三列       || :----------- | :-------: | ----------: || 我是左对齐    | 居个中    | 右对齐       || 注意          | 冒       | 号           |</pre></div><p>好吧，强行对齐字符是很难的。但是，至少比下面这种写法好一点——</p><div class="highlight"><pre><span></span>我是超级超级长的第一列 | 第二列 | 第三列:-- | :-: | --:这真的太丑了 | 药不能 | 停！！！！</pre></div><p>真的是<em>看着令人头晕</em></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Mark</title>
    <link href="/2019/12/19/Mark/"/>
    <url>/2019/12/19/Mark/</url>
    
    <content type="html"><![CDATA[<p align="center">    <font face="华文新魏" size="6">Interesting Mark</font>        </p><a id="more"></a><p>文言文編程語言 A programming language for the ancient Chinese. <a href="http://wenyan-lang.lingdong.works/" target="_blank" rel="noopener">http://wenyan-lang.lingdong.works</a></p><p>交互线性代数 Interactive Linear Algebra <a href="http://textbooks.math.gatech.edu/ila/index.html" target="_blank" rel="noopener">http://textbooks.math.gatech.edu/ila/index.html</a></p><h1 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h1><p>用不同颜色的沙砾代表不同密度的沙进行风沙运动研究 <a href="https://www.sciencedirect.com/science/article/pii/S1875963712000729" target="_blank" rel="noopener">https://www.sciencedirect.com/science/article/pii/S1875963712000729</a></p><p>journal finder <a href="https://journalfinder.elsevier.com/" target="_blank" rel="noopener">https://journalfinder.elsevier.com/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>收藏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10专业版激活及卓越性能开启</title>
    <link href="/2019/12/14/Win10%E4%B8%93%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E5%8F%8A%E5%8D%93%E8%B6%8A%E6%80%A7%E8%83%BD%E5%BC%80%E5%90%AF/"/>
    <url>/2019/12/14/Win10%E4%B8%93%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E5%8F%8A%E5%8D%93%E8%B6%8A%E6%80%A7%E8%83%BD%E5%BC%80%E5%90%AF/</url>
    
    <content type="html"><![CDATA[<p align="center">    <font face="华文新魏" size="6">小白的Win10装机之路（二）</font>        </p><a id="more"></a><h2 id="Win10专业版激活"><a href="#Win10专业版激活" class="headerlink" title="Win10专业版激活"></a>Win10专业版激活</h2><p>Win10专业版可以使用激活码激活也可以使用KMS工具进行激活，为保证系统纯净性推荐使用激活码激活。</p><p>win10专业版激活密钥 ：</p><pre><code class="hljs angelscript">Windows <span class="hljs-number">10</span>专业版：NXRQM-CXV6P-PBGVJ<span class="hljs-number">-293</span>T4-R3KTYWindows <span class="hljs-number">10</span>专业版：W269N-WFGWX-YVC9B<span class="hljs-number">-4</span>J6C9-T83GXWindows <span class="hljs-number">10</span>专业版：<span class="hljs-number">8</span>N67H-M3CY9-QT7C4<span class="hljs-number">-2</span>TR7M-TXYCVWindows <span class="hljs-number">10</span>专业版N：<span class="hljs-number">2</span>B87N<span class="hljs-number">-8</span>KFHP-DKV6R-Y2C8J-PKCKTWindows <span class="hljs-number">10</span>专业版N：MH37W-N47XK-V7XM9-C7227-GCQG9</code></pre><p>激活码使用方法：</p><ol><li>进入win10系统，右键点击开始，选择管理员模式的命令提示符。</li><li>在命令提示符中输入：<code>slmgr -ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</code>（也可以换成上面的其他激活密钥），回车。</li><li>然后再输入<code>slmgr -skms kms.landian.news</code>，回车。</li><li>提示安装成功后继续键入：<code>slmgr -ato</code>，回车，提示激活成功。</li></ol><h2 id="卓越性能开启"><a href="#卓越性能开启" class="headerlink" title="卓越性能开启"></a>卓越性能开启</h2><ol><li>打开“Windows Powershell”，并右键以管理员身份运行。</li><li>在弹出“windows powershell”窗口界面后，输入如下命令代码<code>powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61</code>窗口界面上将显示出“电源方案 GUID: xxxxxxxx (卓越性能)”字符串提示，这时我们便成功开启了“卓越性能模式”。</li></ol><p><img src="C:%5CUsers%5CVEEN_ZHOU%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191214160617256.png" srcset="/img/loading.gif" alt="image-20191214160617256"></p>]]></content>
    
    
    
    <tags>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10装机指南</title>
    <link href="/2019/12/13/Win10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"/>
    <url>/2019/12/13/Win10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<p align="center">    <font face="华文新魏" size="6">小白的Win10装机之路（一）</font>        </p><a id="more"></a><ul><li>没有什么问题是重启解决不了的，如果不行就重启两次，如果实在不行就重装系统吧。</li><li>除了电脑硬件问题，几乎所有的电脑问题都可以通过重装系统，重新配置电脑驱动、软件解决。</li><li>在初次使用一些软件时系统环境变量等不能正确配置，造成的软件索引问题过多，最简单有效的方法就是重装系统。</li><li>原装的BUG10系统经常会出现蓝屏死机情况，同时随着使用时间的推移系统会越来越慢，这些问题也可以通过重装系统解决。</li><li>重装系统其实很简单，小白也能轻松重装，看完这篇推送别找了装系统了吧（逃）。</li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><strong>重装系统广义上也可以分为：</strong></p></blockquote><ol><li><strong>原系统重置</strong></li><li><strong>系统完全重装</strong></li></ol><blockquote><p><strong>Win10磁盘分区表及文件格式</strong></p></blockquote><h3 id="磁盘分区表"><a href="#磁盘分区表" class="headerlink" title="磁盘分区表"></a>磁盘分区表</h3><ol><li><p><strong>主引导记录MBR（Master Boot Record）</strong></p><p>MBR由3部分组成，包括主引导代码，磁盘分区表和磁盘签名。分区表最多可容纳Windows中主分区的4个条目，也就是最多支持四个主分区。</p><p>如果将磁盘初始化为MBR，则无论磁盘有多大，都只能使用2TB或16TB的硬盘容量。如果磁盘使用传统的512B对齐扇区，则只能使用2TB。如果使用4K对齐扇区，则可以使用16TB。</p></li><li><p><strong>GUID分区表GPT（GUID Partition Table）</strong></p><p>GUID分区表由保护性MBR组成，用于防止基于MBR的磁盘实用程序误识别并可能覆盖GPT磁盘；<strong>主要GUID分区表标头</strong>（记录了其自身的大小、位置以及辅助GPT标头），<strong>主GUID分区条目数组</strong>，<strong>备份GUID分区条目数组</strong>和<strong>备份GUID分区表标头</strong>。</p><p>在Windows中，GUID分区表最多可以包含128个分区条目。</p><p>XP及以下系统只能使用MBR分区格式的磁盘，当前Windows操作系统都可以使用GPT分区格式磁盘读写数据。如果主板仅支持Legacy启动，只能从MBR启动Windows，当主板支持UEFI启动时，Windows的64位系统支持从GPT启动。</p></li></ol><h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><p>Windows操作系统支持 NTFS, FAT32, and exFAT三种不同文件系统，在Win10装机时，硬盘格式一般选择NTFS，目前也有在exFAT文件系统上运行的Win10系统。</p><ol><li>NTFS是目前Windows系统中一种现代文件系统，目前使用最广泛，内置的硬盘大多数都是NTFS格式。</li><li>FAT32是一种相对老旧的文件系统，不能像NTFS格式支持很多现代文件格式的属性，但对于不同系统平台具有良好的兼容性，可以在Linux、Mac或Android系统平台上通用。</li><li>exFAT是FAT32文件格式的替代品，很多设备和操作系统都支持该文件系统。</li></ol><h2 id="原系统重置"><a href="#原系统重置" class="headerlink" title="原系统重置"></a>原系统重置</h2><p><img src="C:%5CUsers%5CVEEN_Z~1%5CAppData%5CLocal%5CTemp%5CDitto%5CDragFiles%5Cimage_3.png" srcset="/img/loading.gif" alt="image_3"></p><p>有三个选项能够初始化电脑。</p><ul><li>选项 1：依次选择“开始” &gt;“设置” &gt;“更新和安全” &gt;“恢复”。在“初始化此电脑”下，选择“开始”。<a href="ms-settings:recovery?activationSource=SMC-IA-4026528">打开“恢复”设置</a>。</li><li>选项 2：重启电脑以访问登录屏幕，然后长按 Shift 键，同时依次选择屏幕右下角的“电源”图标 &gt;“重启”。在计算机重启后，依次选择“疑难解答”&gt;“初始化此电脑”。</li><li>选项 3：选择“开始”，然后长按 Shift 键，同时依次选择“电源”图标 &gt;“重启”将计算机重启到恢复模式。在计算机重启后，依次选择“疑难解答”&gt;“初始化此电脑”。</li></ul><blockquote><p>重置电脑是重置所有用户安装的软件，可以选择保存自己的文档，在重置时不会完全删除所有驱动。</p><p>全新安装会删除所有的用户数据，在安装之前也可以保存文档，全新安装后需要重新安装驱动。</p></blockquote><h2 id="系统完全重置"><a href="#系统完全重置" class="headerlink" title="系统完全重置"></a>系统完全重置</h2><blockquote><p>本文教程不使用第三方工具进行装机，如需要第三方工具的装机可以百度“微PE”。</p></blockquote><h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h3><p>确保你的数据已经全部备份，在完全重置的系统安装中建议完全格式化系统盘。对于双硬盘的用户，建议在重装系统前将其取出。</p><blockquote><p>对于正版系统的安装：</p><ul><li>确保 Windows 10 已激活</li><li>在重新安装 Windows 之前，你需要将 Microsoft 帐户链接到数字许可证</li><li>如果你对电脑进行了重大的硬件更换，需要重新激活 Windows 10</li><li>你将需要重新安装与你的许可证匹配的 Windows 版本</li></ul></blockquote><h3 id="使用安装介质执行-Windows-10-的干净安装"><a href="#使用安装介质执行-Windows-10-的干净安装" class="headerlink" title="使用安装介质执行 Windows 10 的干净安装"></a>使用安装介质执行 Windows 10 的干净安装</h3><h4 id="制作系统镜像盘"><a href="#制作系统镜像盘" class="headerlink" title="制作系统镜像盘"></a>制作系统镜像盘</h4><ol><li>在工作电脑上，转到 <a href="http://go.microsoft.com/fwlink/p/?LinkID=616447" target="_blank" rel="noopener">Microsoft 软件下载网站</a> <a href="http://go.microsoft.com/fwlink/p/?LinkID=616447" target="_blank" rel="noopener">http://go.microsoft.com/fwlink/p/?LinkID=616447</a> ，然后选择<strong>立即下载工具</strong>。</li></ol><p>![1](D:\Veen’s Files\win10\1.png)</p><p>![2](D:\Veen’s Files\win10\2.png)</p><ol start="2"><li>在下载完成后，从你的桌面中打开该工具，然后在询问是否要使用工具对设备进行更改时，选择“是”。</li><li>当出现 Windows 10 设置指南时，请接受许可条款和协议。</li></ol><p>![3](D:\Veen’s Files\win10\3.png)</p><ol start="4"><li>选择<strong>从其他电脑中创建安装介质（U 盘、DVD 或 ISO 文件）</strong>，然后选择“下一步”。</li></ol><p>![5](D:\Veen’s Files\win10\5.png)</p><ol start="5"><li>选择语言、版本和体系结构（64 位或 32 位），推荐使用64位系统。</li></ol><p>![6](D:\Veen’s Files\win10\6.png)</p><ol start="6"><li>按照这些步骤创建安装介质，然后选择“完成”。</li></ol><p>![9](D:\Veen’s Files\win10\9.png)</p><p>![7](D:\Veen’s Files\win10\7.png)</p><p>![8](D:\Veen’s Files\win10\8.png)</p><blockquote><p>此时系统镜像已经写入U盘，此时开始准备重新装机，请确认重要文件已经备份完毕。</p></blockquote><h4 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h4><blockquote><p>在安装系统之前请确认电脑的启动模式是UEFI模式。</p><ul><li>在计算机启动时连续按特定键进入EFI设置。通常台式机为Del，笔记本电脑为F2。按Esc键将提供完整菜单，然后选择BIOS设置。</li><li>在“Boot”选项卡下找到Legacy / UEFI引导模式配置。禁用（<em>Disabled</em>）Legacy并启用（<em>Enabled</em>）UEFI。</li><li>按F10保存设置，然后退出。</li></ul></blockquote><ol><li>接下来重启电脑，在重启之后按下选择启动介质的快捷键，选择“<strong>USB Storage Device</strong>”。</li></ol><blockquote><p>常见品牌的选择启动介质的快捷键：联想和戴尔是F12；华硕：F8 其他的：百度一下，你就知道。</p></blockquote><ol start="2"><li>此时U盘引导系统进入Win10安装程序，请选择最符合你的需求的选项，然后选择“下一步”。（家庭版正版重装请选择家庭版，需要重装专业版可选择专业版，在之后一篇推送中提供专业版破解指南） </li><li>选择“立即安装”，然后选中“我接受”框。</li><li>选择“下一步”，然后选择“自定义: 仅安装 Windows (高级)”。</li><li>你的设备将显示驱动器和分区的列表，删除/格式化系统盘，多个硬盘用户请勿删除有重要数据的硬盘。</li><li>选择“删除”系统盘所有分区。指示“未分配空间”的驱动器除外。完成后，仅应保留驱动器 0 未分配空间。（双SSD用户可能为驱动器1，因此安装前最好取出第二块硬盘）</li><li>选择“下一步”，（此时如果提示硬盘格式错误，请使用命令行diskpart工具 进行修复，参照文末TIPS）Windows 安装程序屏幕将显示“正在安装 Windows”。安装完成后，设备可能提示重启，在有倒计时的界面不要自行点击重启，等待自动重启。</li><li>之后就是进入系统初始界面，按照提示进行设置即可。</li><li>进入系统后点击更新，更新所有系统驱动。</li></ol><p><img src="C:%5CUsers%5CVEEN_ZHOU%5CPictures%5C1.png" srcset="/img/loading.gif" alt="1"></p><p><img src="C:%5CUsers%5CVEEN_ZHOU%5CPictures%5C2.png" srcset="/img/loading.gif" alt="2"></p><h2 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h2><p>重装时出现硬盘分区表错误可以使用命令行diskpart工具进行磁盘修复、格式转换。在重装系统界面按“shift+F10”调出命令提示符，输入diskpart进入分区程序，部分命令说明如下：</p><p><strong><code>list disk</code></strong>：显示本机安装的硬盘，编号为0、1、2……只有一块硬盘的用户只有“磁盘0”</p><p><strong><code>select disk X</code></strong>：选择上面列出的硬盘</p><p><strong><code>clean</code></strong>：清空选中硬盘原有分区信息</p><p><strong><code>convert gpt</code></strong>：将分区格式转换为GPT</p><p><strong><code>list partition</code></strong>：显示已有分区</p><p><strong><code>create partition efi/msr/primary size=n</code></strong>：新建EFI/MSR/主分区，单位为MB</p>]]></content>
    
    
    
    <tags>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>待整理</title>
    <link href="/2019/12/08/%E5%BE%85%E6%95%B4%E7%90%86/"/>
    <url>/2019/12/08/%E5%BE%85%E6%95%B4%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>您的<strong><a href="mailto:veenzhou@gmail.com">veenzhou@gmail.com</a>的</strong> API密钥为：</p><pre><code class="hljs gcode">B<span class="hljs-number">0</span>hx<span class="hljs-number">82</span><span class="hljs-meta">O2</span>ksQVFvaB<span class="hljs-number">3</span>e<span class="hljs-number">3</span>vEpYojgjVoVBXq<span class="hljs-number">8</span>tcRQWf</code></pre><p>您可以开始使用此键来发出Web服务请求。发出网络请求时，只需在URL中传递密钥即可。这是一个例子：</p><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>api.nasa.gov<span class="hljs-regexp">/planetary/</span>apod？api_key = B0hx82O2ksQVFvaB3e3vEpYojgjVoVBXq8tcRQWf</code></pre><p>如需其他支持，请<a href="mailto:nasa-data@lists.arc.nasa.gov">与我们联系</a>。与我们联系时，请告诉我们您正在访问哪种API，并提供以下帐户详细信息，以便我们快速找到您：</p><p>帐户电子邮件：<a href="mailto:veenzhou@gmail.com">veenzhou@gmail.com</a><br>帐户ID：42750dfc-bde1-4e5b-bece-fcf4e68c1d6d</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>随手记</title>
    <link href="/2019/12/08/%E9%9A%8F%E6%89%8B%E8%AE%B0/"/>
    <url>/2019/12/08/%E9%9A%8F%E6%89%8B%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CFD Case Test</title>
    <link href="/2019/12/08/CFD%20Case%20Test/"/>
    <url>/2019/12/08/CFD%20Case%20Test/</url>
    
    <content type="html"><![CDATA[<h1 id="网格无关性检验"><a href="#网格无关性检验" class="headerlink" title="网格无关性检验"></a>网格无关性检验</h1><p><a href="https://www.grc.nasa.gov/www/wind/valid/tutorial/spatconv.html" target="_blank" rel="noopener">Reprinted From NASA V&amp;A</a> </p><h2 align="center" class="style3">Examining Spatial (Grid) Convergence</h2><!-------------------------------------------------------------------------><h3 class="style1">Introduction </h3><p> The examination of the spatial convergence of a simulation is a straight-forward method fordetermining the <i>ordered</i> <a href="errors.html">discretizationerror</a> in a CFD simulation.  The method involves performing thesimulation on two or more successively finer grids.  The term <i>gridconvergence study</i> is equivalent to the commonly used term <i>gridrefinement study</i>. </p><p> As the grid is refined (grid cells become smaller and the numberof cells in the flow domain increase) and the time step is refined (reduced) the spatial and temporal discretization errors, respectively,should asymptotically approaches zero, excluding computer round-off error.</p><p> Methods for examining the spatial and temporal convergence of CFDsimulations are presented in the book by <ahref="bibliog.html#Roach94">Roache</a>.  They are based on use ofRichardson's extrapolation.  A summary of the method is presentedhere.</p><p> A general discussion of <a href="errors.html">errors in CFD computations</a> is available for background.</p><p> We will mostly likely want to determine the error band for theengineering quantities obtained from the finest grid solution.However, if the CFD simulations are part of a design study that mayrequire tens or hundreds of simulations, we may want to use one of thecoarser grids.  Thus we may also want to be able to determine the erroron the coarser grid.</p><!-------------------------------------------------------------------------><h3 class="style1">Grid Considerations for a Grid Convergence Study</h3><p> The easiest approach for generating the series of grids is togenerate a grid with what one would consider <i>fine</i> grid spacing,perhaps reaching the upper limit of one's tolerance for generating agrid or waiting for the computation on that grid to converge.  Thencoarser grids can be obtained by removing every other grid line in eachcoordinate direction.  This can be continued to create additionallevels of coarser grids.  In generating the fine grid, one can build inthe <b>n</b> levels of coarser grids by making sure that the number ofgrid points in each coordinate direction satisfies the relation</p><p align="center"><b> N = 2<sup>n</sup> m + 1</b></p><p> where <b>m</b> is an integer.  For example, if two levels of coarsergrids are desired (i.e. fine, medium, and coarse grids) then the numberof grid points in each coordinate direction must equal <b>4 m + 1</b>.The <b>m</b> may be different for each coordinate direction.</p><p> The <a href="http://www.grc.nasa.gov/WWW/winddocs" target="_blank" rel="noopener">WIND</a> code has a <a href="http://www.grc.nasa.gov/WWW/winddocs/user/keywords/sequence.html" target="_blank" rel="noopener">gridsequencing control</a> that will solve the solution on the coarser gridwithout having to change the grid input file, boundary conditionsettings, or the input data file.  Further, the converged solution onthe coarser grid then can be used directly as the initial solution onthe finer grid.  This option was originally used to speed upconvergence of solutions; however, can be used effectively for a gridconvergence study.</p><p> It is not necessary to halve the number of grid points in eachcoordinate direction to obtain the coarser grid.  <i>Non-integer</i> gridrefinement or coarsening can be used.  This may be desired since<i>halfing</i> a grid may put the solution out of the asymptotic range.Non-integer grid refinement or coarsening will require the generationof a new grid.  It is important to maintain the same grid generationparameters as the original grid. One approach is to select several gridspacings as reference grid spacings.  One should be the grid spacingnormal to the walls.  Others may be spacings at flow boundaries, atjunctures in the geometry, or at zonal interfaces.  Upon picking theratio as which the grid is to be refined or coarsened, this same ratiois applied to these spacings.  The number of grid points are thenadjusted according to grid quality parameters, such as grid spacingratio limits.  The surface and volume grids are then generated usingthe same methods as the original grid.  The grid refinement ratioshould be a minimum of <b>r &gt;= 1.1</b> to allow the discretizationerror to be differentiated from other error sources (iterativeconvergence errors, computer round-off, etc...).</p><!-------------------------------------------------------------------------><h3 class="style1">Order of Grid Convergence</h3><p> The order of grid convergence involves the behavior of the solutionerror defined as the difference between the discrete solution and theexact solution,</p><p align="center"><img src="eq_error1.gif" srcset="/img/loading.gif" alt="Formula is described in the surrounding text"></p><p> where <b>C</b> is a constant, <b>h</b> is some measure of gridspacing, and <b>p</b> is the order of convergence.  A &quot;second-order&quot;solution would have <b>p = 2</b>.</p><p> A CFD code uses a numerical algorithm that will provide a <i>theoretical order of convergence</i>; however, the boundary conditions,numerical models, and grid will reduce this order so that the <i>observed order of convergence</i> will likely be lower.</p> <p> Neglecting higher-order terms and taking the logarithm of both sides of the above equation results in: </p> <p align="center"><img src="eq_logerror.gif" srcset="/img/loading.gif" alt="formula is described in the surrounding text"></p><p> The order of convergence <b>p</b> can be obtained from the slope of thecurve of <b>log(E)</b> versus <b>log(h)</b>.   If such data pointsare available, the slope can be read from the graph or the slope can becomputed from a least-squares fit of the data.  The least-squares will likely be inaccurate if there are only a few data points.</p><p> A more direct evaluation of <b>p</b> can be obtained from three solutions using a constant grid refinement ratio <b>r</b>, </p><p align="center"><img src="eq_porder1.gif" srcset="/img/loading.gif" alt="formula is described in the surrounding text"></p><p> The <i>order of accuracy</i> is determined by the order of theleading term of the <i>truncation error</i> and is represented withrespect to the scale of the discretization, <b>h</b>. The <i>localorder of accuracy</i> is the order for the stencil representing thediscretization of the equation at one location in the grid. The<i>global order of accuracy</i> considers the propagation andaccumulation of errors outside the stencil. This propagation causes theglobal order of accuracy to be, in general, one degree less than thelocal order of accuracy.  The order of accuracy of the boundaryconditions can be one order of accuracy lower than the interior orderof accuracy without degrading the overall global accuracy.</p><!-------------------------------------------------------------------------><h3 class="style1">Asymptotic Range of Convergence</h3><p> Assessing the accuracy of code and caluculations requires that the gridis sufficiently refined such that the solution is in the asymptoticrange of convergence. The asymptotic range of convergence is obtainedwhen the grid spacing is such that the various grid spacings <b>h</b> anderrors <b>E</b> result in the constancy of <b>C</b>,</p><p align="center"><b> C = E / h<sup>p</sup> </b></p><p> Another check of the asymptotic range will be discussed in the section on the grid convergence index.</p><!-------------------------------------------------------------------------><h3 class="style1">Richardson Extrapolation</h3><p> Richardson extrapolation is a method for obtaining a higher-orderestimate of the continuum value (value at zero grid spacing) from aseries of lower-order discrete values.</p><p> A simulation will yield a quantity <b>f</b> that can be expressedin a general form by the series expansion:</p><p align="center"><b>   f = f<sub>h=0</sub> + g<sub>1</sub> h + g<sub>2</sub> h<sup>2</sup>     + g<sub>3</sub> h<sup>3</sup> + ...</b></p><p> where <b>h</b> is the grid spacing and the functions<b>g<sub>1</sub></b>, <b>g<sub>2</sub></b>, and <b>g<sub>3</sub></b>are independent of the grid spacing.  The quantity <b>f</b> isconsidered &quot;second-order&quot; if <b>g<sub>1</sub> = 0.0</b>.  The<b>f<sub>h=0</sub></b> is the continuum value at zero grid spacing.</p><p> If one assumes a second-order solution and has computed <b>f</b> ontwo grids of spacing <b>h<sub>1</sub></b> and <b>h<sub>2</sub></b> with<b>h<sub>1</sub></b> being the finer (smaller) spacing, then one canwrite two equations for the above expansion, neglect third-order andhigher terms, and solve for <b>f<sub>h=0</sub></b> to estimate thecontinuum value,</p><p align="center"><img src="eq_rich1.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><p> where the grid refinement ratio is:</p> <p align="center"><b> r = h<sub>2</sub> /  h<sub>1</sub></b></p><p> The Richardson extrapolation can be generalized for a <b>p-th</b>order methods and <b>r</b>-value of grid ratio (which does not have tobe an integer) as:</p><p align="center"><img src="eq_rich2.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><p> Traditionally, Richardson extrapolation has been used with gridrefinement ratios of <b>r = 2</b>.  Thus, the above equation simplifiesto:</p><p align="center"><img src="eq_rich3.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><p> In theory, the above equations for the Richardson extrapolation willprovide a fourth-order estimate of <b>f<sub>h=0</sub></b>, if <b>f<sub>1</sub></b> and <b>f<sub>2</sub></b>were computed using exactly second-order methods.  Otherwise, it willbe a third-order estimate.  In general, we will consider <b>f<sub>h=0</sub></b>to be <b>p+1</b> order accurate.  Richardson extrapolation can be appliedfor the solution at each grid point, or to solution functionals, suchas pressure recovery or drag.  This assumes that the solution isglobally second-order in addition to locally second-order and that thesolution functionals were computed using consistent second-ordermethods.  Other cautions with using Richardson extrapolation(non-conservative, amplification of round-off error, etc...) arediscussed in the book by <a href="bibliog.html#Roachebook">Roache</a>.</p><p> For our purposes we will assume <b>f</b> is a solution functional (i.e.pressure recovery).  The <b>f<sub>h=0</sub></b> is then as an estimate of <b>f</b>in the limit as the grid spacing goes to zero.  One use of<b>f<sub>h=0</sub></b> is to report the value as the an improved estimate of<b>f<sub>1</sub></b> from the CFD study; however, one has to understand the caveatsmentioned above that go along with that value. </p> <p> The other use of <b>f<sub>h=0</sub></b> is to obtain an estimate of thediscretization error that bands <b>f</b> obtained from the CFD.  This usewill now be examined.</p><p> The difference between <b>f<sub>1</sub></b> and <b>f<sub>h=0</sub></b> is one error estimator;however, this requires consideration of the caveats attached to<b>f<sub>h=0</sub></b>.</p><p> We will focus on using <b>f<sub>1</sub></b> and <b>f<sub>2</sub></b> to obtain an error estimate.Examining the generalized Richardson extrapolation equation above, the second term on the right-hand sidecan be considered to be an an error estimator of <b>f<sub>1</sub></b>.  The equation can be expressed as:</p><p align="center"><b>   A<sub>1</sub> =  E<sub>1</sub>   + O( h<sup>p+1</sup>, E<sub>1</sub><sup>2</sup>) </b></p><p> where <b>A<sub>1</sub></b> is the actual fractional error defined as:</p> <p align="center"><b>   A<sub>1</sub> =  ( f<sub>1</sub> - f<sub>h=0</sub> ) / f<sub>h=0</sub> </b></p><p> and <b>E<sub>1</sub></b> is the estimated fractional error for <b>f<sub>1</sub></b> defined as:</p> <p align="center"><img src="eq_eerror1.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><p> where the relative error is defined as:</p><p align="center"><img src="eq_eps1.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><p> This quantity should not be used as an error estimator since it does not take into account <b>r</b> or <b>p</b>.  This may lead to anunderestimation or overestimation of the error.  One could make this quantity artificially small by simply using a grid refinement ratio <b>r</b> close to 1.0.</p><p> The estimated fractional error <b>E<sub>1</sub></b> is an<i>ordered</i> error estimator and a good approximation of thediscretization error on the fine grid if <b>f<sub>1</sub></b> and<b>f<sub>2</sub></b> were obtained with good accuracy (i.e.<b>E<sub>1</sub>&lt;1</b>).  The value of <b>E<sub>1</sub></b> may bemeaningless if <b>f<sub>1</sub></b> and <b>f<sub>h=0</sub></b> are zeroor very small relative to <b>f<sub>2</sub>-f<sub>1</sub></b>.  If suchis the case, then another normalizing value should be used in place of<b>f<sub>1</sub></b>.</p><p> If a large number of CFD computations are to be performed (i.e fora DOE study), one may wish to use the coarser grid with<b>h<sub>2</sub></b>.  We will then want to estimate the error on thecoarser grid.  The Richardson extrapolation can be expressed as:</p><p align="center"><img src="eq_rich4.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><p> The estimated fractional error for <b>f<sub>2</sub></b> is defined as:</p> <p align="center"><img src="eq_eerror2.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><p> Richardson extrapolation is based on a Taylor series representation as indicated in Eqn. \ref{eq:series}.  If there are shocks and other discontinuities present, the Richardson extrapolation is invalid in the region of the discontinuity.  It is still felt that it applies to solution functionals computed from the entire flow field.</p><!-------------------------------------------------------------------------><h3 class="style1">Grid Convergence Index (GCI)</h3><p> <a href="bibliog.html#Roach94">Roache</a> suggests a gridconvergence index <b>GCI</b> to provide a consistent manner inreporting the results of grid convergence studies and perhaps providean error band on the grid convergence of the solution.  The <b>GCI</b>can be computed using two levels of grid; however, three levels arerecommended in order to accurately estimate the order of convergenceand to check that the solutions are within the asymptotic range ofconvergence.</p><p> A consistent numerical analysis will provide a result whichapproaches the actual result as the grid resolution approaches zero.Thus, the discretized equations will approach the solution of theactual equations. One significant issue in numerical computations iswhat level of grid resolution is appropriate. This is a function of theflow conditions, type of analysis, geometry, and other variables. Oneis often left to start with a grid resolution and then conduct a seriesof grid refinements to assess the effect of grid resolution. This isknown as a grid refinement study.</p><p> One must recognize the distinction between a numerical result whichapproaches an asymptotic numerical value and one which approaches thetrue solution. It is hoped that as the grid is refined and resolutionimproves that the computed solution will not change much and approachan asymptotic value (i.e. the true numerical solution). There still maybe error between this asymptotic value and the true physical solutionto the equations.</p><p> <a href="bibliog.html#Roach94">Roache</a> has provided a methodologyfor the uniform reporting of grid refinement studies. &quot;The basic ideais to approximately relate the results from any grid refinement test tothe expected results from a grid doubling using a second-order method.The <b>GCI</b> is based upon a grid refinement error estimator derivedfrom the theory of generalized Richardson Extrapolation.  It isrecommended for use whether or not Richardson Extrapolation is actuallyused to improve the accuracy, and in some cases even if the conditionsfor the theory do not strictly hold.&quot; The object is to provide ameasure of uncertainty of the grid convergence.</p><p> The <b>GCI</b> is a measure of the percentage the computed value isaway from the value of the asymptotic numerical value. It indicates anerror band on how far the solution is from the asymptotic value. Itindicates how much the solution would change with a further refinementof the grid. A small value of <b>GCI</b> indicates that the computationis within the asymptotic range.</p><p> The <b>GCI</b> on the fine grid is defined as:</p> <p align="center"><img src="eq_gcifine1.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><p> where <b>F<sub>s</sub></b> is a factor of safety.  The refinementmay be spatial or in time.  The factor of safety is recommended to be<b>F<sub>s</sub>=3.0</b> for comparisons of two grids and<b>F<sub>s</sub>=1.25</b> for comparisons over three or more grids.The higher factor of safety is recommended for reporting purposes andis quite conservative of the actual errors.</p><p> When a design or analysis activity will involve many CFD simulations (i.e. DOE study), one may want to use the coarser grid <b>h<sub>2</sub></b>.  It is then necessary to quantify the error for the coarser grid.  The <b>GCI</b> for the coarser grid is defined as:</p><p align="center"><img src="eq_gcicoarse1.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text" ></p><p> It is important that each grid level yield solutions that are in the asymptotic range of convergence for the computed solution.  This can be checked by observing two <b>GCI</b> values as computed over three grids,</p><p align="center"><b>GCI<sub>23</sub> = r<sup>p</sup> GCI<sub>12</sub></b></p><!-------------------------------------------------------------------------><h3 class="style1">Required Grid Resolution</h3><p> If a desired accuracy level is known and results from the gridresolution study are available, one can then estimate the gridresolution required to obtain the desired level of accuracy,</p><p align="center"><img src="eq_rstar.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><!-------------------------------------------------------------------------><h3 class="style1">Independent Coordinate Refinement and Mixed Order Methods</h3><p> The grid refinement ratio assumes that the refinement ratio<b>r</b> applies equally in all coordinate directions <b>(i,j,k)</b>for steady-state solutions and also time <b>t</b> for time-dependentsolutions.  If this is not the case, then the grid convergence indicescan be computed for each direction independently and then added to givethe overall grid convergence index,</p><p align="center"><img src="eq_gcisum.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><!-------------------------------------------------------------------------><h3 class="style1">Effective Grid Refinement Ratio</h3><p> If one generates a finer or coarser grid and is unsure of the value of grid refinement ratio to use, one can compute an effective grid refinement ratio as:</p><p align="center"><img src="eq_reffective.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><p> where <b>N</b> is the total number of grid points used for the gridand <b>D</b> is the dimension of the flow domain. This effective gridrefinement ratio can also be used for unstructured grids.</p><!-------------------------------------------------------------------------><h3 class="style1">Example Grid Convergence Study</h3><p> The following example demonstrates the application of the aboveprocedures in conducting a grid convergence study.  The objective ofthe CFD analysis was to determine the pressure recovery for an inlet.The flow field is computed on three grids, each with twice the numberof grid points in the <b>i</b> and <b>j</b> coordinate directions asthe previous grid.  The number of grid points in the <b>k</b> directionremains the same.  Since the flow is axisymmetric in the <b>k</b>direction, we consider the finer grid to be double the next coarsergrid.   The table below indicates the grid information and the resultingpressure recovery computed from the solutions. Each solution wasproperly converged with respect to iterations.  The column indicated by&quot;spacing&quot; is the spacing normalized by the spacing of the finest grid.</p><table border cellpadding=0 rules="none" align="center"><tr ><th align=center scope="col"> Grid </th><th align=center> Normalized Grid Spacing </th><th align=center> Pressure Recovery, Pr </th></tr><tr ><td align=center scope="row"> 1 </td><td align=center> 1 </td><td align=center> 0.97050 </td></tr><tr ><td align=center scope="row"> 2 </td><td align=center> 2 </td><td align=center> 0.96854 </td></tr><tr ><td align=center scope="row"> 3 </td><td align=center> 4 </td><td align=center> 0.96178 </td></tr></table><p> The figure below shows the plot of pressure recoveries with varying grid spacings.  As the grid spacing reduces, the pressure recoveries approach an asymptotic zero-grid spacing value. </p><p> We determine the order of convergence observed from these results,</p><p align="center"><b> p = ln[ ( 0.96178 - 0.96854 ) / ( 0.96854 - 0.97050 ) ]      / ln(2) = 1.786170 </b></p><p> The theoretical order of convergence is <b>p=2.0</b>.  Thedifference is most likely due to grid stretching, grid quality,non-linearities in the solution, presence of shocks, turbulencemodeling, and perhaps other factors.</p><p> We now can apply Richardson extrapolation using the two finestgrids to obtain an estimate of the value of the pressure recovery atzero grid spacing,</p><p align="center"><b> Pr<sub>h=0</sub> = 0.97050 +                  ( 0.97050 - 0.96854 ) / ( 2<sup>1.786170</sup> - 1 ) <br>                 = 0.97050 + 0.00080 = 0.97130 </b></p><p> This value is also plotted on the figure below.</p><p> The grid convergence index for the fine grid solution can now be computed. A factor of safety of <b>F<sub>S</sub>=1.25</b> is used since three grids were used to estimage <b>p</b>.  The <b>GCI</b> for grids 1 and 2 is:</p><p align="center"><b> GCI<sub>12</sub> = 1.25 | ( 0.97050 - 0.96854 ) / 0.97050 |             / ( 2<sup>1.786170</sup> - 1 )            100%  = 0.103083% </b></p><p> The <b>GCI</b> for grids 2 and 3 is:</p><p align="center"><b> GCI<sub>23</sub> = 1.25 | ( 0.96854 - 0.96178 ) / 0.96854 |             / ( 2<sup>1.786170</sup> - 1 )            100%  = 0.356249% </b></p><p> We can now check that the solutions were in the asymptotic range of convergence, </p><p align="center"><b> 0.356249 / ( 2<sup>1.786170</sup> 0.103083 ) = 1.002019    </b></p><p> which is approximately one and indicates that the solutions are well within the asymptotic range of convergence.</p><p> Based on this study we could say that the pressure recovery for the supersonic ramp is estimated to be <b> Pr = 0.97130 </b> with an error band of <b>0.103%</b> or <b>0.001</b>.</p><p align="center"><img src="pr.gif" srcset="/img/loading.gif" alt="Forumla is described in the surrounding text"></p><!-------------------------------------------------------------------------><h3 class="style1">VERIFY: A Fortran program to Perform Calculations Associated with a Grid Convergence Study</h3><p> The Fortran 90 program <a href="verify.f90"> verify.f90</a> was written to carry out the calculations associated with a grid convergence study involving 3 or more grids.  The program is compiled on a unix system through the commands:</p><blockquote><b> f90 verify.f90 -o verify </b></blockquote><p> It reads in an ASCII file (<a href="prD.do">prD.do</a>) through thestandard input unit (5) that contains a list of pairs of grid size andvalue of the observed quantity <b>f</b>.</p> <blockquote><b> verify &lt; <a href="prD.do">prD.do</a> &gt; <a href="prD.out">prD.out</a></b></blockquote><p> It assumes the values from the finest grid are listed first.  The output is then written to the standard output unit (6)  <a href="prD.out">prD.out</a>.The output from the of {\tt verify} for the results of Appendix A are:</p><blockquote><pre> --- VERIFY: Performs verification calculations ---<p> Number of data sets read =  3</p><pre><code>Grid Size     Quantity1.000000      0.9705002.000000      0.9685404.000000      0.961780</code></pre><p> Order of convergence using first three finest grid<br> and assuming constant grid refinement (Eqn. 5.10.6.1)<br> Order of Convergence, p =  1.78618479</p><p> Richardson Extrapolation: Use above order of convergence<br> and first and second finest grids (Eqn. 5.4.1)<br> Estimate to zero grid value, f_exact =  0.971300304</p><p> Grid Convergence Index on fine grids. Uses p from above.<br> Factor of Safety =  1.25</p><p>   Grid     Refinement<br>   Step      Ratio, r       GCI(%)<br>   1  2      2.000000      0.103080<br>   2  3      2.000000      0.356244</p><p> Checking for asymptotic range using Eqn. 5.10.5.2.<br> A ratio of 1.0 indicates asymptotic range.</p><p>  Grid Range    Ratio<br>  12 23      0.997980</p><p> — End of VERIFY —<br></pre></p></blockquote><!-------------------------------------------------------------------------><h3 class="style1">Examples of Grid Converence Studies in the Archive</h3><p>A grid convergence study is performed in the<br><a href="wedge/wedge.html"> Supersonic Wedge</a> case.</p><!-------------------------------------------------------------------------><h3 class="style1">Examples of Grid Converence Studies in Literature</h3><p> Other examples of grid convergence studies that use the procedures outlined above can be found in <a href="bibliog.html#Roachebook">the book by Roache</a> and the paper by <a href="bibliog.html#Steffen95" > Steffen et al.</a>. </p><!-------------------------------------------------------------------------><h3 class="style1">NPARC Alliance Policy with Respect to Grid Converence Studies</h3><p> For the WIND verification and validation effort, it is suggestedthat the above procedures be used when conducting and reporting resultsfrom a grid convergence study.</p><!-------------------------------------------------------------------------><hr><span style="font-weight: bold;">Last Updated:</span> Thursday, 17-Jul-2008 09:46:07 EDT<br><div id="footer"><!-- <img src="images/nasa_logo.gif" srcset="/img/loading.gif" class="right"      width= "50" height="40" alt="NASA meatball" />--><div>  <span style="font-weight: bold;">Responsible NASA Official/Curator:</span>       <a href="mailto:john.w.slater@nasa.gov">John W. Slater</a></div><p><span><span style="font-weight: bold;">Web Policies: </span><br>      <a href="http://www.grc.nasa.gov/Doc/grcwebpolicies.html" target="_blank" rel="noopener">Web Privacy Policy and Important Notices</a></span><br /><br>        <span style="font-weight: bold;">Adobe Reader Download: </span><br>        <a href="http://www.adobe.com/products/acrobat/readstep2.html" target="_blank" rel="noopener" title="Go to Adobe Web Site"><br>        Adobe Reader</a></p><!-- <span class="notprinted"><span style="font-weight: bold;">Adobe Reader Download: </span>          <a href="http://www.adobe.com/products/acrobat/readstep2.html" target="_blank" rel="noopener" title="Go to Adobe Web Site">        Adobe Reader</a></span> --></div></td></tr></table></body></html>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Research</title>
    <link href="/2019/12/06/Research/"/>
    <url>/2019/12/06/Research/</url>
    
    <content type="html"><![CDATA[<p><img src="C:%5CUsers%5CVEEN_ZHOU%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20191206215017237.png" srcset="/img/loading.gif" alt="image-20191206215017237"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux</title>
    <link href="/2019/12/06/Linux/"/>
    <url>/2019/12/06/Linux/</url>
    
    <content type="html"><![CDATA[<p>It is a document for Linux using.  </p><pre><code class="hljs shell">apt-get install --reinstall [Package]</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Git Bash</title>
    <link href="/2019/11/27/Git%20bash/"/>
    <url>/2019/11/27/Git%20bash/</url>
    
    <content type="html"><![CDATA[<p>本文用于记录Git常用语法。</p><a id="more"></a><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="Git-Bash登录"><a href="#Git-Bash登录" class="headerlink" title="Git Bash登录"></a>Git Bash登录</h3><pre><code class="hljs bash">$ git config --global user.name “Your Name” <span class="hljs-comment">#（注意前边是“- -global”，有两个横线） </span>$ git config --global user.email “email@example.com”</code></pre><h3 id="Git-SSH配置"><a href="#Git-SSH配置" class="headerlink" title="Git SSH配置"></a>Git SSH配置</h3><pre><code class="hljs bash">ssh-keygen -t rsa -C “email@example.com”<span class="hljs-comment">#全部回车</span><span class="hljs-comment">#打开.ssh文件夹下的id-rsa.pub文件的内容，复制到ssh key</span></code></pre><h3 id="Git-Bash创建仓库"><a href="#Git-Bash创建仓库" class="headerlink" title="Git Bash创建仓库"></a>Git Bash创建仓库</h3><pre><code class="hljs bash">$ git init newrepo$ git add README <span class="hljs-comment">#将目录下以README文件提交到仓库中</span>$ git commit -m <span class="hljs-string">'初始化项目版本'</span><span class="hljs-comment">#备注功能</span>$ git <span class="hljs-built_in">clone</span> &lt;repo<span class="hljs-comment">###  &lt;directory###  #repo:Git 仓库 directory:本地目录。</span>$ git status <span class="hljs-comment">#查看项目的当前状态</span></code></pre><h3 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h3><pre><code class="hljs bash"><span class="hljs-comment"># 查看工作区和暂存区的状态</span>$ git status <span class="hljs-comment"># 将工作区的文件提交到暂存区</span>$ git add .  <span class="hljs-comment"># 提交到本地仓库</span>$ git commit -m <span class="hljs-string">"本次提交说明"</span><span class="hljs-comment"># add和commit的合并，便捷写法（未追踪的文件无法直接提交到暂存区/本地仓库）</span>$ git commit -am <span class="hljs-string">"本次提交说明"</span>  <span class="hljs-comment"># 将本地分支和远程分支进行关联</span>$ git push -u origin branchName <span class="hljs-comment"># 将本地仓库的文件推送到远程分支</span>$ git push<span class="hljs-comment"># 拉取远程分支的代码</span>$ git pull origin branchName <span class="hljs-comment"># 合并分支</span>$ git merge branchName <span class="hljs-comment"># 查看本地拥有哪些分支</span>$ git branch<span class="hljs-comment"># 查看所有分支（包括远程分支和本地分支）</span>$ git branch -a <span class="hljs-comment"># 切换分支</span>$ git checkout branchName <span class="hljs-comment"># 临时将工作区文件的修改保存至堆栈中</span>$ git stash<span class="hljs-comment"># 将之前保存至堆栈中的文件取出来</span>$ git stash pop</code></pre><h3 id="Git-Bash提交修改"><a href="#Git-Bash提交修改" class="headerlink" title="Git Bash提交修改"></a>Git Bash提交修改</h3><ul><li>远程仓库未创建</li></ul><pre><code class="hljs bash">git init <span class="hljs-comment">#初始化一只本地仓库（或者基于初始化仓库建立项目vue init webpack demoxxxx）</span>git status <span class="hljs-comment">#查看状态</span>git add -A <span class="hljs-comment">#提交所有文件改动</span>git remote add origin ssh地址 <span class="hljs-comment"># 链接远程仓库步骤1</span>git push -u origin master <span class="hljs-comment">#链接远程仓库步骤2</span>git add -A <span class="hljs-comment">#提交所有文件改动</span>git status <span class="hljs-comment">#查看状态</span>git commit -m <span class="hljs-string">"xx"</span> <span class="hljs-comment">#备注功能</span>git status <span class="hljs-comment">#查看状态</span>git pull origin master <span class="hljs-comment">#拉最新代码 （下载）</span>git push origin master <span class="hljs-comment">#推送到远程 （上传）</span></code></pre><hr><ul><li>远程仓库已创建：</li></ul><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> ssh地址 <span class="hljs-comment">#关联远程</span>git remote add origin ssh地址 <span class="hljs-comment">#链接远程仓库步骤1</span>git pull origin master <span class="hljs-comment">#拉最新代码 （下载）</span>git add -A <span class="hljs-comment">#提交所有文件改动</span>git commit -m <span class="hljs-string">"xx"</span> <span class="hljs-comment">#备注功能</span>git push origin master <span class="hljs-comment">#推送到远程 （上传）</span></code></pre><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><pre><code class="hljs bash">$ git add . <span class="hljs-comment">#他会监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。</span>$ git add -u <span class="hljs-comment">#他仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区。add -u 不会提交新文件（untracked file）。（git add --update的缩写）</span>$ git add -A <span class="hljs-comment">#是上面两个功能的合集（git add --all的缩写）</span><span class="hljs-comment"># 添加指定文件到暂存区（追踪新增的指定文件）</span>$ git add [file1] [file2] ...<span class="hljs-comment"># 添加指定目录到暂存区，包括子目录</span>$ git add [dir]<span class="hljs-comment"># 添加当前目录的所有文件到暂存区（追踪所有新增的文件）</span>$ git add .<span class="hljs-comment"># 删除工作区/暂存区的文件</span>$ git rm [file1] [file2] ...<span class="hljs-comment"># 停止追踪指定文件，但该文件会保留在工作区</span>$ git rm --cached [file]<span class="hljs-comment"># 改名工作区/暂存区的文件</span>$ git mv [file-original] [file-renamed]<span class="hljs-comment"># Git 2.0 以下版本</span><span class="hljs-comment">#只作用于文件的新增和修改</span>$ git add .  <span class="hljs-comment">#只作用于文件的修改和删除</span>$ gti add -u<span class="hljs-comment">#作用于文件的增删改</span>$ git add -A <span class="hljs-comment"># Git 2.0 版本</span>$ git add . 等价于 $ git add -A</code></pre><h3 id="Git-Commit"><a href="#Git-Commit" class="headerlink" title="Git Commit"></a>Git Commit</h3><pre><code class="hljs bash"><span class="hljs-comment"># 将暂存区的文件提交到本地仓库并添加提交说明</span>$ git commit -m <span class="hljs-string">"本次提交的说明"</span>   <span class="hljs-comment"># add 和 commit 的合并，便捷写法</span><span class="hljs-comment"># 和 git add -u 命令一样，未跟踪的文件是无法提交上去的</span>$ git commit -am <span class="hljs-string">"本次提交的说明"</span>  <span class="hljs-comment"># 跳过验证继续提交</span>$ git commit --no-verify$ git commit -n<span class="hljs-comment"># 编辑器会弹出上一次提交的信息，可以在这里修改提交信息</span>$ git commit --amend<span class="hljs-comment"># 修复提交，同时修改提交信息</span>$ git commit --amend -m <span class="hljs-string">"本次提交的说明"</span><span class="hljs-comment"># 加入 --no-edit 标记会修复提交但不修改提交信息，编辑器不会弹出上一次提交的信息</span>$ git commit --amend --no-edit</code></pre><h3 id="Git-pull-push"><a href="#Git-pull-push" class="headerlink" title="Git pull push"></a>Git pull push</h3><pre><code class="hljs bash"><span class="hljs-comment"># 将本地仓库的文件推送到远程分支</span><span class="hljs-comment"># 如果远程仓库没有这个分支，会新建一个同名的远程分支</span><span class="hljs-comment"># 如果省略远程分支名，则表示两者同名</span>$ git push &lt;远程主机名<span class="hljs-comment">###  &lt;本地分支名&gt;:&lt;远程分支名&gt;</span>$ git push origin branchname  <span class="hljs-comment"># 如果省略本地分支名，则表示删除指定的远程分支</span><span class="hljs-comment"># 因为这等同于推送一个空的本地分支到远程分支。</span>$ git push origin :master<span class="hljs-comment"># 等同于</span>$ git push origin --delete master<span class="hljs-comment"># 建立当前分支和远程分支的追踪关系</span>$ git push -u origin master<span class="hljs-comment"># 如果当前分支与远程分支之间存在追踪关系</span><span class="hljs-comment"># 则可以省略分支和 -u </span>$ git push<span class="hljs-comment"># 不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机</span>$ git push --all origin<span class="hljs-comment"># 拉取所有远程分支到本地镜像仓库中</span>$ git pull<span class="hljs-comment"># 拉取并合并项目其他人员的一个分支 </span>$ git pull origin branchname  <span class="hljs-comment"># 等同于 fetch + merge</span>$ git fetch origin branchName$ git merge origin/branchName<span class="hljs-comment"># 如果远程主机的版本比本地版本更新，推送时 Git 会报错，要求先在本地做 git pull 合并差异，</span><span class="hljs-comment"># 然后再推送到远程主机。这时，如果你一定要推送，可以使用 –-force 选项 </span><span class="hljs-comment"># （尽量避免使用）</span>$ git push --force origin | git push -f origin</code></pre><h3 id="Git-merge"><a href="#Git-merge" class="headerlink" title="Git merge"></a>Git merge</h3><pre><code class="hljs bash"><span class="hljs-comment"># 默认 fast-forward ，HEAD 指针直接指向被合并的分支</span>$ git merge <span class="hljs-comment"># 禁止快进式合并</span>$ git merge --no-ff $ git merge --squash</code></pre><h3 id="Git-Bash分支管理"><a href="#Git-Bash分支管理" class="headerlink" title="Git Bash分支管理"></a>Git Bash分支管理</h3><pre><code class="hljs bash">$ git branch (branchname) <span class="hljs-comment">#创建分支命令</span>$ git checkout (branchname) <span class="hljs-comment">#切换分支命令</span>$ git merge <span class="hljs-comment">#合并分支</span>$ git branch <span class="hljs-comment">#列出分支</span>$ git branch -d (branchname) <span class="hljs-comment">#删除分支</span><span class="hljs-comment"># 查看本地分支</span>$ git branch | git branch -l <span class="hljs-comment"># 查看远程分支</span>$ git branch -r <span class="hljs-comment"># 查看所有分支（本地分支+远程分支）</span>$ git branch -a <span class="hljs-comment"># 查看所有分支并带上最新的提交信息</span>$ git branch -av <span class="hljs-comment"># 查看本地分支对应的远程分支</span>$ git branch -vv <span class="hljs-comment"># 新建分支</span><span class="hljs-comment"># 在别的分支下新建一个分支，新分支会复制当前分支的内容</span><span class="hljs-comment"># 注意：如果当前分支有修改，但是没有提交到仓库，此时修改的内容是不会被复制到新分支的</span>$ git branch branchname <span class="hljs-comment"># 切换分支(切换分支时，本地工作区，仓库都会相应切换到对应分支的内容)</span>$ git checkout branchname <span class="hljs-comment"># 创建一个 aaa 分支，并切换到该分支 （新建分支和切换分支的简写）</span>$ git checkout -b aaa <span class="hljs-comment"># 可以看做是基于 master 分支创建一个 aaa 分支，并切换到该分支</span>$ git checkout -b aaa master<span class="hljs-comment"># 新建一条空分支（详情请看问题列表）</span>$ git checkout --orphan emptyBranchName$ git rm -rf . <span class="hljs-comment"># 删除本地分支,会阻止删除包含未合并更改的分支</span>$ git brnach -d branchname <span class="hljs-comment"># 强制删除一个本地分支，即使包含未合并更改的分支</span>$ git branch -D branchname  <span class="hljs-comment"># 删除远程分支</span><span class="hljs-comment"># 推送一个空分支到远程分支，其实就相当于删除远程分支</span>$ git push origin  :远程分支名<span class="hljs-comment"># 或者</span>$ git push origin --delete 远程分支名 <span class="hljs-comment"># 修改当前分支名</span>$ git branch -m branchname</code></pre><h3 id="Git-Bash查看提交历史"><a href="#Git-Bash查看提交历史" class="headerlink" title="Git Bash查看提交历史"></a>Git Bash查看提交历史</h3><pre><code class="hljs bash">$ git <span class="hljs-built_in">log</span>$ git <span class="hljs-built_in">log</span> --oneline <span class="hljs-comment">#用 --oneline 选项来查看历史记录的简洁的版本</span></code></pre><h3 id="Git-Bash创建标签"><a href="#Git-Bash创建标签" class="headerlink" title="Git Bash创建标签"></a>Git Bash创建标签</h3><pre><code class="hljs bash">$ git tag -a v1.0 <span class="hljs-comment">#创建标签</span>$ git tag -d v1.1 <span class="hljs-comment">#删除标签</span>$ git show v1.0 <span class="hljs-comment">#查看此版本修改内容</span><span class="hljs-comment"># 默认在 HEAD 上创建一个标签 </span>$ git tag v1.0<span class="hljs-comment"># 指定一个 commit id 创建一个标签 </span>$ git tag v0.9 f52c633<span class="hljs-comment"># 创建带有说明的标签，用 -a 指定标签名，-m 指定说明文字</span>$ git tag -a v0.1 -m <span class="hljs-string">"version 0.1 released"</span> <span class="hljs-comment"># 查看所有标签</span><span class="hljs-comment"># 注意：标签不是按时间顺序列出，而是按字母排序的。</span>$ git tag<span class="hljs-comment"># 查看单个标签具体信息</span>$ git show &lt;tagname&gt;<span class="hljs-comment"># 推送一个本地标签</span>$ git push origin &lt;tagname&gt;<span class="hljs-comment"># 推送全部未推送过的本地标签</span>$ git push origin --tags<span class="hljs-comment"># 删除本地标签</span><span class="hljs-comment"># 因为创建的标签都只存储在本地，不会自动推送到远程。</span><span class="hljs-comment"># 所以，打错的标签可以在本地安全删除。</span>$ git tag -d v0.1<span class="hljs-comment"># 删除一个远程标签（先删除本地 tag ，然后再删除远程 tag）</span>$ git push origin :refs/tags/&lt;tagname&gt;</code></pre><h2 id="进阶用法"><a href="#进阶用法" class="headerlink" title="进阶用法"></a>进阶用法</h2><h3 id="如何解决-gitignore-不起作用问题"><a href="#如何解决-gitignore-不起作用问题" class="headerlink" title="如何解决 .gitignore 不起作用问题"></a>如何解决 .gitignore 不起作用问题</h3><p><code>.gitignore</code> 仅适用于未跟踪的文件。如果您正在跟踪，那么 <code>.gitignore</code> 将不适用；如果想暴力的解决，可以使用如下方法，予以修复：</p><pre><code class="hljs bash">git rm --cached -r .git add .</code></pre><p>更详细的答案，可参见: <a href="https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository" target="_blank" rel="noopener">ignore-files</a>。</p><h3 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h3><pre><code class="hljs bash">git push origin --delete branch-name// eg:git push origin --delete develop</code></pre><h3 id="查看-Git-信息"><a href="#查看-Git-信息" class="headerlink" title="查看 Git 信息"></a>查看 Git 信息</h3><pre><code class="hljs bash"><span class="hljs-comment"># 查看系统配置</span>$ git config --list<span class="hljs-comment"># 查看用户配置</span>$ cat ~/.gitconfig <span class="hljs-comment"># 查看当前项目的 git 配置</span>$ cat .git/config<span class="hljs-comment"># 查看暂存区的文件</span>$ git ls-files<span class="hljs-comment"># 查看本地 git 命令历史</span>$ git reflog<span class="hljs-comment"># 查看所有 git 命令</span>$ git --<span class="hljs-built_in">help</span> -a <span class="hljs-comment"># 查看当前 HEAD 指向</span>$ cat .git/HEAD<span class="hljs-comment"># git 中 D 向下翻一行  F 向下翻页  B 向上翻页  Q 退出</span><span class="hljs-comment"># 查看提交历史</span>$ git <span class="hljs-built_in">log</span> --oneline            --grep=<span class="hljs-string">"关键字"</span>          --graph           --all                --author <span class="hljs-string">"username"</span>               --reverse           -num          -p          --before=  1  day/1  week/1  <span class="hljs-string">"2019-06-06"</span>           --after= <span class="hljs-string">"2019-06-06"</span>          --<span class="hljs-built_in">stat</span>           --abbrev-commit           --pretty=format:<span class="hljs-string">"xxx"</span>          <span class="hljs-comment"># oneline -###  将日志记录一行一行的显示</span><span class="hljs-comment"># grep="关键字" -###  查找日志记录中(commit提交时的注释)与关键字有关的记录</span><span class="hljs-comment"># graph -###  记录图形化显示 ！！！    </span><span class="hljs-comment"># all -###  将所有记录都详细的显示出来</span><span class="hljs-comment"># author "username" -###  查找这个作者提交的记录</span><span class="hljs-comment"># reverse -###  commit 提交记录顺序翻转      </span><span class="hljs-comment"># before -###  查找规定的时间(如:1天/1周)之前的记录   </span><span class="hljs-comment"># num -###  git log -10 显示最近10次提交 ！！！    </span><span class="hljs-comment"># stat -###  显示每次更新的文件修改统计信息，会列出具体文件列表 ！！！</span><span class="hljs-comment"># abbrev-commit -###  仅显示 SHA-1 的前几个字符，而非所有的 40 个字符 ！！！</span><span class="hljs-comment"># pretty=format:"xxx" -###   可以定制要显示的记录格式 ！！！</span><span class="hljs-comment"># p -###  显示每次提交所引入的差异（按 补丁 的格式输出）！！！</span></code></pre><h3 id="Checkout"><a href="#Checkout" class="headerlink" title="Checkout"></a>Checkout</h3><pre><code class="hljs bash"><span class="hljs-comment"># 恢复暂存区的指定文件到工作区</span>$ git checkout &lt;filename&gt;<span class="hljs-comment"># 恢复暂存区的所有文件到工作区</span>$ git checkout .<span class="hljs-comment"># 回滚到最近的一次提交</span><span class="hljs-comment"># 如果修改某些文件后，没有提交到暂存区，此时的回滚是回滚到上一次提交</span><span class="hljs-comment"># 如果是已经将修改的文件提交到仓库了，这时再用这个命令回滚无效</span><span class="hljs-comment"># 因为回滚到的是之前自己修改后提交的版本</span>$ git checkout HEAD $ git checkout HEAD -- filename<span class="hljs-comment"># 回滚到最近一次提交的上一个版本</span>$ git checkout HEAD^ <span class="hljs-comment"># 回滚到最近一次提交的上2个版本</span>$ git checkout HEAD^^ <span class="hljs-comment"># 切换分支，在这里也可以看做是回到项目「当前」状态的方式</span>$ git checkout &lt;当前你正在使用的分支&gt;<span class="hljs-comment"># 切换到某个指定的 commit 版本</span>$ git checkout &lt;commit_id&gt;<span class="hljs-comment"># 切换指定 tag </span>$ git checkout &lt;tag&gt;</code></pre><h3 id="Reset"><a href="#Reset" class="headerlink" title="Reset"></a>Reset</h3><pre><code class="hljs bash"><span class="hljs-comment"># 从暂存区撤销特定文件，但不改变工作区。它会取消这个文件的暂存，而不覆盖任何更改</span>$ git reset &lt;fileName&gt;<span class="hljs-comment"># 重置暂存区最近的一次提交，但工作区的文件不变</span>$ git reset <span class="hljs-comment"># 等价于 </span>$ git reset HEAD （默认）<span class="hljs-comment"># 重置暂存区与工作区，回退到最近一次提交的版本内容</span>$ git reset --hard <span class="hljs-comment"># 重置暂存区与工作区，回退到最近一次提交的上一个版本</span>$ git reset --hard HEAD^ <span class="hljs-comment"># 将当前分支的指针指向为指定 commit（该提交之后的提交都会被移除），同时重置暂存区，但工作区不变</span>$ git reset &lt;commit&gt;<span class="hljs-comment"># 等价于 </span>$ git reset --mixed  &lt;commit&gt;<span class="hljs-comment"># 将当前分支的指针指向为指定 commit（该提交之后的提交都会被移除），但保持暂存区和工作区不变</span>$ git reset --soft  &lt;commit&gt;<span class="hljs-comment"># 将当前分支的指针指向为指定 commit（该提交之后的提交都会被移除），同时重置暂存区、工作区</span>$ git reset --hard  &lt;commit&gt;</code></pre><h3 id="Revert"><a href="#Revert" class="headerlink" title="Revert"></a>Revert</h3><pre><code class="hljs bash"><span class="hljs-comment"># 生成一个撤销最近的一次提交的新提交</span>$ git revert HEAD <span class="hljs-comment"># 生成一个撤销最近一次提交的上一次提交的新提交</span>$ git revert HEAD^ <span class="hljs-comment"># 生成一个撤销最近一次提交的上两次提交的新提交</span>$ git revert HEAD^^ <span class="hljs-comment"># 生成一个撤销最近一次提交的上n次提交的新提交</span>$ git revert HEAD~num <span class="hljs-comment"># 生成一个撤销指定提交版本的新提交</span>$ git revert &lt;commit_id&gt;<span class="hljs-comment"># 生成一个撤销指定提交版本的新提交，执行时不打开默认编辑器，直接使用 Git 自动生成的提交信息</span>$ git revert &lt;commit_id<span class="hljs-comment">###  --no-edit</span></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello Markdown</title>
    <link href="/2019/10/19/Hello%20Markdown/"/>
    <url>/2019/10/19/Hello%20Markdown/</url>
    
    <content type="html"><![CDATA[<h1 id="Hello-Markdown"><a href="#Hello-Markdown" class="headerlink" title="Hello Markdown"></a>Hello Markdown</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本文用于记录Markdown常用语法。</p><p><strong>Markdown</strong> is created by <a href="http://daringfireball.net/" target="_blank" rel="noopener">Daring Fireball</a>; the original guideline is <a href="http://daringfireball.net/projects/markdown/syntax" target="_blank" rel="noopener">here</a>. Its syntax, however, varies between different parsers or editors. <strong>Typora</strong> is using [GitHub Flavored Markdown][GFM].</p><p>每个符号后加一个空格才能正确渲染，推荐在进行写作时切换到源代码模式。</p><a id="more"></a><p>[toc]</p><h2 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h2><h3 id="段落（-ctrl-0）"><a href="#段落（-ctrl-0）" class="headerlink" title="段落（ ctrl+ 0）"></a>段落（ <code>ctrl</code>+ <code>0</code>）</h3><p>在Typora中通过回车 <code>Return</code>来创建新的段落。</p><p> <code>Shift</code> + <code>Return</code> 可用于创建单个换行符。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><pre><code class="hljs markdown"><span class="hljs-section"># 一级标题（ `ctrl`+ `1`）</span><span class="hljs-section">## 二级标题（ `ctrl`+ `2`）</span><span class="hljs-section">### 三级标题（ `ctrl`+ `3`）</span><span class="hljs-section">#### 四级标题（ `ctrl`+ `4`）</span><span class="hljs-section">##### 五级标题（ `ctrl`+ `5`）</span><span class="hljs-section">###### 六级标题（ `ctrl`+ `6`）</span></code></pre><h3 id="块引用（-ctrl-Shift-Q）"><a href="#块引用（-ctrl-Shift-Q）" class="headerlink" title="块引用（ ctrl+ Shift+ Q）"></a>块引用（ <code>ctrl</code>+ <code>Shift</code>+ <code>Q</code>）</h3><pre><code class="hljs markdown"><span class="hljs-quote">&gt; 这是一个文字块</span>&gt;<span class="hljs-quote">&gt; 这是第二个文字块</span>&gt;&gt;## 这是添加在二级标题上的文字块&gt;&gt; 这是二级引用</code></pre><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><pre><code class="hljs markdown"><span class="hljs-section"># 无序列表</span><span class="hljs-bullet">* </span>red<span class="hljs-bullet">* </span>blue<span class="hljs-bullet">* </span>green<span class="hljs-section"># 有序列表</span><span class="hljs-bullet">1. </span>red<span class="hljs-bullet">2. </span>blue<span class="hljs-bullet">3. </span>green</code></pre><h3 id="代码块（-ctrl-Shift-K）"><a href="#代码块（-ctrl-Shift-K）" class="headerlink" title="代码块（ ctrl+ Shift+ K）"></a>代码块（ <code>ctrl</code>+ <code>Shift</code>+ <code>K</code>）</h3><pre><code class="hljs markdown"><span class="hljs-section"># 普通代码块</span>​</code></pre><p>Hello World!<br>​```</p><h1 id="根据语言高亮代码块"><a href="#根据语言高亮代码块" class="headerlink" title="根据语言高亮代码块"></a>根据语言高亮代码块</h1><p>​```ruby<br>require ‘redcarpet’<br>markdown = Redcarpet.new(“Hello World!”)<br>puts markdown.to_html</p><pre><code class="hljs plain"></code></pre><h3 id="公式（-ctrl-Shift-M）"><a href="#公式（-ctrl-Shift-M）" class="headerlink" title="公式（ ctrl+ Shift+ M）"></a>公式（ <code>ctrl</code>+ <code>Shift</code>+ <code>M</code>）</h3><p>$$<br>\frac{\partial p}{\partial x}=0<br>$$</p><p>​```markdown<br>$$<br>\frac{\partial p}{\partial x}=0<br>$$</p><pre><code class="hljs gherkin">You can find more details [here](https://support.typora.io/Math/).<span class="hljs-comment">### 表格</span>1. <span class="hljs-comment">#### 极简方式</span>   ```markdown   name |<span class="hljs-string"> 价格 </span>|<span class="hljs-string">  数量  </span><span class="hljs-string">   -</span>|<span class="hljs-string">-</span>|<span class="hljs-string">-</span><span class="hljs-string">   香蕉 </span>|<span class="hljs-string"> $1 </span>|<span class="hljs-string"> 5 </span>|   苹果 |<span class="hljs-string"> $1 </span>|<span class="hljs-string"> 6 </span>|   草莓 |<span class="hljs-string"> $1 </span>|<span class="hljs-string"> 7 </span>|</code></pre><table><thead><tr><th>name</th><th>价格</th><th>数量</th></tr></thead><tbody><tr><td>香蕉</td><td>$1</td><td>5</td></tr><tr><td>苹果</td><td>$1</td><td>6</td></tr><tr><td>草莓</td><td>$1</td><td>7</td></tr></tbody></table><ol start="2"><li><h4 id="简单方法"><a href="#简单方法" class="headerlink" title="简单方法"></a>简单方法</h4><pre><code class="hljs markdown">name | 111 | 222 | 333 | 444<span class="hljs-bullet">- </span>| :-: | :-: | :-: | -:aaa | bbb | ccc | ddd | eee| fff | ggg| hhh | iii | 000|</code></pre><table><thead><tr><th>name</th><th align="center">111</th><th align="center">222</th><th align="center">333</th><th align="right">444</th></tr></thead><tbody><tr><td>aaa</td><td align="center">bbb</td><td align="center">ccc</td><td align="center">ddd</td><td align="right">eee</td></tr><tr><td>fff</td><td align="center">ggg</td><td align="center">hhh</td><td align="center">iii</td><td align="right">000</td></tr></tbody></table></li><li><p>原生方法</p><pre><code class="hljs markdown">name | 111 | 222 | 333 | 444:-: | :-: | :-: | :-: | :-:aaa | bbb | ccc | ddd | eee| fff | ggg| hhh | iii | 000|</code></pre><table><thead><tr><th align="center">name</th><th align="center">111</th><th align="center">222</th><th align="center">333</th><th align="center">444</th></tr></thead><tbody><tr><td align="center">aaa</td><td align="center">bbb</td><td align="center">ccc</td><td align="center">ddd</td><td align="center">eee</td></tr><tr><td align="center">fff</td><td align="center">ggg</td><td align="center">hhh</td><td align="center">iii</td><td align="center">000</td></tr></tbody></table></li></ol><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><pre><code class="hljs markdown">You can create footnotes like this[^1].[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">Here is the *text* of the **footnote**.</span></code></pre><h3 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h3><pre><code class="hljs markdown"><span class="hljs-bullet">- </span>[x] 已完成<span class="hljs-bullet">- </span>[ ] 待完成</code></pre><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p> <code>***</code> 或者<code>---</code>都可以插入一条分割线。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>输入<code>[toc]</code>用于创建目录。</p><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p>通过如下代码可以便捷的绘制流程图：</p><pre><code class="hljs markdown">st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op</code></pre><pre><code class="hljs flow">st&#x3D;&gt;start: Startop&#x3D;&gt;operation: Your Operationcond&#x3D;&gt;condition: Yes or No?e&#x3D;&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op</code></pre><h2 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><pre><code class="hljs markdown"><span class="hljs-section"># 原生方法</span>This is [<span class="hljs-string">an example</span>](<span class="hljs-link">http://example.com/ "Title"</span>) inline link.[<span class="hljs-string">This link</span>](<span class="hljs-link">http://example.net/</span>) has no title attribute.<span class="hljs-section"># HTML</span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span>This is <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://example.com/"</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"Title"</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"http://example.net/"</span>&gt;</span></span>This link<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span> has no'按住ctrl可以在浏览器中访问链接'<span class="hljs-section"># 插入URLs</span>例如插入邮箱<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">veenzhou@gmail.com</span>&gt;</span></span>有的网址也能直接识别，例如www.google.com</code></pre><h3 id="引用链接"><a href="#引用链接" class="headerlink" title="引用链接"></a>引用链接</h3><pre><code class="hljs markdown">This is [<span class="hljs-string">an example</span>][<span class="hljs-symbol">id</span>] reference-style link.Then, anywhere in the document, you define your link label on a line by itself like this:[<span class="hljs-symbol">id</span>]: <span class="hljs-link">http://example.com/  "Optional Title Here"</span></code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><pre><code class="hljs markdown">![<span class="hljs-string">这个文字我也不知道是干啥的</span>](<span class="hljs-link">/path/to/img.jpg</span>)</code></pre><h3 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h3><pre><code class="hljs markdown"><span class="hljs-emphasis">*此文本为斜体。*</span><span class="hljs-emphasis">_此文本也是。_</span><span class="hljs-strong">**此文本为粗体。**</span><span class="hljs-strong">__此文本也是__</span><span class="hljs-strong">***此文本是斜体加粗体。**</span>*<span class="hljs-strong">**_或者这样。_*</span>*<span class="hljs-strong">*__这个也是！__</span>*~~此文本为删除线效果。~~行内代码Use the <span class="hljs-code">`printf()`</span> function.<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span></span>下划线<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span></span>表情符号:smile:</code></pre><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>HTML基本语法都支持，之后有时间再出教程吧。</p><p>You can use HTML to style content what pure Markdown does not support. For example, use <code>&lt;span style=&quot;color:red&quot;&gt;this text is red&lt;/span&gt;</code> to add text with red color.</p><h3 id="Embed-Contents"><a href="#Embed-Contents" class="headerlink" title="Embed Contents"></a>Embed Contents</h3><p>Some websites provide iframe-based embed code which you can also paste into Typora. For example:</p><iframe height='265' scrolling='no' title='Fancy Animated SVG Menu' src='http://codepen.io/jeangontijo/embed/OxVywj/?height=265&theme-id=0&default-tab=css,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'></iframe><pre><code class="hljs Markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">height</span>=<span class="hljs-string">'265'</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">'no'</span> <span class="hljs-attr">title</span>=<span class="hljs-string">'Fancy Animated SVG Menu'</span> <span class="hljs-attr">src</span>=<span class="hljs-string">'http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2'</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">'no'</span> <span class="hljs-attr">allowtransparency</span>=<span class="hljs-string">'true'</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">'true'</span> <span class="hljs-attr">style</span>=<span class="hljs-string">'width: 100%;'</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></span></code></pre><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>You can use the <code>&lt;video&gt;</code> HTML tag to embed videos. For example:</p><pre><code class="hljs Markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">"xxx.mp4"</span> /&gt;</span></span></code></pre><h3 id="Other-HTML-Support"><a href="#Other-HTML-Support" class="headerlink" title="Other HTML Support"></a>Other HTML Support</h3><p>You can find more details <a href="https://support.typora.io/HTML/" target="_blank" rel="noopener">here</a>.</p>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C Summary</title>
    <link href="/2019/10/18/C-Summary/"/>
    <url>/2019/10/18/C-Summary/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CFD Theory</title>
    <link href="/2019/10/18/CFD-Theory/"/>
    <url>/2019/10/18/CFD-Theory/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>CFD</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Study C++</title>
    <link href="/2019/10/18/Study-C/"/>
    <url>/2019/10/18/Study-C/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Study HTML</title>
    <link href="/2019/10/18/Study-HTML/"/>
    <url>/2019/10/18/Study-HTML/</url>
    
    <content type="html"><![CDATA[<h2 id="常规用法"><a href="#常规用法" class="headerlink" title="常规用法"></a>常规用法</h2><pre><code class="hljs html"><span class="hljs-comment">&lt;!--注释--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">align</span>=<span class="hljs-string">"right"</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">"华文新魏"</span> <span class="hljs-attr">size</span>=<span class="hljs-string">"6"</span>&gt;</span>        定义对齐、字体、字号<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是普通文本 - <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>这是粗体文本<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre><h3 id="Style用法"><a href="#Style用法" class="headerlink" title="Style用法"></a>Style用法</h3><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/css"</span>&gt;</span><span class="css"><span class="hljs-selector-tag">h1</span> &#123;<span class="hljs-attribute">color</span>:red&#125;</span><span class="css"><span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">color</span>:blue&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Header 1<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>A paragraph.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"text/javascript"</span>&gt;</span><span class="actionscript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setFont</span><span class="hljs-params">()</span></span></span>&#123;<span class="javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">"p1"</span>).style.font=<span class="hljs-string">"italic bold 12px arial,serif"</span>;</span>&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">"p1"</span>&gt;</span>This is an example paragraph.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">"setFont()"</span> <span class="hljs-attr">value</span>=<span class="hljs-string">"Change font"</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><h2 id="插入超链接"><a href="#插入超链接" class="headerlink" title="插入超链接"></a>插入超链接</h2><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"https://veenxz.github.io/"</span>&gt;</span>Veen's Blog<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Study Julia</title>
    <link href="/2019/10/18/Study-Julia/"/>
    <url>/2019/10/18/Study-Julia/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Julia</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My first post</title>
    <link href="/2019/10/16/My%20first%20post/"/>
    <url>/2019/10/16/My%20first%20post/</url>
    
    <content type="html"><![CDATA[<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>本博客使用Github与Hexo搭建，使用<a href="https://github.com/fluid-dev/hexo-theme-fluid" target="_blank" rel="noopener">hexo-theme-fluid</a>。</p><p>支持valine评论。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Others</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
