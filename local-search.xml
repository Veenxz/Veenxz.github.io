<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>ffmpeg Documentation</title>
    <link href="/2020/11/24/ffmpeg/"/>
    <url>/2020/11/24/ffmpeg/</url>
    
    <content type="html"><![CDATA[<h1 id="ffmpeg-Documentation"><a href="#ffmpeg-Documentation" class="headerlink" title="ffmpeg Documentation"></a>ffmpeg Documentation</h1><h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><ul><li><a href="https://ffmpeg.org/ffmpeg.html#Synopsis">1 Synopsis</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Description">2 Description</a></li><li>3 Detailed description<ul><li>3.1 Filtering<ul><li><a href="https://ffmpeg.org/ffmpeg.html#Simple-filtergraphs">3.1.1 Simple filtergraphs</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Complex-filtergraphs">3.1.2 Complex filtergraphs</a></li></ul></li><li><a href="https://ffmpeg.org/ffmpeg.html#Stream-copy">3.2 Stream copy</a></li></ul></li><li>4 Stream selection<ul><li>4.1 Description<ul><li><a href="https://ffmpeg.org/ffmpeg.html#Automatic-stream-selection">4.1.1 Automatic stream selection</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Manual-stream-selection">4.1.2 Manual stream selection</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Complex-filtergraphs-1">4.1.3 Complex filtergraphs</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Stream-handling">4.1.4 Stream handling</a></li></ul></li><li><a href="https://ffmpeg.org/ffmpeg.html#Examples">4.2 Examples</a></li></ul></li><li>5 Options<ul><li><a href="https://ffmpeg.org/ffmpeg.html#Stream-specifiers-1">5.1 Stream specifiers</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Generic-options">5.2 Generic options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#AVOptions">5.3 AVOptions</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Main-options">5.4 Main options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Video-Options">5.5 Video Options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Advanced-Video-options">5.6 Advanced Video options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Audio-Options">5.7 Audio Options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Advanced-Audio-options">5.8 Advanced Audio options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Subtitle-options">5.9 Subtitle options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Advanced-Subtitle-options">5.10 Advanced Subtitle options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Advanced-options">5.11 Advanced options</a></li><li>5.12 Preset files<ul><li><a href="https://ffmpeg.org/ffmpeg.html#ffpreset-files">5.12.1 ffpreset files</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#avpreset-files">5.12.2 avpreset files</a></li></ul></li></ul></li><li>6 Examples<ul><li><a href="https://ffmpeg.org/ffmpeg.html#Video-and-Audio-grabbing">6.1 Video and Audio grabbing</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#X11-grabbing">6.2 X11 grabbing</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Video-and-Audio-file-format-conversion">6.3 Video and Audio file format conversion</a></li></ul></li><li><a href="https://ffmpeg.org/ffmpeg.html#See-Also">7 See Also</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Authors">8 Authors</a></li></ul><h2 id="1-Synopsis"><a href="#1-Synopsis" class="headerlink" title="1 Synopsis"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Synopsis">1 Synopsis</a></h2><p>ffmpeg [global_options] {[input_file_options] -i input_url} … {[output_file_options] output_url} …</p><h2 id="2-Description"><a href="#2-Description" class="headerlink" title="2 Description"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Description">2 Description</a></h2><p><code>ffmpeg</code> is a very fast video and audio converter that can also grab from a live audio/video source. It can also convert between arbitrary sample rates and resize video on the fly with a high quality polyphase filter.</p><p><code>ffmpeg</code> reads from an arbitrary number of input “files” (which can be regular files, pipes, network streams, grabbing devices, etc.), specified by the <code>-i</code> option, and writes to an arbitrary number of output “files”, which are specified by a plain output url. Anything found on the command line which cannot be interpreted as an option is considered to be an output url.</p><p>Each input or output url can, in principle, contain any number of streams of different types (video/audio/subtitle/attachment/data). The allowed number and/or types of streams may be limited by the container format. Selecting which streams from which inputs will go into which output is either done automatically or with the <code>-map</code> option (see the Stream selection chapter).</p><p>To refer to input files in options, you must use their indices (0-based). E.g. the first input file is <code>0</code>, the second is <code>1</code>, etc. Similarly, streams within a file are referred to by their indices. E.g. <code>2:3</code> refers to the fourth stream in the third input file. Also see the Stream specifiers chapter.</p><p>As a general rule, options are applied to the next specified file. Therefore, order is important, and you can have the same option on the command line multiple times. Each occurrence is then applied to the next input or output file. Exceptions from this rule are the global options (e.g. verbosity level), which should be specified first.</p><p>Do not mix input and output files – first specify all input files, then all output files. Also do not mix options which belong to different files. All options apply ONLY to the next input or output file and are reset between files.</p><ul><li><p>To set the video bitrate of the output file to 64 kbit/s:</p><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.avi</span> -<span class="hljs-selector-tag">b</span>:v <span class="hljs-number">64</span>k -bufsize <span class="hljs-number">64</span>k output.avi</code></pre></li><li><p>To force the frame rate of the output file to 24 fps:</p><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> <span class="hljs-selector-tag">input</span><span class="hljs-selector-class">.avi</span> -r <span class="hljs-number">24</span> output.avi</code></pre></li><li><p>To force the frame rate of the input file (valid for raw formats only) to 1 fps and the frame rate of the output file to 24 fps:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -r <span class="hljs-number">1</span> -i input.m<span class="hljs-number">2</span>v -r <span class="hljs-number">24</span> output.avi</code></pre></li></ul><p>The format option may be needed for raw input files.</p><h2 id="3-Detailed-description"><a href="#3-Detailed-description" class="headerlink" title="3 Detailed description"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Detailed-description">3 Detailed description</a></h2><p>The transcoding process in <code>ffmpeg</code> for each output can be described by the following diagram:</p><pre><code class="hljs gherkin"> _______              ______________|<span class="hljs-string">       </span>|<span class="hljs-string">            </span>|<span class="hljs-string">              </span>||<span class="hljs-string"> input </span>|<span class="hljs-string">  demuxer   </span>|<span class="hljs-string"> encoded data </span>|<span class="hljs-string">   decoder</span>|<span class="hljs-string"> file  </span>|<span class="hljs-string"> ---------&gt; </span>|<span class="hljs-string"> packets      </span>|<span class="hljs-string"> -----+</span>|<span class="hljs-string">_______</span>|<span class="hljs-string">            </span>|<span class="hljs-string">______________</span>|<span class="hljs-string">      </span>|                                           v                                       _________                                      |<span class="hljs-string">         </span>|                                      |<span class="hljs-string"> decoded </span>|                                      |<span class="hljs-string"> frames  </span>|                                      |<span class="hljs-string">_________</span>| ________             ______________       ||<span class="hljs-string">        </span>|<span class="hljs-string">           </span>|<span class="hljs-string">              </span>|<span class="hljs-string">      </span>||<span class="hljs-string"> output </span>|<span class="hljs-string"> &lt;-------- </span>|<span class="hljs-string"> encoded data </span>|<span class="hljs-string"> &lt;----+</span>|<span class="hljs-string"> file   </span>|<span class="hljs-string">   muxer   </span>|<span class="hljs-string"> packets      </span>|<span class="hljs-string">   encoder</span>|<span class="hljs-string">________</span>|<span class="hljs-string">           </span>|<span class="hljs-string">______________</span>|</code></pre><p><code>ffmpeg</code> calls the libavformat library (containing demuxers) to read input files and get packets containing encoded data from them. When there are multiple input files, <code>ffmpeg</code> tries to keep them synchronized by tracking lowest timestamp on any active input stream.</p><p>Encoded packets are then passed to the decoder (unless streamcopy is selected for the stream, see further for a description). The decoder produces uncompressed frames (raw video/PCM audio/…) which can be processed further by filtering (see next section). After filtering, the frames are passed to the encoder, which encodes them and outputs encoded packets. Finally those are passed to the muxer, which writes the encoded packets to the output file.</p><h3 id="3-1-Filtering"><a href="#3-1-Filtering" class="headerlink" title="3.1 Filtering"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Filtering">3.1 Filtering</a></h3><p>Before encoding, <code>ffmpeg</code> can process raw audio and video frames using filters from the libavfilter library. Several chained filters form a filter graph. <code>ffmpeg</code> distinguishes between two types of filtergraphs: simple and complex.</p><h4 id="3-1-1-Simple-filtergraphs"><a href="#3-1-1-Simple-filtergraphs" class="headerlink" title="3.1.1 Simple filtergraphs"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Simple-filtergraphs">3.1.1 Simple filtergraphs</a></h4><p>Simple filtergraphs are those that have exactly one input and output, both of the same type. In the above diagram they can be represented by simply inserting an additional step between decoding and encoding:</p><pre><code class="hljs gherkin"> _________                        ______________|<span class="hljs-string">         </span>|<span class="hljs-string">                      </span>|<span class="hljs-string">              </span>||<span class="hljs-string"> decoded </span>|<span class="hljs-string">                      </span>|<span class="hljs-string"> encoded data </span>||<span class="hljs-string"> frames  </span>|<span class="hljs-string">\                   _ </span>|<span class="hljs-string"> packets      </span>||<span class="hljs-string">_________</span>|<span class="hljs-string"> \                  /</span>||<span class="hljs-string">______________</span>|             \   __________   /  simple     _\||<span class="hljs-string">          </span>|<span class="hljs-string"> /  encoder</span><span class="hljs-string">  filtergraph   </span>|<span class="hljs-string"> filtered </span>|<span class="hljs-string">/</span><span class="hljs-string">                </span>|<span class="hljs-string"> frames   </span>|                |<span class="hljs-string">__________</span>|</code></pre><p>Simple filtergraphs are configured with the per-stream -filter option (with -vf and -af aliases for video and audio respectively). A simple filtergraph for video can look for example like this:</p><pre><code class="hljs gherkin"> _______        _____________        _______        ________|<span class="hljs-string">       </span>|<span class="hljs-string">      </span>|<span class="hljs-string">             </span>|<span class="hljs-string">      </span>|<span class="hljs-string">       </span>|<span class="hljs-string">      </span>|<span class="hljs-string">        </span>||<span class="hljs-string"> input </span>|<span class="hljs-string"> ---&gt; </span>|<span class="hljs-string"> deinterlace </span>|<span class="hljs-string"> ---&gt; </span>|<span class="hljs-string"> scale </span>|<span class="hljs-string"> ---&gt; </span>|<span class="hljs-string"> output </span>||<span class="hljs-string">_______</span>|<span class="hljs-string">      </span>|<span class="hljs-string">_____________</span>|<span class="hljs-string">      </span>|<span class="hljs-string">_______</span>|<span class="hljs-string">      </span>|<span class="hljs-string">________</span>|</code></pre><p>Note that some filters change frame properties but not frame contents. E.g. the <code>fps</code> filter in the example above changes number of frames, but does not touch the frame contents. Another example is the <code>setpts</code> filter, which only sets timestamps and otherwise passes the frames unchanged.</p><h4 id="3-1-2-Complex-filtergraphs"><a href="#3-1-2-Complex-filtergraphs" class="headerlink" title="3.1.2 Complex filtergraphs"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Complex-filtergraphs">3.1.2 Complex filtergraphs</a></h4><p>Complex filtergraphs are those which cannot be described as simply a linear processing chain applied to one stream. This is the case, for example, when the graph has more than one input and/or output, or when output stream type is different from input. They can be represented with the following diagram:</p><pre><code class="hljs gherkin"> _________|<span class="hljs-string">         </span>||<span class="hljs-string"> input 0 </span>|<span class="hljs-string">\                    __________</span>|<span class="hljs-string">_________</span>|<span class="hljs-string"> \                  </span>|<span class="hljs-string">          </span>|             \   _________    /|<span class="hljs-string"> output 0 </span>|              \ |<span class="hljs-string">         </span>|<span class="hljs-string">  / </span>|<span class="hljs-string">__________</span>| _________     \|<span class="hljs-string"> complex </span>|<span class="hljs-string"> /</span>|<span class="hljs-string">         </span>|<span class="hljs-string">     </span>|<span class="hljs-string">         </span>|<span class="hljs-string">/</span>|<span class="hljs-string"> input 1 </span>|<span class="hljs-string">----&gt;</span>|<span class="hljs-string"> filter  </span>|<span class="hljs-string">\</span>|<span class="hljs-string">_________</span>|<span class="hljs-string">     </span>|<span class="hljs-string">         </span>|<span class="hljs-string"> \   __________</span><span class="hljs-string">               /</span>|<span class="hljs-string"> graph   </span>|<span class="hljs-string">  \ </span>|<span class="hljs-string">          </span>|              / |<span class="hljs-string">         </span>|<span class="hljs-string">   \</span>|<span class="hljs-string"> output 1 </span>| _________   /  |<span class="hljs-string">_________</span>|<span class="hljs-string">    </span>|<span class="hljs-string">__________</span>||<span class="hljs-string">         </span>|<span class="hljs-string"> /</span>|<span class="hljs-string"> input 2 </span>|<span class="hljs-string">/</span>|<span class="hljs-string">_________</span>|</code></pre><p>Complex filtergraphs are configured with the -filter_complex option. Note that this option is global, since a complex filtergraph, by its nature, cannot be unambiguously associated with a single stream or file.</p><p>The -lavfi option is equivalent to -filter_complex.</p><p>A trivial example of a complex filtergraph is the <code>overlay</code> filter, which has two video inputs and one video output, containing one video overlaid on top of the other. Its audio counterpart is the <code>amix</code> filter.</p><h3 id="3-2-Stream-copy"><a href="#3-2-Stream-copy" class="headerlink" title="3.2 Stream copy"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Stream-copy">3.2 Stream copy</a></h3><p>Stream copy is a mode selected by supplying the <code>copy</code> parameter to the -codec option. It makes <code>ffmpeg</code> omit the decoding and encoding step for the specified stream, so it does only demuxing and muxing. It is useful for changing the container format or modifying container-level metadata. The diagram above will, in this case, simplify to this:</p><pre><code class="hljs gherkin"> _______              ______________            ________|<span class="hljs-string">       </span>|<span class="hljs-string">            </span>|<span class="hljs-string">              </span>|<span class="hljs-string">          </span>|<span class="hljs-string">        </span>||<span class="hljs-string"> input </span>|<span class="hljs-string">  demuxer   </span>|<span class="hljs-string"> encoded data </span>|<span class="hljs-string">  muxer   </span>|<span class="hljs-string"> output </span>||<span class="hljs-string"> file  </span>|<span class="hljs-string"> ---------&gt; </span>|<span class="hljs-string"> packets      </span>|<span class="hljs-string"> -------&gt; </span>|<span class="hljs-string"> file   </span>||<span class="hljs-string">_______</span>|<span class="hljs-string">            </span>|<span class="hljs-string">______________</span>|<span class="hljs-string">          </span>|<span class="hljs-string">________</span>|</code></pre><p>Since there is no decoding or encoding, it is very fast and there is no quality loss. However, it might not work in some cases because of many factors. Applying filters is obviously also impossible, since filters work on uncompressed data.</p><h2 id="4-Stream-selection"><a href="#4-Stream-selection" class="headerlink" title="4 Stream selection"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Stream-selection">4 Stream selection</a></h2><p><code>ffmpeg</code> provides the <code>-map</code> option for manual control of stream selection in each output file. Users can skip <code>-map</code> and let ffmpeg perform automatic stream selection as described below. The <code>-vn / -an / -sn / -dn</code> options can be used to skip inclusion of video, audio, subtitle and data streams respectively, whether manually mapped or automatically selected, except for those streams which are outputs of complex filtergraphs.</p><h3 id="4-1-Description"><a href="#4-1-Description" class="headerlink" title="4.1 Description"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Description-1">4.1 Description</a></h3><p>The sub-sections that follow describe the various rules that are involved in stream selection. The examples that follow next show how these rules are applied in practice.</p><p>While every effort is made to accurately reflect the behavior of the program, FFmpeg is under continuous development and the code may have changed since the time of this writing.</p><h4 id="4-1-1-Automatic-stream-selection"><a href="#4-1-1-Automatic-stream-selection" class="headerlink" title="4.1.1 Automatic stream selection"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Automatic-stream-selection">4.1.1 Automatic stream selection</a></h4><p>In the absence of any map options for a particular output file, ffmpeg inspects the output format to check which type of streams can be included in it, viz. video, audio and/or subtitles. For each acceptable stream type, ffmpeg will pick one stream, when available, from among all the inputs.</p><p>It will select that stream based upon the following criteria:</p><ul><li>for video, it is the stream with the highest resolution,</li><li>for audio, it is the stream with the most channels,</li><li>for subtitles, it is the first subtitle stream found but there’s a caveat. The output format’s default subtitle encoder can be either text-based or image-based, and only a subtitle stream of the same type will be chosen.</li></ul><p>In the case where several streams of the same type rate equally, the stream with the lowest index is chosen.</p><p>Data or attachment streams are not automatically selected and can only be included using <code>-map</code>.</p><h4 id="4-1-2-Manual-stream-selection"><a href="#4-1-2-Manual-stream-selection" class="headerlink" title="4.1.2 Manual stream selection"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Manual-stream-selection">4.1.2 Manual stream selection</a></h4><p>When <code>-map</code> is used, only user-mapped streams are included in that output file, with one possible exception for filtergraph outputs described below.</p><h4 id="4-1-3-Complex-filtergraphs"><a href="#4-1-3-Complex-filtergraphs" class="headerlink" title="4.1.3 Complex filtergraphs"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Complex-filtergraphs-1">4.1.3 Complex filtergraphs</a></h4><p>If there are any complex filtergraph output streams with unlabeled pads, they will be added to the first output file. This will lead to a fatal error if the stream type is not supported by the output format. In the absence of the map option, the inclusion of these streams leads to the automatic stream selection of their types being skipped. If map options are present, these filtergraph streams are included in addition to the mapped streams.</p><p>Complex filtergraph output streams with labeled pads must be mapped once and exactly once.</p><h4 id="4-1-4-Stream-handling"><a href="#4-1-4-Stream-handling" class="headerlink" title="4.1.4 Stream handling"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Stream-handling">4.1.4 Stream handling</a></h4><p>Stream handling is independent of stream selection, with an exception for subtitles described below. Stream handling is set via the <code>-codec</code> option addressed to streams within a specific <em>output</em> file. In particular, codec options are applied by ffmpeg after the stream selection process and thus do not influence the latter. If no <code>-codec</code> option is specified for a stream type, ffmpeg will select the default encoder registered by the output file muxer.</p><p>An exception exists for subtitles. If a subtitle encoder is specified for an output file, the first subtitle stream found of any type, text or image, will be included. ffmpeg does not validate if the specified encoder can convert the selected stream or if the converted stream is acceptable within the output format. This applies generally as well: when the user sets an encoder manually, the stream selection process cannot check if the encoded stream can be muxed into the output file. If it cannot, ffmpeg will abort and <em>all</em> output files will fail to be processed.</p><h3 id="4-2-Examples"><a href="#4-2-Examples" class="headerlink" title="4.2 Examples"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Examples">4.2 Examples</a></h3><p>The following examples illustrate the behavior, quirks and limitations of ffmpeg’s stream selection methods.</p><p>They assume the following three input files.</p><pre><code class="hljs apache"><span class="hljs-attribute">input</span> file &#x27;A.avi&#x27;      <span class="hljs-attribute">stream</span> <span class="hljs-number">0</span>: video <span class="hljs-number">640</span>x<span class="hljs-number">360</span>      <span class="hljs-attribute">stream</span> <span class="hljs-number">1</span>: audio <span class="hljs-number">2</span> channels<span class="hljs-attribute">input</span> file &#x27;B.mp<span class="hljs-number">4</span>&#x27;      <span class="hljs-attribute">stream</span> <span class="hljs-number">0</span>: video <span class="hljs-number">1920</span>x<span class="hljs-number">1080</span>      <span class="hljs-attribute">stream</span> <span class="hljs-number">1</span>: audio <span class="hljs-number">2</span> channels      <span class="hljs-attribute">stream</span> <span class="hljs-number">2</span>: subtitles (text)      <span class="hljs-attribute">stream</span> <span class="hljs-number">3</span>: audio <span class="hljs-number">5</span>.<span class="hljs-number">1</span> channels      <span class="hljs-attribute">stream</span> <span class="hljs-number">4</span>: subtitles (text)<span class="hljs-attribute">input</span> file &#x27;C.mkv&#x27;      <span class="hljs-attribute">stream</span> <span class="hljs-number">0</span>: video <span class="hljs-number">1280</span>x<span class="hljs-number">720</span>      <span class="hljs-attribute">stream</span> <span class="hljs-number">1</span>: audio <span class="hljs-number">2</span> channels      <span class="hljs-attribute">stream</span> <span class="hljs-number">2</span>: subtitles (image)</code></pre><h4 id="Example-automatic-stream-selection"><a href="#Example-automatic-stream-selection" class="headerlink" title="Example: automatic stream selection"></a>Example: automatic stream selection</h4><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> A<span class="hljs-selector-class">.avi</span> -<span class="hljs-selector-tag">i</span> B<span class="hljs-selector-class">.mp4</span> out1<span class="hljs-selector-class">.mkv</span> out2<span class="hljs-selector-class">.wav</span> -map <span class="hljs-number">1</span>:<span class="hljs-selector-tag">a</span> -c:<span class="hljs-selector-tag">a</span> copy out3.mov</code></pre><p>There are three output files specified, and for the first two, no <code>-map</code> options are set, so ffmpeg will select streams for these two files automatically.</p><p>out1.mkv is a Matroska container file and accepts video, audio and subtitle streams, so ffmpeg will try to select one of each type.<br>For video, it will select <code>stream 0</code> from B.mp4, which has the highest resolution among all the input video streams.<br>For audio, it will select <code>stream 3</code> from B.mp4, since it has the greatest number of channels.<br>For subtitles, it will select <code>stream 2</code> from B.mp4, which is the first subtitle stream from among A.avi and B.mp4.</p><p>out2.wav accepts only audio streams, so only <code>stream 3</code> from B.mp4 is selected.</p><p>For out3.mov, since a <code>-map</code> option is set, no automatic stream selection will occur. The <code>-map 1:a</code> option will select all audio streams from the second input B.mp4. No other streams will be included in this output file.</p><p>For the first two outputs, all included streams will be transcoded. The encoders chosen will be the default ones registered by each output format, which may not match the codec of the selected input streams.</p><p>For the third output, codec option for audio streams has been set to <code>copy</code>, so no decoding-filtering-encoding operations will occur, or <em>can</em> occur. Packets of selected streams shall be conveyed from the input file and muxed within the output file.</p><h4 id="Example-automatic-subtitles-selection"><a href="#Example-automatic-subtitles-selection" class="headerlink" title="Example: automatic subtitles selection"></a>Example: automatic subtitles selection</h4><pre><code class="hljs css"><span class="hljs-selector-tag">ffmpeg</span> <span class="hljs-selector-tag">-i</span> <span class="hljs-selector-tag">C</span><span class="hljs-selector-class">.mkv</span> <span class="hljs-selector-tag">out1</span><span class="hljs-selector-class">.mkv</span> <span class="hljs-selector-tag">-c</span><span class="hljs-selector-pseudo">:s</span> <span class="hljs-selector-tag">dvdsub</span> <span class="hljs-selector-tag">-an</span> <span class="hljs-selector-tag">out2</span><span class="hljs-selector-class">.mkv</span></code></pre><p>Although out1.mkv is a Matroska container file which accepts subtitle streams, only a video and audio stream shall be selected. The subtitle stream of C.mkv is image-based and the default subtitle encoder of the Matroska muxer is text-based, so a transcode operation for the subtitles is expected to fail and hence the stream isn’t selected. However, in out2.mkv, a subtitle encoder is specified in the command and so, the subtitle stream is selected, in addition to the video stream. The presence of <code>-an</code> disables audio stream selection for out2.mkv.</p><h4 id="Example-unlabeled-filtergraph-outputs"><a href="#Example-unlabeled-filtergraph-outputs" class="headerlink" title="Example: unlabeled filtergraph outputs"></a>Example: unlabeled filtergraph outputs</h4><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> A<span class="hljs-selector-class">.avi</span> -<span class="hljs-selector-tag">i</span> C<span class="hljs-selector-class">.mkv</span> -<span class="hljs-selector-tag">i</span> B<span class="hljs-selector-class">.mp4</span> -filter_complex <span class="hljs-string">&quot;overlay&quot;</span> out1<span class="hljs-selector-class">.mp4</span> out2.srt</code></pre><p>A filtergraph is setup here using the <code>-filter_complex</code> option and consists of a single video filter. The <code>overlay</code> filter requires exactly two video inputs, but none are specified, so the first two available video streams are used, those of A.avi and C.mkv. The output pad of the filter has no label and so is sent to the first output file out1.mp4. Due to this, automatic selection of the video stream is skipped, which would have selected the stream in B.mp4. The audio stream with most channels viz. <code>stream 3</code> in B.mp4, is chosen automatically. No subtitle stream is chosen however, since the MP4 format has no default subtitle encoder registered, and the user hasn’t specified a subtitle encoder.</p><p>The 2nd output file, out2.srt, only accepts text-based subtitle streams. So, even though the first subtitle stream available belongs to C.mkv, it is image-based and hence skipped. The selected stream, <code>stream 2</code> in B.mp4, is the first text-based subtitle stream.</p><h4 id="Example-labeled-filtergraph-outputs"><a href="#Example-labeled-filtergraph-outputs" class="headerlink" title="Example: labeled filtergraph outputs"></a>Example: labeled filtergraph outputs</h4><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> A<span class="hljs-selector-class">.avi</span> -<span class="hljs-selector-tag">i</span> B<span class="hljs-selector-class">.mp4</span> -<span class="hljs-selector-tag">i</span> C<span class="hljs-selector-class">.mkv</span> -filter_complex <span class="hljs-string">&quot;[1:v]hue=s=0[outv];overlay;aresample&quot;</span> \       -map <span class="hljs-string">&#x27;[outv]&#x27;</span> -an        out1<span class="hljs-selector-class">.mp4</span> \                                out2<span class="hljs-selector-class">.mkv</span> \       -map <span class="hljs-string">&#x27;[outv]&#x27;</span> -map <span class="hljs-number">1</span>:<span class="hljs-selector-tag">a</span>:<span class="hljs-number">0</span> out3.mkv</code></pre><p>The above command will fail, as the output pad labelled <code>[outv]</code> has been mapped twice. None of the output files shall be processed.</p><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> A<span class="hljs-selector-class">.avi</span> -<span class="hljs-selector-tag">i</span> B<span class="hljs-selector-class">.mp4</span> -<span class="hljs-selector-tag">i</span> C<span class="hljs-selector-class">.mkv</span> -filter_complex <span class="hljs-string">&quot;[1:v]hue=s=0[outv];overlay;aresample&quot;</span> \       -an        out1<span class="hljs-selector-class">.mp4</span> \                  out2<span class="hljs-selector-class">.mkv</span> \       -map <span class="hljs-number">1</span>:<span class="hljs-selector-tag">a</span>:<span class="hljs-number">0</span> out3.mkv</code></pre><p>This command above will also fail as the hue filter output has a label, <code>[outv]</code>, and hasn’t been mapped anywhere.</p><p>The command should be modified as follows,</p><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> A<span class="hljs-selector-class">.avi</span> -<span class="hljs-selector-tag">i</span> B<span class="hljs-selector-class">.mp4</span> -<span class="hljs-selector-tag">i</span> C<span class="hljs-selector-class">.mkv</span> -filter_complex <span class="hljs-string">&quot;[1:v]hue=s=0,split=2[outv1][outv2];overlay;aresample&quot;</span> \        -map <span class="hljs-string">&#x27;[outv1]&#x27;</span> -an        out1<span class="hljs-selector-class">.mp4</span> \                                  out2<span class="hljs-selector-class">.mkv</span> \        -map <span class="hljs-string">&#x27;[outv2]&#x27;</span> -map <span class="hljs-number">1</span>:<span class="hljs-selector-tag">a</span>:<span class="hljs-number">0</span> out3.mkv</code></pre><p>The video stream from B.mp4 is sent to the hue filter, whose output is cloned once using the split filter, and both outputs labelled. Then a copy each is mapped to the first and third output files.</p><p>The overlay filter, requiring two video inputs, uses the first two unused video streams. Those are the streams from A.avi and C.mkv. The overlay output isn’t labelled, so it is sent to the first output file out1.mp4, regardless of the presence of the <code>-map</code> option.</p><p>The aresample filter is sent the first unused audio stream, that of A.avi. Since this filter output is also unlabelled, it too is mapped to the first output file. The presence of <code>-an</code> only suppresses automatic or manual stream selection of audio streams, not outputs sent from filtergraphs. Both these mapped streams shall be ordered before the mapped stream in out1.mp4.</p><p>The video, audio and subtitle streams mapped to <code>out2.mkv</code> are entirely determined by automatic stream selection.</p><p>out3.mkv consists of the cloned video output from the hue filter and the first audio stream from B.mp4.</p><h2 id="5-Options"><a href="#5-Options" class="headerlink" title="5 Options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Options">5 Options</a></h2><p>All the numerical options, if not specified otherwise, accept a string representing a number as input, which may be followed by one of the SI unit prefixes, for example: ’K’, ’M’, or ’G’.</p><p>If ’i’ is appended to the SI unit prefix, the complete prefix will be interpreted as a unit prefix for binary multiples, which are based on powers of 1024 instead of powers of 1000. Appending ’B’ to the SI unit prefix multiplies the value by 8. This allows using, for example: ’KB’, ’MiB’, ’G’ and ’B’ as number suffixes.</p><p>Options which do not take arguments are boolean options, and set the corresponding value to true. They can be set to false by prefixing the option name with “no”. For example using “-nofoo” will set the boolean option with name “foo” to false.</p><h3 id="5-1-Stream-specifiers"><a href="#5-1-Stream-specifiers" class="headerlink" title="5.1 Stream specifiers"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Stream-specifiers-1">5.1 Stream specifiers</a></h3><p>Some options are applied per-stream, e.g. bitrate or codec. Stream specifiers are used to precisely specify which stream(s) a given option belongs to.</p><p>A stream specifier is a string generally appended to the option name and separated from it by a colon. E.g. <code>-codec:a:1 ac3</code> contains the <code>a:1</code> stream specifier, which matches the second audio stream. Therefore, it would select the ac3 codec for the second audio stream.</p><p>A stream specifier can match several streams, so that the option is applied to all of them. E.g. the stream specifier in <code>-b:a 128k</code> matches all audio streams.</p><p>An empty stream specifier matches all streams. For example, <code>-codec copy</code> or <code>-codec: copy</code> would copy all the streams without reencoding.</p><p>Possible forms of stream specifiers are:</p><ul><li><p>stream_index</p><p>Matches the stream with this index. E.g. <code>-threads:1 4</code> would set the thread count for the second stream to 4. If stream_index is used as an additional stream specifier (see below), then it selects stream number stream_index from the matching streams. Stream numbering is based on the order of the streams as detected by libavformat except when a program ID is also specified. In this case it is based on the ordering of the streams in the program.</p></li><li><p>stream_type[:additional_stream_specifier]</p><p>stream_type is one of following: ’v’ or ’V’ for video, ’a’ for audio, ’s’ for subtitle, ’d’ for data, and ’t’ for attachments. ’v’ matches all video streams, ’V’ only matches video streams which are not attached pictures, video thumbnails or cover arts. If additional_stream_specifier is used, then it matches streams which both have this type and match the additional_stream_specifier. Otherwise, it matches all streams of the specified type.</p></li><li><p>p:program_id[:additional_stream_specifier]</p><p>Matches streams which are in the program with the id program_id. If additional_stream_specifier is used, then it matches streams which both are part of the program and match the additional_stream_specifier.</p></li><li><h1 id="stream-id-or-i-stream-id"><a href="#stream-id-or-i-stream-id" class="headerlink" title="stream_id or i:stream_id"></a>stream_id or i:stream_id</h1><p>Match the stream by stream id (e.g. PID in MPEG-TS container).</p></li><li><p>m:key[:value]</p><p>Matches streams with the metadata tag key having the specified value. If value is not given, matches streams that contain the given tag with any value.</p></li><li><p>u</p><p>Matches streams with usable configuration, the codec must be defined and the essential information such as video dimension or audio sample rate must be present.Note that in <code>ffmpeg</code>, matching by metadata will only work properly for input files.</p></li></ul><h3 id="5-2-Generic-options"><a href="#5-2-Generic-options" class="headerlink" title="5.2 Generic options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Generic-options">5.2 Generic options</a></h3><p>These options are shared amongst the ff* tools.</p><ul><li><p>-L</p><p>Show license.</p></li><li><p>-h, -?, -help, —help [arg]</p><p>Show help. An optional parameter may be specified to print help about a specific item. If no argument is specified, only basic (non advanced) tool options are shown.Possible values of arg are:longPrint advanced tool options in addition to the basic tool options.fullPrint complete list of options, including shared and private options for encoders, decoders, demuxers, muxers, filters, etc.decoder=decoder_namePrint detailed information about the decoder named decoder_name. Use the -decoders option to get a list of all decoders.encoder=encoder_namePrint detailed information about the encoder named encoder_name. Use the -encoders option to get a list of all encoders.demuxer=demuxer_namePrint detailed information about the demuxer named demuxer_name. Use the -formats option to get a list of all demuxers and muxers.muxer=muxer_namePrint detailed information about the muxer named muxer_name. Use the -formats option to get a list of all muxers and demuxers.filter=filter_namePrint detailed information about the filter named filter_name. Use the -filters option to get a list of all filters.bsf=bitstream_filter_namePrint detailed information about the bitstream filter named bitstream_filter_name. Use the -bsfs option to get a list of all bitstream filters.protocol=protocol_namePrint detailed information about the protocol named protocol_name. Use the -protocols option to get a list of all protocols.</p></li><li><p>-version</p><p>Show version.</p></li><li><p>-formats</p><p>Show available formats (including devices).</p></li><li><p>-demuxers</p><p>Show available demuxers.</p></li><li><p>-muxers</p><p>Show available muxers.</p></li><li><p>-devices</p><p>Show available devices.</p></li><li><p>-codecs</p><p>Show all codecs known to libavcodec.Note that the term ’codec’ is used throughout this documentation as a shortcut for what is more correctly called a media bitstream format.</p></li><li><p>-decoders</p><p>Show available decoders.</p></li><li><p>-encoders</p><p>Show all available encoders.</p></li><li><p>-bsfs</p><p>Show available bitstream filters.</p></li><li><p>-protocols</p><p>Show available protocols.</p></li><li><p>-filters</p><p>Show available libavfilter filters.</p></li><li><p>-pix_fmts</p><p>Show available pixel formats.</p></li><li><p>-sample_fmts</p><p>Show available sample formats.</p></li><li><p>-layouts</p><p>Show channel names and standard channel layouts.</p></li><li><p>-colors</p><p>Show recognized color names.</p></li><li><p>-sources device[,opt1=val1[,opt2=val2]…]</p><p>Show autodetected sources of the input device. Some devices may provide system-dependent source names that cannot be autodetected. The returned list cannot be assumed to be always complete.<code>ffmpeg -sources pulse,server=192.168.0.4</code></p></li><li><p>-sinks device[,opt1=val1[,opt2=val2]…]</p><p>Show autodetected sinks of the output device. Some devices may provide system-dependent sink names that cannot be autodetected. The returned list cannot be assumed to be always complete.<code>ffmpeg -sinks pulse,server=192.168.0.4</code></p></li><li><p>-loglevel [flags+]loglevel | -v [flags+]loglevel</p><p>Set logging level and flags used by the library.The optional flags prefix can consist of the following values:‘repeat’Indicates that repeated log output should not be compressed to the first line and the “Last message repeated n times” line will be omitted.‘level’Indicates that log output should add a <code>[level]</code> prefix to each message line. This can be used as an alternative to log coloring, e.g. when dumping the log to file.Flags can also be used alone by adding a ’+’/’-’ prefix to set/reset a single flag without affecting other flags or changing loglevel. When setting both flags and loglevel, a ’+’ separator is expected between the last flags value and before loglevel.loglevel is a string or a number containing one of the following values:‘quiet, -8’Show nothing at all; be silent.‘panic, 0’Only show fatal errors which could lead the process to crash, such as an assertion failure. This is not currently used for anything.‘fatal, 8’Only show fatal errors. These are errors after which the process absolutely cannot continue.‘error, 16’Show all errors, including ones which can be recovered from.‘warning, 24’Show all warnings and errors. Any message related to possibly incorrect or unexpected events will be shown.‘info, 32’Show informative messages during processing. This is in addition to warnings and errors. This is the default value.‘verbose, 40’Same as <code>info</code>, except more verbose.‘debug, 48’Show everything, including debugging information.‘trace, 56’For example to enable repeated log output, add the <code>level</code> prefix, and set loglevel to <code>verbose</code>:<code>ffmpeg -loglevel repeat+level+verbose -i input output</code>Another example that enables repeated log output without affecting current state of <code>level</code> prefix flag or loglevel:<code>ffmpeg [...] -loglevel +repeat</code>By default the program logs to stderr. If coloring is supported by the terminal, colors are used to mark errors and warnings. Log coloring can be disabled setting the environment variable <code>AV_LOG_FORCE_NOCOLOR</code>, or can be forced setting the environment variable <code>AV_LOG_FORCE_COLOR</code>.</p></li><li><p>-report</p><p>Dump full command line and log output to a file named <code>program-YYYYMMDD-HHMMSS.log</code> in the current directory. This file can be useful for bug reports. It also implies <code>-loglevel debug</code>.Setting the environment variable <code>FFREPORT</code> to any value has the same effect. If the value is a ’:’-separated key=value sequence, these options will affect the report; option values must be escaped if they contain special characters or the options delimiter ’:’ (see the “Quoting and escaping” section in the ffmpeg-utils manual).The following options are recognized:fileset the file name to use for the report; <code>%p</code> is expanded to the name of the program, <code>%t</code> is expanded to a timestamp, <code>%%</code> is expanded to a plain <code>%</code>levelset the log verbosity level using a numerical value (see <code>-loglevel</code>).For example, to output a report to a file named ffreport.log using a log level of <code>32</code> (alias for log level <code>info</code>):<code>FFREPORT=file=ffreport.log:level=32 ffmpeg -i input output</code>Errors in parsing the environment variable are not fatal, and will not appear in the report.</p></li><li><p>-hide_banner</p><p>Suppress printing banner.All FFmpeg tools will normally show a copyright notice, build options and library versions. This option can be used to suppress printing this information.</p></li><li><p>-cpuflags flags (<em>global</em>)</p><p>Allows setting and clearing cpu flags. This option is intended for testing. Do not use it unless you know what you’re doing.<code>ffmpeg -cpuflags -sse+mmx ... ffmpeg -cpuflags mmx ... ffmpeg -cpuflags 0 ...</code>Possible flags for this option are:‘x86’‘mmx’‘mmxext’‘sse’‘sse2’‘sse2slow’‘sse3’‘sse3slow’‘ssse3’‘atom’‘sse4.1’‘sse4.2’‘avx’‘avx2’‘xop’‘fma3’‘fma4’‘3dnow’‘3dnowext’‘bmi1’‘bmi2’‘cmov’‘ARM’‘armv5te’‘armv6’‘armv6t2’‘vfp’‘vfpv3’‘neon’‘setend’‘AArch64’‘armv8’‘vfp’‘neon’‘PowerPC’‘altivec’‘Specific Processors’‘pentium2’‘pentium3’‘pentium4’‘k6’‘k62’‘athlon’‘athlonxp’‘k8’</p></li></ul><h3 id="5-3-AVOptions"><a href="#5-3-AVOptions" class="headerlink" title="5.3 AVOptions"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-AVOptions">5.3 AVOptions</a></h3><p>These options are provided directly by the libavformat, libavdevice and libavcodec libraries. To see the list of available AVOptions, use the -help option. They are separated into two categories:</p><ul><li><p>generic</p><p>These options can be set for any container, codec or device. Generic options are listed under AVFormatContext options for containers/devices and under AVCodecContext options for codecs.</p></li><li><p>private</p><p>These options are specific to the given container, device or codec. Private options are listed under their corresponding containers/devices/codecs.</p></li></ul><p>For example to write an ID3v2.3 header instead of a default ID3v2.4 to an MP3 file, use the id3v2_version private option of the MP3 muxer:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i input.flac -id<span class="hljs-number">3</span>v<span class="hljs-number">2</span>_version <span class="hljs-number">3</span> out.mp<span class="hljs-number">3</span></code></pre><p>All codec AVOptions are per-stream, and thus a stream specifier should be attached to them:</p><pre><code class="hljs css"><span class="hljs-selector-tag">ffmpeg</span> <span class="hljs-selector-tag">-i</span> <span class="hljs-selector-tag">multichannel</span><span class="hljs-selector-class">.mxf</span> <span class="hljs-selector-tag">-map</span> 0<span class="hljs-selector-pseudo">:v</span><span class="hljs-selector-pseudo">:0</span> <span class="hljs-selector-tag">-map</span> 0<span class="hljs-selector-pseudo">:a</span><span class="hljs-selector-pseudo">:0</span> <span class="hljs-selector-tag">-map</span> 0<span class="hljs-selector-pseudo">:a</span><span class="hljs-selector-pseudo">:0</span> <span class="hljs-selector-tag">-c</span><span class="hljs-selector-pseudo">:a</span><span class="hljs-selector-pseudo">:0</span> <span class="hljs-selector-tag">ac3</span> <span class="hljs-selector-tag">-b</span><span class="hljs-selector-pseudo">:a</span><span class="hljs-selector-pseudo">:0</span> 640<span class="hljs-selector-tag">k</span> <span class="hljs-selector-tag">-ac</span><span class="hljs-selector-pseudo">:a</span><span class="hljs-selector-pseudo">:1</span> 2 <span class="hljs-selector-tag">-c</span><span class="hljs-selector-pseudo">:a</span><span class="hljs-selector-pseudo">:1</span> <span class="hljs-selector-tag">aac</span> <span class="hljs-selector-tag">-b</span><span class="hljs-selector-pseudo">:2</span> 128<span class="hljs-selector-tag">k</span> <span class="hljs-selector-tag">out</span><span class="hljs-selector-class">.mp4</span></code></pre><p>In the above example, a multichannel audio stream is mapped twice for output. The first instance is encoded with codec ac3 and bitrate 640k. The second instance is downmixed to 2 channels and encoded with codec aac. A bitrate of 128k is specified for it using absolute index of the output stream.</p><p>Note: the -nooption syntax cannot be used for boolean AVOptions, use -option 0/-option 1.</p><p>Note: the old undocumented way of specifying per-stream AVOptions by prepending v/a/s to the options name is now obsolete and will be removed soon.</p><h3 id="5-4-Main-options"><a href="#5-4-Main-options" class="headerlink" title="5.4 Main options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Main-options">5.4 Main options</a></h3><ul><li><p>-f fmt (<em>input/output</em>)</p><p>Force input or output file format. The format is normally auto detected for input files and guessed from the file extension for output files, so this option is not needed in most cases.</p></li><li><p>-i url (<em>input</em>)</p><p>input file url</p></li><li><p>-y (<em>global</em>)</p><p>Overwrite output files without asking.</p></li><li><p>-n (<em>global</em>)</p><p>Do not overwrite output files, and exit immediately if a specified output file already exists.</p></li><li><p>-stream_loop number (<em>input</em>)</p><p>Set number of times input stream shall be looped. Loop 0 means no loop, loop -1 means infinite loop.</p></li><li><p>-c[:stream_specifier] codec (<em>input/output,per-stream</em>)</p></li><li><p>-codec[:stream_specifier] codec (<em>input/output,per-stream</em>)</p><p>Select an encoder (when used before an output file) or a decoder (when used before an input file) for one or more streams. codec is the name of a decoder/encoder or a special value <code>copy</code> (output only) to indicate that the stream is not to be re-encoded.For example<code>ffmpeg -i INPUT -map 0 -c:v libx264 -c:a copy OUTPUT</code>encodes all video streams with libx264 and copies all audio streams.For each stream, the last matching <code>c</code> option is applied, so<code>ffmpeg -i INPUT -map 0 -c copy -c:v:1 libx264 -c:a:137 libvorbis OUTPUT</code>will copy all the streams except the second video, which will be encoded with libx264, and the 138th audio, which will be encoded with libvorbis.</p></li><li><p>-t duration (<em>input/output</em>)</p><p>When used as an input option (before <code>-i</code>), limit the duration of data read from the input file.When used as an output option (before an output url), stop writing the output after its duration reaches duration.duration must be a time duration specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax">(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual</a>.-to and -t are mutually exclusive and -t has priority.</p></li><li><p>-to position (<em>input/output</em>)</p><p>Stop writing the output or reading the input at position. position must be a time duration specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax">(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual</a>.-to and -t are mutually exclusive and -t has priority.</p></li><li><p>-fs limit_size (<em>output</em>)</p><p>Set the file size limit, expressed in bytes. No further chunk of bytes is written after the limit is exceeded. The size of the output file is slightly more than the requested file size.</p></li><li><p>-ss position (<em>input/output</em>)</p><p>When used as an input option (before <code>-i</code>), seeks in this input file to position. Note that in most formats it is not possible to seek exactly, so <code>ffmpeg</code> will seek to the closest seek point before position. When transcoding and -accurate_seek is enabled (the default), this extra segment between the seek point and position will be decoded and discarded. When doing stream copy or when -noaccurate_seek is used, it will be preserved.When used as an output option (before an output url), decodes but discards input until the timestamps reach position.position must be a time duration specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax">(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual</a>.</p></li><li><p>-sseof position (<em>input</em>)</p><p>Like the <code>-ss</code> option but relative to the “end of file”. That is negative values are earlier in the file, 0 is at EOF.</p></li><li><p>-itsoffset offset (<em>input</em>)</p><p>Set the input time offset.offset must be a time duration specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax">(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual</a>.The offset is added to the timestamps of the input files. Specifying a positive offset means that the corresponding streams are delayed by the time duration specified in offset.</p></li><li><p>-itsscale scale (<em>input,per-stream</em>)</p><p>Rescale input timestamps. scale should be a floating point number.</p></li><li><p>-timestamp date (<em>output</em>)</p><p>Set the recording timestamp in the container.date must be a date specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#date-syntax">(ffmpeg-utils)the Date section in the ffmpeg-utils(1) manual</a>.</p></li><li><p>-metadata[:metadata_specifier] key=value (<em>output,per-metadata</em>)</p><p>Set a metadata key/value pair.An optional metadata_specifier may be given to set metadata on streams, chapters or programs. See <code>-map_metadata</code> documentation for details.This option overrides metadata set with <code>-map_metadata</code>. It is also possible to delete metadata by using an empty value.For example, for setting the title in the output file:<code>ffmpeg -i in.avi -metadata title=&quot;my title&quot; out.flv</code>To set the language of the first audio stream:<code>ffmpeg -i INPUT -metadata:s:a:0 language=eng OUTPUT</code></p></li><li><p>-disposition[:stream_specifier] value (<em>output,per-stream</em>)</p><p>Sets the disposition for a stream.This option overrides the disposition copied from the input stream. It is also possible to delete the disposition by setting it to 0.The following dispositions are recognized:defaultduboriginalcommentlyricskaraokeforcedhearing_impairedvisual_impairedclean_effectsattached_piccaptionsdescriptionsdependentmetadataFor example, to make the second audio stream the default stream:<code>ffmpeg -i in.mkv -c copy -disposition:a:1 default out.mkv</code>To make the second subtitle stream the default stream and remove the default disposition from the first subtitle stream:<code>ffmpeg -i in.mkv -c copy -disposition:s:0 0 -disposition:s:1 default out.mkv</code>To add an embedded cover/thumbnail:<code>ffmpeg -i in.mp4 -i IMAGE -map 0 -map 1 -c copy -c:v:1 png -disposition:v:1 attached_pic out.mp4</code>Not all muxers support embedded thumbnails, and those who do, only support a few formats, like JPEG or PNG.</p></li><li><p>-program [title=title:][program_num=program_num:]st=stream[:st=stream…] (<em>output</em>)</p><p>Creates a program with the specified title, program_num and adds the specified stream(s) to it.</p></li><li><p>-target type (<em>output</em>)</p><p>Specify target file type (<code>vcd</code>, <code>svcd</code>, <code>dvd</code>, <code>dv</code>, <code>dv50</code>). type may be prefixed with <code>pal-</code>, <code>ntsc-</code> or <code>film-</code> to use the corresponding standard. All the format options (bitrate, codecs, buffer sizes) are then set automatically. You can just type:<code>ffmpeg -i myfile.avi -target vcd /tmp/vcd.mpg</code>Nevertheless you can specify additional options as long as you know they do not conflict with the standard, as in:<code>ffmpeg -i myfile.avi -target vcd -bf 2 /tmp/vcd.mpg</code></p></li><li><p>-dn (<em>input/output</em>)</p><p>As an input option, blocks all data streams of a file from being filtered or being automatically selected or mapped for any output. See <code>-discard</code> option to disable streams individually.As an output option, disables data recording i.e. automatic selection or mapping of any data stream. For full manual control see the <code>-map</code> option.</p></li><li><p>-dframes number (<em>output</em>)</p><p>Set the number of data frames to output. This is an obsolete alias for <code>-frames:d</code>, which you should use instead.</p></li><li><p>-frames[:stream_specifier] framecount (<em>output,per-stream</em>)</p><p>Stop writing to the stream after framecount frames.</p></li><li><p>-q[:stream_specifier] q (<em>output,per-stream</em>)</p></li><li><p>-qscale[:stream_specifier] q (<em>output,per-stream</em>)</p><p>Use fixed quality scale (VBR). The meaning of q/qscale is codec-dependent. If qscale is used without a stream_specifier then it applies only to the video stream, this is to maintain compatibility with previous behavior and as specifying the same codec specific value to 2 different codecs that is audio and video generally is not what is intended when no stream_specifier is used.</p></li><li><p>-filter[:stream_specifier] filtergraph (<em>output,per-stream</em>)</p><p>Create the filtergraph specified by filtergraph and use it to filter the stream.filtergraph is a description of the filtergraph to apply to the stream, and must have a single input and a single output of the same type of the stream. In the filtergraph, the input is associated to the label <code>in</code>, and the output to the label <code>out</code>. See the ffmpeg-filters manual for more information about the filtergraph syntax.See the <a href="https://ffmpeg.org/ffmpeg.html#filter_005fcomplex_005foption">-filter_complex option</a> if you want to create filtergraphs with multiple inputs and/or outputs.</p></li><li><p>-filter_script[:stream_specifier] filename (<em>output,per-stream</em>)</p><p>This option is similar to -filter, the only difference is that its argument is the name of the file from which a filtergraph description is to be read.</p></li><li><p>-filter_threads nb_threads (<em>global</em>)</p><p>Defines how many threads are used to process a filter pipeline. Each pipeline will produce a thread pool with this many threads available for parallel processing. The default is the number of available CPUs.</p></li><li><p>-pre[:stream_specifier] preset_name (<em>output,per-stream</em>)</p><p>Specify the preset for matching stream(s).</p></li><li><p>-stats (<em>global</em>)</p><p>Print encoding progress/statistics. It is on by default, to explicitly disable it you need to specify <code>-nostats</code>.</p></li><li><p>-progress url (<em>global</em>)</p><p>Send program-friendly progress information to url.Progress information is written approximately every second and at the end of the encoding process. It is made of “key=value” lines. key consists of only alphanumeric characters. The last key of a sequence of progress information is always “progress”.</p></li><li><p>-stdin</p><p>Enable interaction on standard input. On by default unless standard input is used as an input. To explicitly disable interaction you need to specify <code>-nostdin</code>.Disabling interaction on standard input is useful, for example, if ffmpeg is in the background process group. Roughly the same result can be achieved with <code>ffmpeg ... &lt; /dev/null</code> but it requires a shell.</p></li><li><p>-debug_ts (<em>global</em>)</p><p>Print timestamp information. It is off by default. This option is mostly useful for testing and debugging purposes, and the output format may change from one version to another, so it should not be employed by portable scripts.See also the option <code>-fdebug ts</code>.</p></li><li><p>-attach filename (<em>output</em>)</p><p>Add an attachment to the output file. This is supported by a few formats like Matroska for e.g. fonts used in rendering subtitles. Attachments are implemented as a specific type of stream, so this option will add a new stream to the file. It is then possible to use per-stream options on this stream in the usual way. Attachment streams created with this option will be created after all the other streams (i.e. those created with <code>-map</code> or automatic mappings).Note that for Matroska you also have to set the mimetype metadata tag:<code>ffmpeg -i INPUT -attach DejaVuSans.ttf -metadata:s:2 mimetype=application/x-truetype-font out.mkv</code>(assuming that the attachment stream will be third in the output file).</p></li><li><p>-dump_attachment[:stream_specifier] filename (<em>input,per-stream</em>)</p><p>Extract the matching attachment stream into a file named filename. If filename is empty, then the value of the <code>filename</code> metadata tag will be used.E.g. to extract the first attachment to a file named ’out.ttf’:<code>ffmpeg -dump_attachment:t:0 out.ttf -i INPUT</code>To extract all attachments to files determined by the <code>filename</code> tag:<code>ffmpeg -dump_attachment:t &quot;&quot; -i INPUT</code>Technical note – attachments are implemented as codec extradata, so this option can actually be used to extract extradata from any stream, not just attachments.</p></li></ul><h3 id="5-5-Video-Options"><a href="#5-5-Video-Options" class="headerlink" title="5.5 Video Options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Video-Options">5.5 Video Options</a></h3><ul><li><p>-vframes number (<em>output</em>)</p><p>Set the number of video frames to output. This is an obsolete alias for <code>-frames:v</code>, which you should use instead.</p></li><li><p>-r[:stream_specifier] fps (<em>input/output,per-stream</em>)</p><p>Set frame rate (Hz value, fraction or abbreviation).As an input option, ignore any timestamps stored in the file and instead generate timestamps assuming constant frame rate fps. This is not the same as the -framerate option used for some input formats like image2 or v4l2 (it used to be the same in older versions of FFmpeg). If in doubt use -framerate instead of the input option -r.As an output option, duplicate or drop input frames to achieve constant output frame rate fps.</p></li><li><p>-s[:stream_specifier] size (<em>input/output,per-stream</em>)</p><p>Set frame size.As an input option, this is a shortcut for the video_size private option, recognized by some demuxers for which the frame size is either not stored in the file or is configurable – e.g. raw video or video grabbers.As an output option, this inserts the <code>scale</code> video filter to the <em>end</em> of the corresponding filtergraph. Please use the <code>scale</code> filter directly to insert it at the beginning or some other place.The format is ‘wxh’ (default - same as source).</p></li><li><p>-aspect[:stream_specifier] aspect (<em>output,per-stream</em>)</p><p>Set the video display aspect ratio specified by aspect.aspect can be a floating point number string, or a string of the form num:den, where num and den are the numerator and denominator of the aspect ratio. For example “4:3”, “16:9”, “1.3333”, and “1.7777” are valid argument values.If used together with -vcodec copy, it will affect the aspect ratio stored at container level, but not the aspect ratio stored in encoded frames, if it exists.</p></li><li><p>-vn (<em>input/output</em>)</p><p>As an input option, blocks all video streams of a file from being filtered or being automatically selected or mapped for any output. See <code>-discard</code> option to disable streams individually.As an output option, disables video recording i.e. automatic selection or mapping of any video stream. For full manual control see the <code>-map</code> option.</p></li><li><p>-vcodec codec (<em>output</em>)</p><p>Set the video codec. This is an alias for <code>-codec:v</code>.</p></li><li><p>-pass[:stream_specifier] n (<em>output,per-stream</em>)</p><p>Select the pass number (1 or 2). It is used to do two-pass video encoding. The statistics of the video are recorded in the first pass into a log file (see also the option -passlogfile), and in the second pass that log file is used to generate the video at the exact requested bitrate. On pass 1, you may just deactivate audio and set output to null, examples for Windows and Unix:<code>ffmpeg -i foo.mov -c:v libxvid -pass 1 -an -f rawvideo -y NUL ffmpeg -i foo.mov -c:v libxvid -pass 1 -an -f rawvideo -y /dev/null</code></p></li><li><p>-passlogfile[:stream_specifier] prefix (<em>output,per-stream</em>)</p><p>Set two-pass log file name prefix to prefix, the default file name prefix is “ffmpeg2pass”. The complete file name will be PREFIX-N.log, where N is a number specific to the output stream</p></li><li><p>-vf filtergraph (<em>output</em>)</p><p>Create the filtergraph specified by filtergraph and use it to filter the stream.This is an alias for <code>-filter:v</code>, see the <a href="https://ffmpeg.org/ffmpeg.html#filter_005foption">-filter option</a>.</p></li><li><p>-autorotate</p><p>Automatically rotate the video according to file metadata. Enabled by default, use -noautorotate to disable it.</p></li><li><p>-autoscale</p><p>Automatically scale the video according to the resolution of first frame. Enabled by default, use -noautoscale to disable it. When autoscale is disabled, all output frames of filter graph might not be in the same resolution and may be inadequate for some encoder/muxer. Therefore, it is not recommended to disable it unless you really know what you are doing. Disable autoscale at your own risk.</p></li></ul><h3 id="5-6-Advanced-Video-options"><a href="#5-6-Advanced-Video-options" class="headerlink" title="5.6 Advanced Video options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Advanced-Video-options">5.6 Advanced Video options</a></h3><ul><li><p>-pix_fmt[:stream_specifier] format (<em>input/output,per-stream</em>)</p><p>Set pixel format. Use <code>-pix_fmts</code> to show all the supported pixel formats. If the selected pixel format can not be selected, ffmpeg will print a warning and select the best pixel format supported by the encoder. If pix_fmt is prefixed by a <code>+</code>, ffmpeg will exit with an error if the requested pixel format can not be selected, and automatic conversions inside filtergraphs are disabled. If pix_fmt is a single <code>+</code>, ffmpeg selects the same pixel format as the input (or graph output) and automatic conversions are disabled.</p></li><li><p>-sws_flags flags (<em>input/output</em>)</p><p>Set SwScaler flags.</p></li><li><p>-rc_override[:stream_specifier] override (<em>output,per-stream</em>)</p><p>Rate control override for specific intervals, formatted as “int,int,int” list separated with slashes. Two first values are the beginning and end frame numbers, last one is quantizer to use if positive, or quality factor if negative.</p></li><li><p>-ilme</p><p>Force interlacing support in encoder (MPEG-2 and MPEG-4 only). Use this option if your input file is interlaced and you want to keep the interlaced format for minimum losses. The alternative is to deinterlace the input stream by use of a filter such as <code>yadif</code> or <code>bwdif</code>, but deinterlacing introduces losses.</p></li><li><p>-psnr</p><p>Calculate PSNR of compressed frames.</p></li><li><p>-vstats</p><p>Dump video coding statistics to vstats_HHMMSS.log.</p></li><li><p>-vstats_file file</p><p>Dump video coding statistics to file.</p></li><li><p>-vstats_version file</p><p>Specifies which version of the vstats format to use. Default is 2.version = 1 :<code>frame= %5d q= %2.1f PSNR= %6.2f f_size= %6d s_size= %8.0fkB time= %0.3f br= %7.1fkbits/s avg_br= %7.1fkbits/s</code>version &gt; 1:<code>out= %2d st= %2d frame= %5d q= %2.1f PSNR= %6.2f f_size= %6d s_size= %8.0fkB time= %0.3f br= %7.1fkbits/s avg_br= %7.1fkbits/s</code></p></li><li><p>-top[:stream_specifier] n (<em>output,per-stream</em>)</p><p>top=1/bottom=0/auto=-1 field first</p></li><li><p>-dc precision</p><p>Intra_dc_precision.</p></li><li><p>-vtag fourcc/tag (<em>output</em>)</p><p>Force video tag/fourcc. This is an alias for <code>-tag:v</code>.</p></li><li><p>-qphist (<em>global</em>)</p><p>Show QP histogram</p></li><li><p>-vbsf bitstream_filter</p><p>Deprecated see -bsf</p></li><li><p>-force_key_frames[:stream_specifier] time[,time…] (<em>output,per-stream</em>)</p></li><li><p>-force_key_frames[:stream_specifier] expr:expr (<em>output,per-stream</em>)</p></li><li><p>-force_key_frames[:stream_specifier] source (<em>output,per-stream</em>)</p><p>force_key_frames can take arguments of the following form:time[,time…]If the argument consists of timestamps, ffmpeg will round the specified times to the nearest output timestamp as per the encoder time base and force a keyframe at the first frame having timestamp equal or greater than the computed timestamp. Note that if the encoder time base is too coarse, then the keyframes may be forced on frames with timestamps lower than the specified time. The default encoder time base is the inverse of the output framerate but may be set otherwise via <code>-enc_time_base</code>.If one of the times is “<code>chapters</code>[delta]”, it is expanded into the time of the beginning of all chapters in the file, shifted by delta, expressed as a time in seconds. This option can be useful to ensure that a seek point is present at a chapter mark or any other designated place in the output file.For example, to insert a key frame at 5 minutes, plus key frames 0.1 second before the beginning of every chapter:<code>-force_key_frames 0:05:00,chapters-0.1</code>expr:exprIf the argument is prefixed with <code>expr:</code>, the string expr is interpreted like an expression and is evaluated for each frame. A key frame is forced in case the evaluation is non-zero.The expression in expr can contain the following constants:nthe number of current processed frame, starting from 0n_forcedthe number of forced framesprev_forced_nthe number of the previous forced frame, it is <code>NAN</code> when no keyframe was forced yetprev_forced_tthe time of the previous forced frame, it is <code>NAN</code> when no keyframe was forced yettthe time of the current processed frameFor example to force a key frame every 5 seconds, you can specify:<code>-force_key_frames expr:gte(t,n_forced*5)</code>To force a key frame 5 seconds after the time of the last forced one, starting from second 13:<code>-force_key_frames expr:if(isnan(prev_forced_t),gte(t,13),gte(t,prev_forced_t+5))</code>sourceIf the argument is <code>source</code>, ffmpeg will force a key frame if the current frame being encoded is marked as a key frame in its source.Note that forcing too many keyframes is very harmful for the lookahead algorithms of certain encoders: using fixed-GOP options or similar would be more efficient.</p></li><li><p>-copyinkf[:stream_specifier] (<em>output,per-stream</em>)</p><p>When doing stream copy, copy also non-key frames found at the beginning.</p></li><li><p>-init_hw_device type[=name][:device[,key=value…]]</p><p>Initialise a new hardware device of type type called name, using the given device parameters. If no name is specified it will receive a default name of the form “type%d”.The meaning of device and the following arguments depends on the device type:cudadevice is the number of the CUDA device.dxva2device is the number of the Direct3D 9 display adapter.vaapidevice is either an X11 display name or a DRM render node. If not specified, it will attempt to open the default X11 display (<em>$DISPLAY</em>) and then the first DRM render node (<em>/dev/dri/renderD128</em>).vdpaudevice is an X11 display name. If not specified, it will attempt to open the default X11 display (<em>$DISPLAY</em>).qsvdevice selects a value in ‘MFX<em>IMPL</em><em>’. Allowed values are:autoswhwauto_anyhw_anyhw2hw3hw4If not specified, ‘auto_any’ is used. (Note that it may be easier to achieve the desired result for QSV by creating the platform-appropriate subdevice (‘dxva2’ or ‘vaapi’) and then deriving a QSV device from that.)opencldevice selects the platform and device as </em>platform_index.device_index<em>.The set of devices can also be filtered using the key-value pairs to find only devices matching particular platform or device strings.The strings usable as filters are:platform_profileplatform_versionplatform_nameplatform_vendorplatform_extensionsdevice_namedevice_vendordriver_versiondevice_versiondevice_profiledevice_extensionsdevice_typeThe indices and filters must together uniquely select a device.Examples:</em>-init_hw_device opencl:0.1<em>Choose the second device on the first platform.</em>-init_hw_device opencl:,device_name=Foo9000<em>Choose the device with a name containing the string </em>Foo9000<em>.</em>-init_hw_device opencl:1,device_type=gpu,device_extensions=cl_khr_fp16<em>Choose the GPU device on the second platform supporting the </em>cl_khr_fp16<em> extension.vulkanIf device is an integer, it selects the device by its index in a system-dependent list of devices. If device is any other string, it selects the first device with a name containing that string as a substring.The following options are recognized:debugIf set to 1, enables the validation layer, if installed.linear_imagesIf set to 1, images allocated by the hwcontext will be linear and locally mappable.instance_extensionsA plus separated list of additional instance extensions to enable.device_extensionsA plus separated list of additional device extensions to enable.Examples:</em>-init_hw_device vulkan:1<em>Choose the second device on the system.</em>-init_hw_device vulkan:RADV<em>Choose the first device with a name containing the string </em>RADV<em>.</em>-init_hw_device vulkan:0,instance_extensions=VK_KHR_wayland_surface+VK_KHR_xcb_surface*Choose the first device and enable the Wayland and XCB instance extensions.</p></li><li><p>-init_hw_device type[=name]@source</p><p>Initialise a new hardware device of type type called name, deriving it from the existing device with the name source.</p></li><li><p>-init_hw_device list</p><p>List all hardware device types supported in this build of ffmpeg.</p></li><li><p>-filter_hw_device name</p><p>Pass the hardware device called name to all filters in any filter graph. This can be used to set the device to upload to with the <code>hwupload</code> filter, or the device to map to with the <code>hwmap</code> filter. Other filters may also make use of this parameter when they require a hardware device. Note that this is typically only required when the input is not already in hardware frames - when it is, filters will derive the device they require from the context of the frames they receive as input.This is a global setting, so all filters will receive the same device.</p></li><li><p>-hwaccel[:stream_specifier] hwaccel (<em>input,per-stream</em>)</p><p>Use hardware acceleration to decode the matching stream(s). The allowed values of hwaccel are:noneDo not use any hardware acceleration (the default).autoAutomatically select the hardware acceleration method.vdpauUse VDPAU (Video Decode and Presentation API for Unix) hardware acceleration.dxva2Use DXVA2 (DirectX Video Acceleration) hardware acceleration.vaapiUse VAAPI (Video Acceleration API) hardware acceleration.qsvUse the Intel QuickSync Video acceleration for video transcoding.Unlike most other values, this option does not enable accelerated decoding (that is used automatically whenever a qsv decoder is selected), but accelerated transcoding, without copying the frames into the system memory.For it to work, both the decoder and the encoder must support QSV acceleration and no filters must be used.This option has no effect if the selected hwaccel is not available or not supported by the chosen decoder.Note that most acceleration methods are intended for playback and will not be faster than software decoding on modern CPUs. Additionally, <code>ffmpeg</code> will usually need to copy the decoded frames from the GPU memory into the system memory, resulting in further performance loss. This option is thus mainly useful for testing.</p></li><li><p>-hwaccel_device[:stream_specifier] hwaccel_device (<em>input,per-stream</em>)</p><p>Select a device to use for hardware acceleration.This option only makes sense when the -hwaccel option is also specified. It can either refer to an existing device created with -init_hw_device by name, or it can create a new device as if ‘-init_hw_device’ type:hwaccel_device were called immediately before.</p></li><li><p>-hwaccels</p><p>List all hardware acceleration methods supported in this build of ffmpeg.</p></li></ul><h3 id="5-7-Audio-Options"><a href="#5-7-Audio-Options" class="headerlink" title="5.7 Audio Options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Audio-Options">5.7 Audio Options</a></h3><ul><li><p>-aframes number (<em>output</em>)</p><p>Set the number of audio frames to output. This is an obsolete alias for <code>-frames:a</code>, which you should use instead.</p></li><li><p>-ar[:stream_specifier] freq (<em>input/output,per-stream</em>)</p><p>Set the audio sampling frequency. For output streams it is set by default to the frequency of the corresponding input stream. For input streams this option only makes sense for audio grabbing devices and raw demuxers and is mapped to the corresponding demuxer options.</p></li><li><p>-aq q (<em>output</em>)</p><p>Set the audio quality (codec-specific, VBR). This is an alias for -q:a.</p></li><li><p>-ac[:stream_specifier] channels (<em>input/output,per-stream</em>)</p><p>Set the number of audio channels. For output streams it is set by default to the number of input audio channels. For input streams this option only makes sense for audio grabbing devices and raw demuxers and is mapped to the corresponding demuxer options.</p></li><li><p>-an (<em>input/output</em>)</p><p>As an input option, blocks all audio streams of a file from being filtered or being automatically selected or mapped for any output. See <code>-discard</code> option to disable streams individually.As an output option, disables audio recording i.e. automatic selection or mapping of any audio stream. For full manual control see the <code>-map</code> option.</p></li><li><p>-acodec codec (<em>input/output</em>)</p><p>Set the audio codec. This is an alias for <code>-codec:a</code>.</p></li><li><p>-sample_fmt[:stream_specifier] sample_fmt (<em>output,per-stream</em>)</p><p>Set the audio sample format. Use <code>-sample_fmts</code> to get a list of supported sample formats.</p></li><li><p>-af filtergraph (<em>output</em>)</p><p>Create the filtergraph specified by filtergraph and use it to filter the stream.This is an alias for <code>-filter:a</code>, see the <a href="https://ffmpeg.org/ffmpeg.html#filter_005foption">-filter option</a>.</p></li></ul><h3 id="5-8-Advanced-Audio-options"><a href="#5-8-Advanced-Audio-options" class="headerlink" title="5.8 Advanced Audio options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Advanced-Audio-options">5.8 Advanced Audio options</a></h3><ul><li><p>-atag fourcc/tag (<em>output</em>)</p><p>Force audio tag/fourcc. This is an alias for <code>-tag:a</code>.</p></li><li><p>-absf bitstream_filter</p><p>Deprecated, see -bsf</p></li><li><p>-guess_layout_max channels (<em>input,per-stream</em>)</p><p>If some input channel layout is not known, try to guess only if it corresponds to at most the specified number of channels. For example, 2 tells to <code>ffmpeg</code> to recognize 1 channel as mono and 2 channels as stereo but not 6 channels as 5.1. The default is to always try to guess. Use 0 to disable all guessing.</p></li></ul><h3 id="5-9-Subtitle-options"><a href="#5-9-Subtitle-options" class="headerlink" title="5.9 Subtitle options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Subtitle-options">5.9 Subtitle options</a></h3><ul><li><p>-scodec codec (<em>input/output</em>)</p><p>Set the subtitle codec. This is an alias for <code>-codec:s</code>.</p></li><li><p>-sn (<em>input/output</em>)</p><p>As an input option, blocks all subtitle streams of a file from being filtered or being automatically selected or mapped for any output. See <code>-discard</code> option to disable streams individually.As an output option, disables subtitle recording i.e. automatic selection or mapping of any subtitle stream. For full manual control see the <code>-map</code> option.</p></li><li><p>-sbsf bitstream_filter</p><p>Deprecated, see -bsf</p></li></ul><h3 id="5-10-Advanced-Subtitle-options"><a href="#5-10-Advanced-Subtitle-options" class="headerlink" title="5.10 Advanced Subtitle options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Advanced-Subtitle-options">5.10 Advanced Subtitle options</a></h3><ul><li><p>-fix_sub_duration</p><p>Fix subtitles durations. For each subtitle, wait for the next packet in the same stream and adjust the duration of the first to avoid overlap. This is necessary with some subtitles codecs, especially DVB subtitles, because the duration in the original packet is only a rough estimate and the end is actually marked by an empty subtitle frame. Failing to use this option when necessary can result in exaggerated durations or muxing failures due to non-monotonic timestamps.Note that this option will delay the output of all data until the next subtitle packet is decoded: it may increase memory consumption and latency a lot.</p></li><li><p>-canvas_size size</p><p>Set the size of the canvas used to render subtitles.</p></li></ul><h3 id="5-11-Advanced-options"><a href="#5-11-Advanced-options" class="headerlink" title="5.11 Advanced options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Advanced-options">5.11 Advanced options</a></h3><ul><li><p>-map [-]input_file_id[:stream_specifier][?][,sync_file_id[:stream_specifier]] | [linklabel] (<em>output</em>)</p><p>Designate one or more input streams as a source for the output file. Each input stream is identified by the input file index input_file_id and the input stream index input_stream_id within the input file. Both indices start at 0. If specified, sync_file_id:stream_specifier sets which input stream is used as a presentation sync reference.The first <code>-map</code> option on the command line specifies the source for output stream 0, the second <code>-map</code> option specifies the source for output stream 1, etc.A <code>-</code> character before the stream identifier creates a “negative” mapping. It disables matching streams from already created mappings.A trailing <code>?</code> after the stream index will allow the map to be optional: if the map matches no streams the map will be ignored instead of failing. Note the map will still fail if an invalid input file index is used; such as if the map refers to a non-existent input.An alternative [linklabel] form will map outputs from complex filter graphs (see the -filter_complex option) to the output file. linklabel must correspond to a defined output link label in the graph.For example, to map ALL streams from the first input file to output<code>ffmpeg -i INPUT -map 0 output</code>For example, if you have two audio streams in the first input file, these streams are identified by “0:0” and “0:1”. You can use <code>-map</code> to select which streams to place in an output file. For example:<code>ffmpeg -i INPUT -map 0:1 out.wav</code>will map the input stream in INPUT identified by “0:1” to the (single) output stream in out.wav.For example, to select the stream with index 2 from input file a.mov (specified by the identifier “0:2”), and stream with index 6 from input b.mov (specified by the identifier “1:6”), and copy them to the output file out.mov:<code>ffmpeg -i a.mov -i b.mov -c copy -map 0:2 -map 1:6 out.mov</code>To select all video and the third audio stream from an input file:<code>ffmpeg -i INPUT -map 0:v -map 0:a:2 OUTPUT</code>To map all the streams except the second audio, use negative mappings<code>ffmpeg -i INPUT -map 0 -map -0:a:1 OUTPUT</code>To map the video and audio streams from the first input, and using the trailing <code>?</code>, ignore the audio mapping if no audio streams exist in the first input:<code>ffmpeg -i INPUT -map 0:v -map 0:a? OUTPUT</code>To pick the English audio stream:<code>ffmpeg -i INPUT -map 0:m:language:eng OUTPUT</code>Note that using this option disables the default mappings for this output file.</p></li><li><p>-ignore_unknown</p><p>Ignore input streams with unknown type instead of failing if copying such streams is attempted.</p></li><li><p>-copy_unknown</p><p>Allow input streams with unknown type to be copied instead of failing if copying such streams is attempted.</p></li><li><p>-map_channel [input_file_id.stream_specifier.channel_id|-1][?][:output_file_id.stream_specifier]</p><p>Map an audio channel from a given input to an output. If output_file_id.stream_specifier is not set, the audio channel will be mapped on all the audio streams.Using “-1” instead of input_file_id.stream_specifier.channel_id will map a muted channel.A trailing <code>?</code> will allow the map_channel to be optional: if the map_channel matches no channel the map_channel will be ignored instead of failing.For example, assuming INPUT is a stereo audio file, you can switch the two audio channels with the following command:<code>ffmpeg -i INPUT -map_channel 0.0.1 -map_channel 0.0.0 OUTPUT</code>If you want to mute the first channel and keep the second:<code>ffmpeg -i INPUT -map_channel -1 -map_channel 0.0.1 OUTPUT</code>The order of the “-map_channel” option specifies the order of the channels in the output stream. The output channel layout is guessed from the number of channels mapped (mono if one “-map_channel”, stereo if two, etc.). Using “-ac” in combination of “-map_channel” makes the channel gain levels to be updated if input and output channel layouts don’t match (for instance two “-map_channel” options and “-ac 6”).You can also extract each channel of an input to specific outputs; the following command extracts two channels of the INPUT audio stream (file 0, stream 0) to the respective OUTPUT_CH0 and OUTPUT_CH1 outputs:<code>ffmpeg -i INPUT -map_channel 0.0.0 OUTPUT_CH0 -map_channel 0.0.1 OUTPUT_CH1</code>The following example splits the channels of a stereo input into two separate streams, which are put into the same output file:<code>ffmpeg -i stereo.wav -map 0:0 -map 0:0 -map_channel 0.0.0:0.0 -map_channel 0.0.1:0.1 -y out.ogg</code>Note that currently each output stream can only contain channels from a single input stream; you can’t for example use “-map_channel” to pick multiple input audio channels contained in different streams (from the same or different files) and merge them into a single output stream. It is therefore not currently possible, for example, to turn two separate mono streams into a single stereo stream. However splitting a stereo stream into two single channel mono streams is possible.If you need this feature, a possible workaround is to use the <em>amerge</em> filter. For example, if you need to merge a media (here input.mkv) with 2 mono audio streams into one single stereo channel audio stream (and keep the video stream), you can use the following command:<code>ffmpeg -i input.mkv -filter_complex &quot;[0:1] [0:2] amerge&quot; -c:a pcm_s16le -c:v copy output.mkv</code>To map the first two audio channels from the first input, and using the trailing <code>?</code>, ignore the audio channel mapping if the first input is mono instead of stereo:<code>ffmpeg -i INPUT -map_channel 0.0.0 -map_channel 0.0.1? OUTPUT</code></p></li><li><p>-map_metadata[:metadata_spec_out] infile[:metadata_spec_in] (<em>output,per-metadata</em>)</p><p>Set metadata information of the next output file from infile. Note that those are file indices (zero-based), not filenames. Optional metadata_spec_in/out parameters specify, which metadata to copy. A metadata specifier can have the following forms:gglobal metadata, i.e. metadata that applies to the whole files[:stream_spec]per-stream metadata. stream_spec is a stream specifier as described in the <a href="https://ffmpeg.org/ffmpeg.html#Stream-specifiers">Stream specifiers</a> chapter. In an input metadata specifier, the first matching stream is copied from. In an output metadata specifier, all matching streams are copied to.c:chapter_indexper-chapter metadata. chapter_index is the zero-based chapter index.p:program_indexper-program metadata. program_index is the zero-based program index.If metadata specifier is omitted, it defaults to global.By default, global metadata is copied from the first input file, per-stream and per-chapter metadata is copied along with streams/chapters. These default mappings are disabled by creating any mapping of the relevant type. A negative file index can be used to create a dummy mapping that just disables automatic copying.For example to copy metadata from the first stream of the input file to global metadata of the output file:<code>ffmpeg -i in.ogg -map_metadata 0:s:0 out.mp3</code>To do the reverse, i.e. copy global metadata to all audio streams:<code>ffmpeg -i in.mkv -map_metadata:s:a 0:g out.mkv</code>Note that simple <code>0</code> would work as well in this example, since global metadata is assumed by default.</p></li><li><p>-map_chapters input_file_index (<em>output</em>)</p><p>Copy chapters from input file with index input_file_index to the next output file. If no chapter mapping is specified, then chapters are copied from the first input file with at least one chapter. Use a negative file index to disable any chapter copying.</p></li><li><p>-benchmark (<em>global</em>)</p><p>Show benchmarking information at the end of an encode. Shows real, system and user time used and maximum memory consumption. Maximum memory consumption is not supported on all systems, it will usually display as 0 if not supported.</p></li><li><p>-benchmark_all (<em>global</em>)</p><p>Show benchmarking information during the encode. Shows real, system and user time used in various steps (audio/video encode/decode).</p></li><li><p>-timelimit duration (<em>global</em>)</p><p>Exit after ffmpeg has been running for duration seconds in CPU user time.</p></li><li><p>-dump (<em>global</em>)</p><p>Dump each input packet to stderr.</p></li><li><p>-hex (<em>global</em>)</p><p>When dumping packets, also dump the payload.</p></li><li><p>-re (<em>input</em>)</p><p>Read input at native frame rate. Mainly used to simulate a grab device, or live input stream (e.g. when reading from a file). Should not be used with actual grab devices or live input streams (where it can cause packet loss). By default <code>ffmpeg</code> attempts to read the input(s) as fast as possible. This option will slow down the reading of the input(s) to the native frame rate of the input(s). It is useful for real-time output (e.g. live streaming).</p></li><li><p>-vsync parameter</p><p>Video sync method. For compatibility reasons old values can be specified as numbers. Newly added values will have to be specified as strings always.0, passthroughEach frame is passed with its timestamp from the demuxer to the muxer.1, cfrFrames will be duplicated and dropped to achieve exactly the requested constant frame rate.2, vfrFrames are passed through with their timestamp or dropped so as to prevent 2 frames from having the same timestamp.dropAs passthrough but destroys all timestamps, making the muxer generate fresh timestamps based on frame-rate.-1, autoChooses between 1 and 2 depending on muxer capabilities. This is the default method.Note that the timestamps may be further modified by the muxer, after this. For example, in the case that the format option avoid_negative_ts is enabled.With -map you can select from which stream the timestamps should be taken. You can leave either video or audio unchanged and sync the remaining stream(s) to the unchanged one.</p></li><li><p>-frame_drop_threshold parameter</p><p>Frame drop threshold, which specifies how much behind video frames can be before they are dropped. In frame rate units, so 1.0 is one frame. The default is -1.1. One possible usecase is to avoid framedrops in case of noisy timestamps or to increase frame drop precision in case of exact timestamps.</p></li><li><p>-async samples_per_second</p><p>Audio sync method. “Stretches/squeezes” the audio stream to match the timestamps, the parameter is the maximum samples per second by which the audio is changed. -async 1 is a special case where only the start of the audio stream is corrected without any later correction.Note that the timestamps may be further modified by the muxer, after this. For example, in the case that the format option avoid_negative_ts is enabled.This option has been deprecated. Use the <code>aresample</code> audio filter instead.</p></li><li><p>-copyts</p><p>Do not process input timestamps, but keep their values without trying to sanitize them. In particular, do not remove the initial start time offset value.Note that, depending on the vsync option or on specific muxer processing (e.g. in case the format option avoid_negative_ts is enabled) the output timestamps may mismatch with the input timestamps even when this option is selected.</p></li><li><p>-start_at_zero</p><p>When used with copyts, shift input timestamps so they start at zero.This means that using e.g. <code>-ss 50</code> will make output timestamps start at 50 seconds, regardless of what timestamp the input file started at.</p></li><li><p>-copytb mode</p><p>Specify how to set the encoder timebase when stream copying. mode is an integer numeric value, and can assume one of the following values:1Use the demuxer timebase.The time base is copied to the output encoder from the corresponding input demuxer. This is sometimes required to avoid non monotonically increasing timestamps when copying video streams with variable frame rate.0Use the decoder timebase.The time base is copied to the output encoder from the corresponding input decoder.-1Try to make the choice automatically, in order to generate a sane output.Default value is -1.</p></li><li><p>-enc_time_base[:stream_specifier] timebase (<em>output,per-stream</em>)</p><p>Set the encoder timebase. timebase is a floating point number, and can assume one of the following values:0Assign a default value according to the media type.For video - use 1/framerate, for audio - use 1/samplerate.-1Use the input stream timebase when possible.If an input stream is not available, the default timebase will be used.&gt;0Use the provided number as the timebase.This field can be provided as a ratio of two integers (e.g. 1:24, 1:48000) or as a floating point number (e.g. 0.04166, 2.0833e-5)Default value is 0.</p></li><li><p>-bitexact (<em>input/output</em>)</p><p>Enable bitexact mode for (de)muxer and (de/en)coder</p></li><li><p>-shortest (<em>output</em>)</p><p>Finish encoding when the shortest input stream ends.</p></li><li><p>-dts_delta_threshold</p><p>Timestamp discontinuity delta threshold.</p></li><li><p>-dts_error_threshold seconds</p><p>Timestamp error delta threshold. This threshold use to discard crazy/damaged timestamps and the default is 30 hours which is arbitrarily picked and quite conservative.</p></li><li><p>-muxdelay seconds (<em>output</em>)</p><p>Set the maximum demux-decode delay.</p></li><li><p>-muxpreload seconds (<em>output</em>)</p><p>Set the initial demux-decode delay.</p></li><li><p>-streamid output-stream-index:new-value (<em>output</em>)</p><p>Assign a new stream-id value to an output stream. This option should be specified prior to the output filename to which it applies. For the situation where multiple output files exist, a streamid may be reassigned to a different value.For example, to set the stream 0 PID to 33 and the stream 1 PID to 36 for an output mpegts file:<code>ffmpeg -i inurl -streamid 0:33 -streamid 1:36 out.ts</code></p></li><li><p>-bsf[:stream_specifier] bitstream_filters (<em>output,per-stream</em>)</p><p>Set bitstream filters for matching streams. bitstream_filters is a comma-separated list of bitstream filters. Use the <code>-bsfs</code> option to get the list of bitstream filters.<code>ffmpeg -i h264.mp4 -c:v copy -bsf:v h264_mp4toannexb -an out.h264 ``ffmpeg -i file.mov -an -vn -bsf:s mov2textsub -c:s copy -f rawvideo sub.txt</code></p></li><li><p>-tag[:stream_specifier] codec_tag (<em>input/output,per-stream</em>)</p><p>Force a tag/fourcc for matching streams.</p></li><li><p>-timecode hh:mm:ssSEPff</p><p>Specify Timecode for writing. SEP is ’:’ for non drop timecode and ’;’ (or ’.’) for drop.<code>ffmpeg -i input.mpg -timecode 01:02:03.04 -r 30000/1001 -s ntsc output.mpg</code></p></li><li><p>-filter_complex filtergraph (<em>global</em>)</p><p>Define a complex filtergraph, i.e. one with arbitrary number of inputs and/or outputs. For simple graphs – those with one input and one output of the same type – see the -filter options. filtergraph is a description of the filtergraph, as described in the “Filtergraph syntax” section of the ffmpeg-filters manual.Input link labels must refer to input streams using the <code>[file_index:stream_specifier]</code> syntax (i.e. the same as -map uses). If stream_specifier matches multiple streams, the first one will be used. An unlabeled input will be connected to the first unused input stream of the matching type.Output link labels are referred to with -map. Unlabeled outputs are added to the first output file.Note that with this option it is possible to use only lavfi sources without normal input files.For example, to overlay an image over video<code>ffmpeg -i video.mkv -i image.png -filter_complex &#39;[0:v][1:v]overlay[out]&#39; -map &#39;[out]&#39; out.mkv</code>Here <code>[0:v]</code> refers to the first video stream in the first input file, which is linked to the first (main) input of the overlay filter. Similarly the first video stream in the second input is linked to the second (overlay) input of overlay.Assuming there is only one video stream in each input file, we can omit input labels, so the above is equivalent to<code>ffmpeg -i video.mkv -i image.png -filter_complex &#39;overlay[out]&#39; -map &#39;[out]&#39; out.mkv</code>Furthermore we can omit the output label and the single output from the filter graph will be added to the output file automatically, so we can simply write<code>ffmpeg -i video.mkv -i image.png -filter_complex &#39;overlay&#39; out.mkv</code>To generate 5 seconds of pure red video using lavfi <code>color</code> source:<code>ffmpeg -filter_complex &#39;color=c=red&#39; -t 5 out.mkv</code></p></li><li><p>-filter_complex_threads nb_threads (<em>global</em>)</p><p>Defines how many threads are used to process a filter_complex graph. Similar to filter_threads but used for <code>-filter_complex</code> graphs only. The default is the number of available CPUs.</p></li><li><p>-lavfi filtergraph (<em>global</em>)</p><p>Define a complex filtergraph, i.e. one with arbitrary number of inputs and/or outputs. Equivalent to -filter_complex.</p></li><li><p>-filter_complex_script filename (<em>global</em>)</p><p>This option is similar to -filter_complex, the only difference is that its argument is the name of the file from which a complex filtergraph description is to be read.</p></li><li><p>-accurate_seek (<em>input</em>)</p><p>This option enables or disables accurate seeking in input files with the -ss option. It is enabled by default, so seeking is accurate when transcoding. Use -noaccurate_seek to disable it, which may be useful e.g. when copying some streams and transcoding the others.</p></li><li><p>-seek_timestamp (<em>input</em>)</p><p>This option enables or disables seeking by timestamp in input files with the -ss option. It is disabled by default. If enabled, the argument to the -ss option is considered an actual timestamp, and is not offset by the start time of the file. This matters only for files which do not start from timestamp 0, such as transport streams.</p></li><li><p>-thread_queue_size size (<em>input</em>)</p><p>This option sets the maximum number of queued packets when reading from the file or device. With low latency / high rate live streams, packets may be discarded if they are not read in a timely manner; setting this value can force ffmpeg to use a separate input thread and read packets as soon as they arrive. By default ffmpeg only do this if multiple inputs are specified.</p></li><li><p>-sdp_file file (<em>global</em>)</p><p>Print sdp information for an output stream to file. This allows dumping sdp information when at least one output isn’t an rtp stream. (Requires at least one of the output formats to be rtp).</p></li><li><p>-discard (<em>input</em>)</p><p>Allows discarding specific streams or frames from streams. Any input stream can be fully discarded, using value <code>all</code> whereas selective discarding of frames from a stream occurs at the demuxer and is not supported by all demuxers.noneDiscard no frame.defaultDefault, which discards no frames.norefDiscard all non-reference frames.bidirDiscard all bidirectional frames.nokeyDiscard all frames excepts keyframes.allDiscard all frames.</p></li><li><p>-abort_on flags (<em>global</em>)</p><p>Stop and abort on various conditions. The following flags are available:empty_outputNo packets were passed to the muxer, the output is empty.empty_output_streamNo packets were passed to the muxer in some of the output streams.</p></li><li><p>-xerror (<em>global</em>)</p><p>Stop and exit on error</p></li><li><p>-max_muxing_queue_size packets (<em>output,per-stream</em>)</p><p>When transcoding audio and/or video streams, ffmpeg will not begin writing into the output until it has one packet for each such stream. While waiting for that to happen, packets for other streams are buffered. This option sets the size of this buffer, in packets, for the matching output stream.The default value of this option should be high enough for most uses, so only touch this option if you are sure that you need it.</p></li><li><p>-muxing_queue_data_threshold bytes (<em>output,per-stream</em>)</p><p>This is a minimum threshold until which the muxing queue size is not taken into account. Defaults to 50 megabytes per stream, and is based on the overall size of packets passed to the muxer.</p></li><li><p>-auto_conversion_filters (<em>global</em>)</p><p>Enable automatically inserting format conversion filters in all filter graphs, including those defined by -vf, -af, -filter_complex and -lavfi. If filter format negotiation requires a conversion, the initialization of the filters will fail. Conversions can still be performed by inserting the relevant conversion filter (scale, aresample) in the graph. On by default, to explicitly disable it you need to specify <code>-noauto_conversion_filters</code>.</p></li></ul><p>As a special exception, you can use a bitmap subtitle stream as input: it will be converted into a video with the same size as the largest video in the file, or 720x576 if no video is present. Note that this is an experimental and temporary solution. It will be removed once libavfilter has proper support for subtitles.</p><p>For example, to hardcode subtitles on top of a DVB-T recording stored in MPEG-TS format, delaying the subtitles by 1 second:</p><pre><code class="hljs vim">ffmpeg -i <span class="hljs-built_in">input</span>.<span class="hljs-keyword">ts</span> -filter_complex \  <span class="hljs-string">&#x27;[#0x2ef] setpts=PTS+1/TB [sub] ; [#0x2d0] [sub] overlay&#x27;</span> \  -<span class="hljs-keyword">sn</span> -<span class="hljs-keyword">map</span> <span class="hljs-string">&#x27;#0x2dc&#x27;</span> output.<span class="hljs-keyword">mkv</span></code></pre><p>(0x2d0, 0x2dc and 0x2ef are the MPEG-TS PIDs of respectively the video, audio and subtitles streams; 0:0, 0:3 and 0:7 would have worked too)</p><h3 id="5-12-Preset-files"><a href="#5-12-Preset-files" class="headerlink" title="5.12 Preset files"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Preset-files">5.12 Preset files</a></h3><p>A preset file contains a sequence of option=value pairs, one for each line, specifying a sequence of options which would be awkward to specify on the command line. Lines starting with the hash (’#’) character are ignored and are used to provide comments. Check the presets directory in the FFmpeg source tree for examples.</p><p>There are two types of preset files: ffpreset and avpreset files.</p><h4 id="5-12-1-ffpreset-files"><a href="#5-12-1-ffpreset-files" class="headerlink" title="5.12.1 ffpreset files"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-ffpreset-files">5.12.1 ffpreset files</a></h4><p>ffpreset files are specified with the <code>vpre</code>, <code>apre</code>, <code>spre</code>, and <code>fpre</code> options. The <code>fpre</code> option takes the filename of the preset instead of a preset name as input and can be used for any kind of codec. For the <code>vpre</code>, <code>apre</code>, and <code>spre</code> options, the options specified in a preset file are applied to the currently selected codec of the same type as the preset option.</p><p>The argument passed to the <code>vpre</code>, <code>apre</code>, and <code>spre</code> preset options identifies the preset file to use according to the following rules:</p><p>First ffmpeg searches for a file named arg.ffpreset in the directories $FFMPEG_DATADIR (if set), and $HOME/.ffmpeg, and in the datadir defined at configuration time (usually PREFIX/share/ffmpeg) or in a ffpresets folder along the executable on win32, in that order. For example, if the argument is <code>libvpx-1080p</code>, it will search for the file libvpx-1080p.ffpreset.</p><p>If no such file is found, then ffmpeg will search for a file named codec_name-arg.ffpreset in the above-mentioned directories, where codec_name is the name of the codec to which the preset file options will be applied. For example, if you select the video codec with <code>-vcodec libvpx</code> and use <code>-vpre 1080p</code>, then it will search for the file libvpx-1080p.ffpreset.</p><h4 id="5-12-2-avpreset-files"><a href="#5-12-2-avpreset-files" class="headerlink" title="5.12.2 avpreset files"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-avpreset-files">5.12.2 avpreset files</a></h4><p>avpreset files are specified with the <code>pre</code> option. They work similar to ffpreset files, but they only allow encoder- specific options. Therefore, an option=value pair specifying an encoder cannot be used.</p><p>When the <code>pre</code> option is specified, ffmpeg will look for files with the suffix .avpreset in the directories $AVCONV_DATADIR (if set), and $HOME/.avconv, and in the datadir defined at configuration time (usually PREFIX/share/ffmpeg), in that order.</p><p>First ffmpeg searches for a file named codec_name-arg.avpreset in the above-mentioned directories, where codec_name is the name of the codec to which the preset file options will be applied. For example, if you select the video codec with <code>-vcodec libvpx</code> and use <code>-pre 1080p</code>, then it will search for the file libvpx-1080p.avpreset.</p><p>If no such file is found, then ffmpeg will search for a file named arg.avpreset in the same directories.</p><h2 id="6-Examples"><a href="#6-Examples" class="headerlink" title="6 Examples"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Examples-1">6 Examples</a></h2><h3 id="6-1-Video-and-Audio-grabbing"><a href="#6-1-Video-and-Audio-grabbing" class="headerlink" title="6.1 Video and Audio grabbing"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Video-and-Audio-grabbing">6.1 Video and Audio grabbing</a></h3><p>If you specify the input format and device then ffmpeg can grab video and audio directly.</p><pre><code class="hljs awk">ffmpeg -f oss -i <span class="hljs-regexp">/dev/</span>dsp -f video4linux2 -i <span class="hljs-regexp">/dev/</span>video0 <span class="hljs-regexp">/tmp/</span>out.mpg</code></pre><p>Or with an ALSA audio source (mono input, card id 1) instead of OSS:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -f alsa -ac <span class="hljs-number">1</span> -i hw:<span class="hljs-number">1</span> -f video<span class="hljs-number">4</span>linux<span class="hljs-number">2</span> -i /dev/video<span class="hljs-number">0</span> /tmp/out.mpg</code></pre><p>Note that you must activate the right video source and channel before launching ffmpeg with any TV viewer such as <a href="http://linux.bytesex.org/xawtv/">xawtv</a> by Gerd Knorr. You also have to set the audio recording levels correctly with a standard mixer.</p><h3 id="6-2-X11-grabbing"><a href="#6-2-X11-grabbing" class="headerlink" title="6.2 X11 grabbing"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-X11-grabbing">6.2 X11 grabbing</a></h3><p>Grab the X11 display with ffmpeg via</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -f x<span class="hljs-number">11</span>grab -video_size cif -framerate <span class="hljs-number">25</span> -i :<span class="hljs-number">0</span>.<span class="hljs-number">0</span> /tmp/out.mpg</code></pre><p>0.0 is display.screen number of your X11 server, same as the DISPLAY environment variable.</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -f x<span class="hljs-number">11</span>grab -video_size cif -framerate <span class="hljs-number">25</span> -i :<span class="hljs-number">0</span>.<span class="hljs-number">0</span>+<span class="hljs-number">10</span>,<span class="hljs-number">20</span> /tmp/out.mpg</code></pre><p>0.0 is display.screen number of your X11 server, same as the DISPLAY environment variable. 10 is the x-offset and 20 the y-offset for the grabbing.</p><h3 id="6-3-Video-and-Audio-file-format-conversion"><a href="#6-3-Video-and-Audio-file-format-conversion" class="headerlink" title="6.3 Video and Audio file format conversion"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Video-and-Audio-file-format-conversion">6.3 Video and Audio file format conversion</a></h3><p>Any supported file format and protocol can serve as input to ffmpeg:</p><p>Examples:</p><ul><li><p>You can use YUV files as input:</p><pre><code class="hljs awk">ffmpeg -i <span class="hljs-regexp">/tmp/</span>test%d.Y <span class="hljs-regexp">/tmp/</span>out.mpg</code></pre><p>It will use the files:</p><pre><code class="hljs gradle"><span class="hljs-regexp">/tmp/</span>test0.Y, <span class="hljs-regexp">/tmp/</span>test0.U, <span class="hljs-regexp">/tmp/</span>test0.V,<span class="hljs-regexp">/tmp/</span>test1.Y, <span class="hljs-regexp">/tmp/</span>test1.U, <span class="hljs-regexp">/tmp/</span>test1.V, etc...</code></pre><p>The Y files use twice the resolution of the U and V files. They are raw files, without header. They can be generated by all decent video decoders. You must specify the size of the image with the -s option if ffmpeg cannot guess it.</p></li><li><p>You can input from a raw YUV420P file:</p><pre><code class="hljs gradle">ffmpeg -i <span class="hljs-regexp">/tmp/</span>test.yuv <span class="hljs-regexp">/tmp/</span>out.avi</code></pre><p>test.yuv is a file containing raw YUV planar data. Each frame is composed of the Y plane followed by the U and V planes at half vertical and horizontal resolution.</p></li><li><p>You can output to a raw YUV420P file:</p><pre><code class="hljs css"><span class="hljs-selector-tag">ffmpeg</span> <span class="hljs-selector-tag">-i</span> <span class="hljs-selector-tag">mydivx</span><span class="hljs-selector-class">.avi</span> <span class="hljs-selector-tag">hugefile</span><span class="hljs-selector-class">.yuv</span></code></pre></li><li><p>You can set several input files and output files:</p><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> /tmp/<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.wav</span> -s <span class="hljs-number">640</span>x480 -<span class="hljs-selector-tag">i</span> /tmp/<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.yuv</span> /tmp/<span class="hljs-selector-tag">a</span>.mpg</code></pre><p>Converts the audio file a.wav and the raw YUV video file a.yuv to MPEG file a.mpg.</p></li><li><p>You can also do audio and video conversions at the same time:</p><pre><code class="hljs awk">ffmpeg -i <span class="hljs-regexp">/tmp/</span>a.wav -ar <span class="hljs-number">22050</span> <span class="hljs-regexp">/tmp/</span>a.mp2</code></pre><p>Converts a.wav to MPEG audio at 22050 Hz sample rate.</p></li><li><p>You can encode to several formats at the same time and define a mapping from input stream to output streams:</p><pre><code class="hljs stylus">ffmpeg -<span class="hljs-selector-tag">i</span> /tmp/<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.wav</span> -map <span class="hljs-number">0</span>:<span class="hljs-selector-tag">a</span> -<span class="hljs-selector-tag">b</span>:<span class="hljs-selector-tag">a</span> <span class="hljs-number">64</span>k /tmp/<span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.mp2</span> -map <span class="hljs-number">0</span>:<span class="hljs-selector-tag">a</span> -<span class="hljs-selector-tag">b</span>:<span class="hljs-selector-tag">a</span> <span class="hljs-number">128</span>k /tmp/<span class="hljs-selector-tag">b</span>.mp2</code></pre><p>Converts a.wav to a.mp2 at 64 kbits and to b.mp2 at 128 kbits. ’-map file:index’ specifies which input stream is used for each output stream, in the order of the definition of output streams.</p></li><li><p>You can transcode decrypted VOBs:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i snatch_<span class="hljs-number">1</span>.vob -f avi -c:v mpeg<span class="hljs-number">4</span> -b:v <span class="hljs-number">800</span>k -g <span class="hljs-number">300</span> -bf <span class="hljs-number">2</span> -c:a libmp<span class="hljs-number">3</span>lame -b:a <span class="hljs-number">128</span>k snatch.avi</code></pre><p>This is a typical DVD ripping example; the input is a VOB file, the output an AVI file with MPEG-4 video and MP3 audio. Note that in this command we use B-frames so the MPEG-4 stream is DivX5 compatible, and GOP size is 300 which means one intra frame every 10 seconds for 29.97fps input video. Furthermore, the audio stream is MP3-encoded so you need to enable LAME support by passing <code>--enable-libmp3lame</code> to configure. The mapping is particularly useful for DVD transcoding to get the desired audio language.</p><p>NOTE: To see the supported input formats, use <code>ffmpeg -demuxers</code>.</p></li><li><p>You can extract images from a video, or create a video from many images:</p><p>For extracting images from a video:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i foo.avi -r <span class="hljs-number">1</span> -s WxH -f image<span class="hljs-number">2</span> foo-%<span class="hljs-number">03</span>d.jpeg</code></pre><p>This will extract one video frame per second from the video and will output them in files named foo-001.jpeg, foo-002.jpeg, etc. Images will be rescaled to fit the new WxH values.</p><p>If you want to extract just a limited number of frames, you can use the above command in combination with the <code>-frames:v</code> or <code>-t</code> option, or in combination with -ss to start extracting from a certain point in time.</p><p>For creating a video from many images:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -f image<span class="hljs-number">2</span> -framerate <span class="hljs-number">12</span> -i foo-%<span class="hljs-number">03</span>d.jpeg -s WxH foo.avi</code></pre><p>The syntax <code>foo-%03d.jpeg</code> specifies to use a decimal number composed of three digits padded with zeroes to express the sequence number. It is the same syntax supported by the C printf function, but only formats accepting a normal integer are suitable.</p><p>When importing an image sequence, -i also supports expanding shell-like wildcard patterns (globbing) internally, by selecting the image2-specific <code>-pattern_type glob</code> option.</p><p>For example, for creating a video from filenames matching the glob pattern <code>foo-*.jpeg</code>:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -f image<span class="hljs-number">2</span> -pattern_type glob -framerate <span class="hljs-number">12</span> -i &#x27;foo-*.jpeg&#x27; -s WxH foo.avi</code></pre></li><li><p>You can put many streams of the same type in the output:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i test<span class="hljs-number">1</span>.avi -i test<span class="hljs-number">2</span>.avi -map <span class="hljs-number">1</span>:<span class="hljs-number">1</span> -map <span class="hljs-number">1</span>:<span class="hljs-number">0</span> -map <span class="hljs-number">0</span>:<span class="hljs-number">1</span> -map <span class="hljs-number">0</span>:<span class="hljs-number">0</span> -c copy -y test<span class="hljs-number">12</span>.nut</code></pre><p>The resulting output file test12.nut will contain the first four streams from the input files in reverse order.</p></li><li><p>To force CBR video output:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i myfile.avi -b <span class="hljs-number">4000</span>k -minrate <span class="hljs-number">4000</span>k -maxrate <span class="hljs-number">4000</span>k -bufsize <span class="hljs-number">1835</span>k out.m<span class="hljs-number">2</span>v</code></pre></li><li><p>The four options lmin, lmax, mblmin and mblmax use ’lambda’ units, but you may use the QP2LAMBDA constant to easily convert from ’q’ units:</p><pre><code class="hljs apache"><span class="hljs-attribute">ffmpeg</span> -i src.ext -lmax <span class="hljs-number">21</span>*QP<span class="hljs-number">2</span>LAMBDA dst.ext</code></pre></li></ul><h2 id="7-See-Also"><a href="#7-See-Also" class="headerlink" title="7 See Also"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-See-Also">7 See Also</a></h2><p><a href="https://ffmpeg.org/ffmpeg-all.html">ffmpeg-all</a>, <a href="https://ffmpeg.org/ffplay.html">ffplay</a>, <a href="https://ffmpeg.org/ffprobe.html">ffprobe</a>, <a href="https://ffmpeg.org/ffmpeg-utils.html">ffmpeg-utils</a>, <a href="https://ffmpeg.org/ffmpeg-scaler.html">ffmpeg-scaler</a>, <a href="https://ffmpeg.org/ffmpeg-resampler.html">ffmpeg-resampler</a>, <a href="https://ffmpeg.org/ffmpeg-codecs.html">ffmpeg-codecs</a>, <a href="https://ffmpeg.org/ffmpeg-bitstream-filters.html">ffmpeg-bitstream-filters</a>, <a href="https://ffmpeg.org/ffmpeg-formats.html">ffmpeg-formats</a>, <a href="https://ffmpeg.org/ffmpeg-devices.html">ffmpeg-devices</a>, <a href="https://ffmpeg.org/ffmpeg-protocols.html">ffmpeg-protocols</a>, <a href="https://ffmpeg.org/ffmpeg-filters.html">ffmpeg-filters</a></p><h2 id="8-Authors"><a href="#8-Authors" class="headerlink" title="8 Authors"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Authors">8 Authors</a></h2><p>The FFmpeg developers.</p><p>For details about the authorship, see the Git history of the project (git://source.ffmpeg.org/ffmpeg), e.g. by typing the command <code>git log</code> in the FFmpeg source directory, or browsing the online repository at <a href="http://source.ffmpeg.org/">http://source.ffmpeg.org</a>.</p><p>Maintainers for the specific components are listed in the file MAINTAINERS in the source code tree.</p><p>This document was generated on <em>November 22, 2020</em> using <a href="http://www.gnu.org/software/texinfo/"><em>makeinfo</em></a>.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>提问的智慧</title>
    <link href="/2020/11/22/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    <url>/2020/11/22/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/</url>
    
    <content type="html"><![CDATA[<p><strong>How To Ask Questions The Smart Way</strong></p><a id="more"></a><p><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/pulls"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome"></a></p><p>Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen</p><p>本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。</p><p>原文网址：<a href="http://www.catb.org/~esr/faqs/smart-questions.html">http://www.catb.org/~esr/faqs/smart-questions.html</a></p><p>Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu</p><p>本中文指南是基于原文 3.10 版以及 2010 年由 <a href="https://github.com/gasolin">Gasolin</a> 所翻译版本的最新翻译；</p><p>Copy From <a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/edit/master/README-zh_CN.md。">https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/edit/master/README-zh_CN.md。</a></p><p>本文另有<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README.md">繁體中文版</a>。</p><h2 id="原文版本历史"><a href="#原文版本历史" class="headerlink" title="原文版本历史"></a><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/history.md">原文版本历史</a></h2><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#声明">声明</a></li><li><a href="#简介">简介</a></li><li><a href="#在提问之前">在提问之前</a></li><li><a href="#当你提问时">当你提问时</a><ul><li><a href="#慎选提问的论坛">慎选提问的论坛</a></li><li><a href="#stack-overflow">Stack Overflow</a></li><li><a href="#网站和-irc-论坛">网站和 IRC 论坛</a></li><li><a href="#第二步使用项目邮件列表">第二步，使用项目邮件列表</a></li><li><a href="#使用有意义且描述明确的标题">使用有意义且描述明确的标题</a></li><li><a href="#使问题容易回复">使问题容易回复</a></li><li><a href="#用清晰、正确、精准且语法正确的语句">用清晰、正确、精准且语法正确的语句</a></li><li><a href="#使用易于读取且标准的文件格式发送问题">使用易于读取且标准的文件格式发送问题</a></li><li><a href="#精确地描述问题并言之有物">精确地描述问题并言之有物</a></li><li><a href="#话不在多而在精">话不在多而在精</a></li><li><a href="#别动辄声称找到-bug">别动辄声称找到 Bug</a></li><li><a href="#低声下气不能代替你的功课">低声下气不能代替你的功课</a></li><li><a href="#描述问题症状而非你的猜测">描述问题症状而非你的猜测</a></li><li><a href="#按发生时间先后列出问题症状">按发生时间先后列出问题症状</a></li><li><a href="#描述目标而不是过程">描述目标而不是过程</a></li><li><a href="#别要求使用私人电邮回复">别要求使用私人电邮回复</a></li><li><a href="#清楚明确的表达你的问题以及需求">清楚明确的表达你的问题以及需求</a></li><li><a href="#询问有关代码的问题时">询问有关代码的问题时</a></li><li><a href="#别把自己家庭作业的问题贴上来">别把自己家庭作业的问题贴上来</a></li><li><a href="#去掉无意义的提问句">去掉无意义的提问句</a></li><li><a href="#即使你很急也不要在标题写紧急">即使你很急也不要在标题写紧急</a></li><li><a href="#礼多人不怪而且有时还很有帮助">礼多人不怪，而且有时还很有帮助</a></li><li><a href="#问题解决后加个简短的补充说明">问题解决后，加个简短的补充说明</a></li></ul></li><li><a href="#如何解读答案">如何解读答案</a><ul><li><a href="#rtfm-和-stfw如何知道你已完全搞砸了">RTFM 和 STFW：如何知道你已完全搞砸了</a></li><li><a href="#如果还是搞不懂">如果还是搞不懂</a></li><li><a href="#处理无礼的回应">处理无礼的回应</a></li></ul></li><li><a href="#如何避免扮演失败者">如何避免扮演失败者</a></li><li><a href="#不该问的问题">不该问的问题</a></li><li><a href="#好问题与蠢问题">好问题与蠢问题</a></li><li><a href="#如果得不到回答">如果得不到回答</a></li><li><a href="#如何更好地回答问题">如何更好地回答问题</a></li><li><a href="#相关资源">相关资源</a></li><li><a href="#鸣谢">鸣谢</a></li></ul><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：</p><p><strong>本指南不提供此项目的实际支持服务！</strong></p><p>我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。</p><p>如果你是因为需要某些协助而正在阅读这本指南，并且最后离开是因为发现从本指南作者们身上得不到直接的协助，那么你就是我们所说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中是教你如何从那些真正懂得你所遇到软件或硬件问题的人取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在<a href="http://www.catb.org/~esr/faqs/hacker-howto.html">黑客</a>的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。</p><p>不只是黑客，现在开源（Open Source）软件已经相当盛行，你常常也可以由其他有经验的使用者身上得到好答案，这是件<strong>好事</strong>；使用者比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的使用者视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。</p><p>首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，”好问题！”是诚挚的大力称赞。</p><p>尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。</p><p>我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 <code>失败者（撸瑟）</code> （由于历史原因，我们有时把它拼作 <code>lusers</code>）。</p><p>我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。</p><p>我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答<code>赢家（winner）</code>的问题。</p><p>如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。</p><p>所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。</p><p>如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。</p><p>（欢迎对本指南提出改进意见。你可以 email 你的建议至 <a href="esr@thyrsus.com">esr@thyrsus.com</a> 或 <a href="respond-auto@linuxmafia.com">respond-auto@linuxmafia.com</a>。然而请注意，本文并非<a href="http://www.ietf.org/rfc/rfc1855.txt">网络礼节</a>的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。</p><h2 id="在提问之前"><a href="#在提问之前" class="headerlink" title="在提问之前"></a>在提问之前</h2><p>在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：</p><ol><li>尝试在你准备提问的论坛的旧文章中搜索答案。</li><li>尝试上网搜索以找到答案。</li><li>尝试阅读手册以找到答案。</li><li>尝试阅读常见问题文件（FAQ）以找到答案。</li><li>尝试自己检查或试验以找到答案。</li><li>向你身边的强者朋友打听以找到答案。</li><li>如果你是程序开发者，请尝试阅读源代码以找到答案。</li></ol><p>当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所<strong>学到</strong>的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。</p><p>运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 <a href="http://groups.google.com/">Google 论坛</a>和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 <code>我在 Google 中搜过下列句子但没有找到什么有用的东西</code> 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。</p><p>别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。</p><p>准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。</p><p>小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着<code>蠢问题…</code>， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。</p><p>绝不要自以为<strong>够格</strong>得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去<strong>挣到</strong>一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。</p><p>另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。<code>谁能给点提示？</code>、<code>我的这个例子里缺了什么？</code>以及<code>我应该检查什么地方</code>比<code>请把我需要的确切的过程贴出来</code>更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。</p><h2 id="当你提问时"><a href="#当你提问时" class="headerlink" title="当你提问时"></a>当你提问时</h2><h3 id="慎选提问的论坛"><a href="#慎选提问的论坛" class="headerlink" title="慎选提问的论坛"></a>慎选提问的论坛</h3><p>小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：</p><ul><li>在与主题不合的论坛上贴出你的问题。</li><li>在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。</li><li>在太多的不同新闻群组上重复转贴同样的问题（cross-post）。</li><li>向既非熟人也没有义务解决你问题的人发送私人电邮。</li></ul><p>黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。</p><p>因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括<strong>阅读</strong> FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。</p><p>向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。</p><p>在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。</p><p>别像机关枪似的一次”扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。</p><p>搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。</p><p>一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。</p><p>可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者从自己软件的支持中抽身出来，因为伴随而来涌入其私人邮箱的无用邮件变得无法忍受。</p><h3 id="Stack-Overflow"><a href="#Stack-Overflow" class="headerlink" title="Stack Overflow"></a>Stack Overflow</h3><p>搜索，<strong>然后</strong> 在 Stack Exchange 问。</p><p>近年来，Stack Exchange community 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。</p><p>因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的机率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。</p><p>Stack Exchange 已经成长到<a href="http://stackexchange.com/sites">超过一百个网站</a>，以下是最常用的几个站：</p><ul><li>Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。</li><li>Stack Overflow 是问写程序有关的问题。</li><li>Server Fault 是问服务器和网管相关的问题。</li></ul><h3 id="网站和-IRC-论坛"><a href="#网站和-IRC-论坛" class="headerlink" title="网站和 IRC 论坛"></a>网站和 IRC 论坛</h3><p>本地的使用者群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。</p><p>事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复 “用<strong>我们的</strong>版本”。</p><p>在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。</p><p>通过论坛或 IRC 频道来提供使用者支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。</p><p>在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。</p><h3 id="第二步，使用项目邮件列表"><a href="#第二步，使用项目邮件列表" class="headerlink" title="第二步，使用项目邮件列表"></a>第二步，使用项目邮件列表</h3><p>当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：</p><ul><li>任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。</li><li>向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。</li><li>大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。</li><li>如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。</li></ul><p>如果一个项目既有”使用者” 也有”开发者”（或”黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向”使用者”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。</p><p>然而，如果你<strong>确信</strong>你的问题很特别，而且在”使用者” 列表或论坛中几天都没有回复，可以试试前往”开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）</p><p>如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。</p><h3 id="使用有意义且描述明确的标题"><a href="#使用有意义且描述明确的标题" class="headerlink" title="使用有意义且描述明确的标题"></a>使用有意义且描述明确的标题</h3><p>在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的<code>帮帮忙</code>、<code>跪求</code>、<code>急</code>（更别说<code>救命啊！！！！</code>这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。</p><p>一个好标题范例是<code>目标 —— 差异</code>式的描述，许多技术支持组织就是这样做的。在<code>目标</code>部分指出是哪一个或哪一组东西有问题，在<code>差异</code>部分则描述与期望的行为不一致的地方。</p><blockquote><p>蠢问题：救命啊！我的笔记本电脑不能正常显示了！</p><p>聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。</p><p>更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。</p></blockquote><p>编写<code>目标 —— 差异</code> 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境<strong>和</strong>你遇到的问题。</p><p>总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。</p><p>如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 <code>Re: 测试</code> 或者 <code>Re: 新 bug</code> 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。</p><p>对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许使用者按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。</p><p>仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。</p><p>在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你<strong>只想</strong>在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。</p><h3 id="使问题容易回复"><a href="#使问题容易回复" class="headerlink" title="使问题容易回复"></a>使问题容易回复</h3><p>以<code>请将你的回复发送到……</code>来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，<a href="http://linuxmafia.com/faq/Mail/muas.html">换个好点的</a>；如果是操作系统不支持这种邮件程序，也换个好点的。</p><p>在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如<code>追踪此讨论串</code>、<code>有回复时发送邮件提醒</code>等功能。</p><h3 id="用清晰、正确、精准且语法正确的语句"><a href="#用清晰、正确、精准且语法正确的语句" class="headerlink" title="用清晰、正确、精准且语法正确的语句"></a>用清晰、正确、精准且语法正确的语句</h3><p>我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。</p><p>正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它<strong>必须很</strong>准确，而且有迹象表明你是在思考和关注问题。</p><p>正确地拼写、使用标点和大小写，不要将<code>its</code>混淆为<code>it&#39;s</code>，<code>loose</code>搞成<code>lose</code>或者将<code>discrete</code>弄成<code>discreet</code>。不要<strong>全部用大写</strong>，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。<a href="http://en.wikipedia.org/wiki/Alan_Cox">Alan Cox</a> 也许可以这样做，但你不行）。</p><p>更白话的说，如果你写得像是个半文盲[译注：<a href="http://zh.wikipedia.org/wiki/小白">小白</a>]，那多半得不到理睬。也不要使用即时通信中的简写或<a href="http://zh.wikipedia.org/wiki/火星文">火星文</a>，如将<code>的</code>简化为<code>d</code>会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。</p><p>如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。</p><p>如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：<br>[译注：以下附上原文以供使用]</p><blockquote><p>English is not my native language; please excuse typing errors.</p></blockquote><ul><li>英文不是我的母语，请原谅我的错字或语法。</li></ul><blockquote><p>If you speak $LANGUAGE, please email/PM me;<br>I may need assistance translating my question.</p></blockquote><ul><li>如果你说<strong>某语言</strong>，请寄信/私讯给我；我需要有人协助我翻译我的问题。</li></ul><blockquote><p>I am familiar with the technical terms,<br>but some slang expressions and idioms are difficult for me.</p></blockquote><ul><li>我对技术名词很熟悉，但对于俗语或是特别用法比较不甚了解。</li></ul><blockquote><p>I’ve posted my question in $LANGUAGE and English.<br>I’ll be glad to translate responses, if you only use one or the other.</p></blockquote><ul><li>我把我的问题用<strong>某语言</strong>和英文写出来，如果你只用一种语言回答，我会乐意将其翻译成另一种。</li></ul><h3 id="使用易于读取且标准的文件格式发送问题"><a href="#使用易于读取且标准的文件格式发送问题" class="headerlink" title="使用易于读取且标准的文件格式发送问题"></a>使用易于读取且标准的文件格式发送问题</h3><p>如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：</p><ul><li>使用纯文字而不是 HTML (<a href="http://archive.birdhouse.org/etc/evilmail.html">关闭 HTML</a> 并不难）。</li><li>使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。</li><li>不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。</li><li>但是，对一些特殊的文件<strong>不要</strong>设置固定宽度（譬如日志档案拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。</li><li>在英语论坛中，不要使用<code>Quoted-Printable</code> MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的<code>=20</code>符号既难看也分散注意力，甚至有可能破坏内容的语意。</li><li>绝对，<strong>永远</strong>不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。</li><li>如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的<code>智能引号</code>功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉<code>智能引号</code>单选框），以免在你的邮件中到处散布垃圾字符。</li><li>在论坛，勿滥用<code>表情符号</code>和<code>HTML</code>功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。</li></ul><p>如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的<code>查看源代码</code>命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。</p><h3 id="精确地描述问题并言之有物"><a href="#精确地描述问题并言之有物" class="headerlink" title="精确地描述问题并言之有物"></a>精确地描述问题并言之有物</h3><ul><li>仔细、清楚地描述你的问题或 Bug 的症状。</li><li>描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：<code>Fedora Core 4</code>、<code>Slackware 9.1</code>等）。</li><li>描述在提问前你是怎样去研究和理解这个问题的。</li><li>描述在提问前为确定问题而采取的诊断步骤。</li><li>描述最近做过什么可能相关的硬件或软件变更。</li><li>尽可能的提供一个可以<code>重现这个问题的可控环境</code>的方法。</li></ul><p>尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能遇到的问题回答一遍。</p><p>以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。</p><p><a href="http://www.chiark.greenend.org.uk/~sgtatham/">Simon Tatham</a> 写过一篇名为《<a href="http://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html">如何有效的报告 Bug</a>》的出色文章。强力推荐你也读一读。</p><h3 id="话不在多而在精"><a href="#话不在多而在精" class="headerlink" title="话不在多而在精"></a>话不在多而在精</h3><p>你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。</p><p>这样做的用处至少有三点。<br>第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；<br>第二，简化问题使你更有可能得到<strong>有用</strong>的答案；<br>第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。</p><h3 id="别动辄声称找到-Bug"><a href="#别动辄声称找到-Bug" class="headerlink" title="别动辄声称找到 Bug"></a>别动辄声称找到 Bug</h3><p>当你在使用软件中遇到问题，除非你非常、<strong>非常</strong>的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的<code>Bug</code>，你应该能提供相应位置的修正或替代文件。</p><p>请记得，还有许多其它使用者没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前<a href="#在提问之前">已经做了这些，是吧</a>？）。这也意味着很有可能是你弄错了而不是软件本身有问题。</p><p>编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有<code>Bug</code>时，这尤其严重。</p><p>提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是<strong>你</strong>做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。</p><h3 id="低声下气不能代替你的功课"><a href="#低声下气不能代替你的功课" class="headerlink" title="低声下气不能代替你的功课"></a>低声下气不能代替你的功课</h3><p>有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：<code>我知道我只是个可悲的新手，一个撸瑟，但...</code>。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。</p><p>别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。</p><p>有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。</p><h3 id="描述问题症状而非你的猜测"><a href="#描述问题症状而非你的猜测" class="headerlink" title="描述问题症状而非你的猜测"></a>描述问题症状而非你的猜测</h3><p>告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。</p><p><strong>蠢问题</strong></p><blockquote><p>我在编译内核时接连遇到 SIG11 错误，<br>我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？</p></blockquote><p><strong>聪明问题</strong></p><blockquote><p>我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组），<br>256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，<br>但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。<br>所有内存都换过了，没有效果。相关部分的标准编译记录如下…。</p></blockquote><p>由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：<code>所有的诊断专家都来自密苏里州。</code> 美国国务院的官方座右铭则是：<code>让我看看</code>（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：<code>我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。</code>） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！</p><h3 id="按发生时间先后列出问题症状"><a href="#按发生时间先后列出问题症状" class="headerlink" title="按发生时间先后列出问题症状"></a>按发生时间先后列出问题症状</h3><p>问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。</p><p>如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，<code>多</code>不等于<code>好</code>。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。</p><p>如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。</p><h3 id="描述目标而不是过程"><a href="#描述目标而不是过程" class="headerlink" title="描述目标而不是过程"></a>描述目标而不是过程</h3><p>如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。</p><p>经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。</p><p><strong>蠢问题</strong></p><blockquote><p>我怎样才能从某绘图程序的颜色选择器中取得十六进制的的 RGB 值？</p></blockquote><p><strong>聪明问题</strong></p><blockquote><p>我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），<br>但却无法从某绘图程序的颜色选择器取得十六进制的的 RGB 值。</p></blockquote><p>第二种提问法比较聪明，你可能得到像是<code>建议采用另一个更合适的工具</code>的回复。</p><h3 id="别要求使用私人电邮回复"><a href="#别要求使用私人电邮回复" class="headerlink" title="别要求使用私人电邮回复"></a>别要求使用私人电邮回复</h3><p>黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。</p><p>当你要求私下回复时，这个过程和奖励都被中止。别这样做，让<strong>回复者</strong>来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人没有兴趣。</p><p>这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是<code>向我发电邮，我将为论坛归纳这些回复</code>。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。</p><h3 id="清楚明确的表达你的问题以及需求"><a href="#清楚明确的表达你的问题以及需求" class="headerlink" title="清楚明确的表达你的问题以及需求"></a>清楚明确的表达你的问题以及需求</h3><p>漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。</p><p>如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。</p><p>要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。</p><p>所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问<code>我想更好的理解 X，可否指点一下哪有好一点说明？</code>通常比问<code>你能解释一下 X 吗？</code>更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。</p><h3 id="询问有关代码的问题时"><a href="#询问有关代码的问题时" class="headerlink" title="询问有关代码的问题时"></a>询问有关代码的问题时</h3><p>别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：<code>它不能工作</code>会让你完全被忽略。只贴几十行代码，然后说一句：<code>在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;</code>比较有可能让你得到回应。</p><p>最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能<strong>刚好</strong>展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看<a href="#话不在多而在精">话不在多而在精</a>一节）。</p><p>一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。</p><p>如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。</p><h3 id="别把自己家庭作业的问题贴上来"><a href="#别把自己家庭作业的问题贴上来" class="headerlink" title="别把自己家庭作业的问题贴上来"></a>别把自己家庭作业的问题贴上来</h3><p>黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由<strong>你</strong>来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。</p><p>如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在使用者群组，论坛或（最后一招）在项目的<strong>使用者</strong>邮件列表或论坛中提问。尽管黑客们<strong>会</strong>看出来，但一些有经验的使用者也许仍会给你一些提示。</p><h3 id="去掉无意义的提问句"><a href="#去掉无意义的提问句" class="headerlink" title="去掉无意义的提问句"></a>去掉无意义的提问句</h3><p>避免用无意义的话结束提问，例如<code>有人能帮我吗？</code>或者<code>这有答案吗？</code>。</p><p>首先：如果你对问题的描述不是很好，这样问更是画蛇添足。</p><p>其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：<code>没错，有人能帮你</code>或者<code>不，没答案</code>。</p><p>一般来说，避免用 <code>是或否</code>、<code>对或错</code>、<code>有或没有</code>类型的问句，除非你想得到<a href="http://homepage.ntlworld.com./jonathan.deboynepollard/FGA/questions-with-yes-or-no-answers.html">是或否类型的回答</a>。</p><h3 id="即使你很急也不要在标题写紧急"><a href="#即使你很急也不要在标题写紧急" class="headerlink" title="即使你很急也不要在标题写紧急"></a>即使你很急也不要在标题写<code>紧急</code></h3><p>这是你的问题，不是我们的。宣称<code>紧急</code>极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，<code>紧急</code>这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。</p><p>有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。</p><p>当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如<code>紧急：帮我救救这个毛绒绒的小海豹！</code>肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。</p><p>如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。</p><h3 id="礼多人不怪，而且有时还很有帮助"><a href="#礼多人不怪，而且有时还很有帮助" class="headerlink" title="礼多人不怪，而且有时还很有帮助"></a>礼多人不怪，而且有时还很有帮助</h3><p>彬彬有礼，多用<code>请</code>和<code>谢谢您的关注</code>，或<code>谢谢你的关照</code>。让大家都知道你对他们花时间免费提供帮助心存感激。</p><p>坦白说，这一点并没有比清晰、正确、精准并合法语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）</p><p>然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。</p><p>（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得<code>先谢了</code>意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说<code>先谢了</code>，<strong>然后</strong>事后再对回复者表示感谢，或者换种方式表达感激，譬如用<code>谢谢你的关注</code>或<code>谢谢你的关照</code>。）</p><h3 id="问题解决后，加个简短的补充说明"><a href="#问题解决后，加个简短的补充说明" class="headerlink" title="问题解决后，加个简短的补充说明"></a>问题解决后，加个简短的补充说明</h3><p>问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。</p><p>最理想的方式是向最初提问的话题回复此消息，并在标题中包含<code>已修正</code>，<code>已解决</code>或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串<code>问题 X</code>和<code>问题 X - 已解决</code>的潜在回复者就明白不用再浪费时间了（除非他个人觉得<code>问题 X</code>的有趣），因此可以利用此时间去解决其它问题。</p><p>补充说明不必很长或是很深入；简单的一句<code>你好，原来是网线出了问题！谢谢大家 – Bill</code>比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。</p><p>对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此<strong>之后</strong>才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。</p><p>除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。</p><p>至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。</p><p>思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。</p><p>在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。</p><h2 id="如何解读答案"><a href="#如何解读答案" class="headerlink" title="如何解读答案"></a>如何解读答案</h2><p><a id="RTFM"></a></p><h3 id="RTFM-和-STFW：如何知道你已完全搞砸了"><a href="#RTFM-和-STFW：如何知道你已完全搞砸了" class="headerlink" title="RTFM 和 STFW：如何知道你已完全搞砸了"></a>RTFM 和 STFW：如何知道你已完全搞砸了</h3><p>有一个古老而神圣的传统：如果你收到<code>RTFM （Read The Fucking Manual）</code>的回应，回答者认为你<strong>应该去读他妈的手册</strong>。当然，基本上他是对的，你应该去读一读。</p><p>RTFM 有一个年轻的亲戚。如果你收到<code>STFW（Search The Fucking Web）</code>的回应，回答者认为你<strong>应该到他妈的网上搜索</strong>。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 <strong><a href="http://lmgtfy.com/">Google 是你的朋友</a></strong>！）</p><p>在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。</p><p>通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为</p><ul><li><strong>你需要的信息非常容易获得</strong>；</li><li><strong>你自己去搜索这些信息比灌给你，能让你学到更多</strong>。</li></ul><p>你不应该因此不爽；<strong>依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见</strong>。你应该对他祖母般的慈祥表示感谢。</p><h3 id="如果还是搞不懂"><a href="#如果还是搞不懂" class="headerlink" title="如果还是搞不懂"></a>如果还是搞不懂</h3><p>如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。</p><p>比方说，如果我回答你：<code>看来似乎是 zentry 卡住了；你应该先清除它。</code>，然后，这是一个<strong>很糟的</strong>后续问题回应：<code>zentry 是什么？</code> <strong>好</strong>的问法应该是这样：<code>哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？</code></p><h3 id="处理无礼的回应"><a href="#处理无礼的回应" class="headerlink" title="处理无礼的回应"></a>处理无礼的回应</h3><p>很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。</p><p>如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这<strong>没有</strong>发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而<strong>你</strong>将被视为有错的一方，这将伤害到你获取信息或帮助的机会。</p><p>另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。</p><p>（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会<strong>正常</strong>交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们<strong>喜欢</strong>我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑）。</p><p>Jeff Bigler 的观察总结和这个相关也值得一读 (<strong><a href="http://www.mit.edu/~jcb/tact.html">tact filters</a></strong>)。</p><p>在下一节，我们会谈到另一个问题，当<strong>你</strong>行为不当时所会受到的<code>冒犯</code>。</p><h2 id="如何避免扮演失败者"><a href="#如何避免扮演失败者" class="headerlink" title="如何避免扮演失败者"></a>如何避免扮演失败者</h2><p>在黑客社区的论坛中有那么几次你可能会搞砸 —— 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。</p><p>这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做：</p><p>熬过去，这很正常。事实上，它是有益健康且合理的。</p><p>社区的标准不会自行维持，它们是通过参与者积极而<strong>公开地</strong>执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。</p><p>也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称<code>如果你不想帮助用户就闭嘴。</code> 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。</p><p>夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。</p><p>记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心<strong>你</strong>和<strong>他的社区</strong>而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。</p><p>有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是<strong>真的</strong>会把问题搞砸。</p><p>这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。</p><p>也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。</p><h2 id="不该问的问题"><a href="#不该问的问题" class="headerlink" title="不该问的问题"></a>不该问的问题</h2><p>以下是几个经典蠢问题，以及黑客没回答时心中所想的：</p><p>问题：<a href="#q1">我能在哪找到 X 程序或 X 资源？</a></p><p>问题：<a href="#q2">我怎样用 X 做 Y？</a></p><p>问题：<a href="#q3">如何设定我的 shell 提示？</a></p><p>问题：<a href="#q4">我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</a></p><p>问题：<a href="#q5">我的程序/设定/SQL 语句没有用</a></p><p>问题：<a href="#q6">我的 Windows 电脑有问题，你能帮我吗？</a></p><p>问题：<a href="#q7">我的程序不会动了，我认为系统工具 X 有问题</a></p><p>问题：<a href="#q8">我在安装 Linux（或者 X ）时有问题，你能帮我吗？</a></p><p>问题：<a href="#q9">我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</a></p><hr><p><a id="q1"></a></p><blockquote><p>问题：我能在哪找到 X 程序或 X 资源？</p></blockquote><p>回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 <a href="http://www.google.com">Google</a> 吗？</p><p><a id="q2"></a></p><blockquote><p>问题：我怎样用 X 做 Y？</p></blockquote><p>回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。</p><p><a id="q3"></a></p><blockquote><p>问题：如何设定我的 shell 提示？？</p></blockquote><p>回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 <a href="#RTFM">RTFM</a>，然后自己去找出来。</p><p><a id="q4"></a></p><blockquote><p>问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</p></blockquote><p>回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。</p><p><a id="q5"></a></p><blockquote><p>问题：我的{程序/设定/SQL 语句}不工作</p></blockquote><p>回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种</p><ul><li>你还有什么要补充的吗？</li><li>真糟糕，希望你能搞定。</li><li>这关我屁事？</li></ul><p><a id="q6"></a></p><blockquote><p>问题：我的 Windows 电脑有问题，你能帮我吗？</p></blockquote><p>回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。</p><p>注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你<strong>可以</strong>问与 Windows 相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。</p><p><a id="q7"></a></p><blockquote><p>问题：我的程序不会动了，我认为系统工具 X 有问题</p></blockquote><p>回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库档案有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。</p><p><a id="q8"></a></p><blockquote><p>问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？</p></blockquote><p>回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在<a href="http://www.linux.org/groups/index.html">这儿</a>找到使用者群组的清单）。</p><p>注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地使用者群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 <code>Linux</code> 和<strong>所有</strong>被怀疑的硬件作关键词仔细搜索。</p><p><a id="q9"></a></p><blockquote><p>问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</p></blockquote><p>回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！</p><h2 id="好问题与蠢问题"><a href="#好问题与蠢问题" class="headerlink" title="好问题与蠢问题"></a>好问题与蠢问题</h2><p>最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我可以在哪儿找到关于 Foonly Flurbamatic 的资料？</p></blockquote><p>这种问法无非想得到 <a href="#RTFM">STFW</a> 这样的回答。</p><p><strong>聪明问题</strong>：</p><blockquote><p>我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？</p></blockquote><p>这个问题已经 STFW 过了，看起来他真的遇到了麻烦。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我从 foo 项目找来的源码没法编译。它怎么这么烂？</p></blockquote><p>他觉得都是别人的错，这个傲慢自大的提问者。</p><p><strong>聪明问题</strong>：</p><blockquote><p>foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？</p></blockquote><p>提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我的主机板有问题了，谁来帮我？</p></blockquote><p>某黑客对这类问题的回答通常是：<code>好的，还要帮你拍拍背和换尿布吗？</code>，然后按下删除键。</p><p><strong>聪明问题</strong>：</p><blockquote><p>我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？</p></blockquote><p>这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。</p><p>在最后一个问题中，注意<code>告诉我答案</code>和<code>给我启示，指出我还应该做什么诊断工作</code>之间微妙而又重要的区别。</p><p>事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。</p><p>通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。</p><p>事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的<strong>名</strong>人，而是因为我用了正确的方式来提问。</p><p>黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我<strong>像</strong>个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。</p><h2 id="如果得不到回答"><a href="#如果得不到回答" class="headerlink" title="如果得不到回答"></a>如果得不到回答</h2><p>如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。</p><p>总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。</p><p>你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。</p><p>有许多网上的以及本地的使用者群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。</p><p>另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。</p><p>对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名使用者。根本不可能由一个人来处理来自上万名使用者的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。</p><h2 id="如何更好地回答问题"><a href="#如何更好地回答问题" class="headerlink" title="如何更好地回答问题"></a>如何更好地回答问题</h2><p><strong>态度和善一点</strong>。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。</p><p><strong>对初犯者私下回复</strong>。对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。</p><p><strong>如果你不确定，一定要说出来</strong>！一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。</p><p><strong>如果帮不了忙，也别妨碍他</strong>。不要在实际步骤上开玩笑，那样也许会毁了使用者的设置 —— 有些可怜的呆瓜会把它当成真的指令。</p><p><strong>试探性的反问以引出更多的细节</strong>。如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。</p><p>尽管对那些懒虫抱怨一声 RTFM 是正当的，能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。</p><p><strong>如果你决定回答，就请给出好的答案</strong>。当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。</p><p><strong>正面的回答问题</strong>！如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 <code>试试看 A 或是 B</code> 或者 <code>试试 X 、 Y 、 Z 、 A 、 B 、 C</code> 并附上一个链接一点用都没有。</p><p><strong>帮助你的社区从问题中学习</strong>。当回复一个好问题时，问问自己<code>如何修改相关文件或常见问题文件以免再次解答同样的问题？</code>，接着再向文件维护者发一份补丁。</p><p>如果你是在研究一番后才做出的回答，<strong>展现你的技巧而不是直接端出结果</strong>。毕竟<code>授人以鱼不如授人以渔</code>。</p><h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><p>如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 <a href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/">Unix 系统和网络基本原理</a>。</p><p>当你发布软件或补丁时，试着按<a href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html">软件发布实践</a>操作。</p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写<code>如何更好地回答问题</code>这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Install TensorFlow Object Detection API</title>
    <link href="/2020/11/09/Install-TensorFlow-Object-Detection-API/"/>
    <url>/2020/11/09/Install-TensorFlow-Object-Detection-API/</url>
    
    <content type="html"><![CDATA[<p>This Blog is writing for TensorFlow Object Detection API Installation on Win10.</p><a id="more"></a><h2 id="1-Install-TensorFlow"><a href="#1-Install-TensorFlow" class="headerlink" title="1. Install TensorFlow"></a>1. Install TensorFlow</h2><blockquote><p>Before install TF. Make sure CUDA and cdDNN has been installed successfully. Check the system environment has been set  correctly.</p><p> <strong>Verify the installation</strong></p><pre><code class="hljs bash">python -c <span class="hljs-string">&quot;import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))&quot;</span></code></pre><p>If warning <code>Could not load dynamic library &#39;cudnn64_7.dll&#39;</code> copy the file to CUDA\bin.</p></blockquote><h3 id="2-Install-Object-Detection-API"><a href="#2-Install-Object-Detection-API" class="headerlink" title="2. Install Object Detection API"></a>2. Install Object Detection API</h3><blockquote><p>Clone the TensorFlow Models repository and proceed to one of the installation options.</p></blockquote><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/tensorflow/models.git</code></pre><blockquote><p>Get the Proto Tool. Find the win64.zip in GitHub release packages.</p></blockquote><p><a href="https://github.com/protocolbuffers/protobuf/releases">https://github.com/protocolbuffers/protobuf/releases</a></p><blockquote><p>Unzip the files to Tool folder, and add the Tool/protoc<em>*</em>/bin to the system environment path.</p><p>Install API</p></blockquote><pre><code class="hljs bash"><span class="hljs-comment"># From within TensorFlow/models/research/</span>Get-ChildItem object_detection/protos/*.proto | foreach &#123;protoc <span class="hljs-string">&quot;object_detection/protos/<span class="hljs-subst">$($_.Name)</span>&quot;</span> --python_out=.&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Install CUDA 11.1 &amp; cuDNN</title>
    <link href="/2020/10/25/Install%20CUDA%2011.1%20&amp;%20cuDNN/"/>
    <url>/2020/10/25/Install%20CUDA%2011.1%20&amp;%20cuDNN/</url>
    
    <content type="html"><![CDATA[<p>This Blog is writing for steps of CUDA installing on Ubuntu 20.04.</p><a id="more"></a><h2 id="Install-CUDA-11-1"><a href="#Install-CUDA-11-1" class="headerlink" title="Install CUDA 11.1"></a>Install CUDA 11.1</h2><ol><li>Check Updates</li></ol><pre><code class="hljs bash">sudo apt-get updatesudo apt-get upgradesudo apt-get autoremove</code></pre><ol><li>Switch Navida Metapackage Version<blockquote><p>Open Software &amp; Updates and switch Navida metapackage to 455.<br>Apply Changes.</p><pre><code class="hljs bash">reboot</code></pre></blockquote></li></ol><ol><li>Download Installer for Linux Ubuntu 20.04 x86_64 (<a href="https://developer.nvidia.com/cuda-downloads">https://developer.nvidia.com/cuda-downloads</a>) </li></ol><pre><code class="hljs bash">wget https://developer.download.nvidia.com/compute/cuda/11.1.0/local_installers/cuda_11.1.0_455.23.05_linux.runsudo sh cuda_11.1.0_455.23.05_linux.run</code></pre><blockquote><p>On the first prompt choose Continue.<br>On the second prompt press Enter add the first metapackage to blacklist.<br>Choose Install.</p></blockquote><ol><li>Config Environment Variables</li></ol><pre><code class="hljs bash">gedit ~/.bashrc<span class="hljs-comment"># Add these lines to bashrc file.</span><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=<span class="hljs-variable">$LD_LIBRARY_PATH</span>:/usr/<span class="hljs-built_in">local</span>/cuda/lib64<span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:/usr/<span class="hljs-built_in">local</span>/cuda/bin<span class="hljs-built_in">export</span> CUDA_HOME=<span class="hljs-variable">$CUDA_HOME</span>:/usr/<span class="hljs-built_in">local</span>/cuda<span class="hljs-comment"># Exit current terminal and open a new terminal.</span><span class="hljs-comment"># Config bashrc.</span><span class="hljs-built_in">source</span> ~/.bashrc<span class="hljs-comment"># Do the same with zshrc.</span></code></pre><ol><li>Test CUDA<pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /usr/<span class="hljs-built_in">local</span>/cuda/samples/1_Utilities/deviceQuerymake <span class="hljs-comment"># If permission denied type $ sudo make</span>./deviceQuery <span class="hljs-comment">#If permission denied type $ sudo ./deviceQuery</span><span class="hljs-comment"># Result = PASS indicate CUDA has installed successfully.</span></code></pre></li></ol><h2 id="Install-cuDNN"><a href="#Install-cuDNN" class="headerlink" title="Install cuDNN"></a>Install cuDNN</h2><ol><li>Download cuDnn</li></ol><ol><li><p>Extract Files</p><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> ~/Downloadstar -xzf cudnn-11.1-linux-x64-v8.0.4.30.tgz</code></pre></li><li><p>Copy Files to Dictionary</p><pre><code class="hljs bash">sudo cp cuda/include/cudnn.h /usr/<span class="hljs-built_in">local</span>/cuda/includesudo cp cuda/lib64/libcudnn* /usr/<span class="hljs-built_in">local</span>/cuda/lib64sudo chmod a+r /usr/<span class="hljs-built_in">local</span>/cuda/include/cudnn.h /usr/<span class="hljs-built_in">local</span>/cuda/lib64/libcudnn*</code></pre></li></ol>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello Hexo</title>
    <link href="/2020/03/08/hello-world/"/>
    <url>/2020/03/08/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html">Deployment</a></p><h3 id="提交修改"><a href="#提交修改" class="headerlink" title="提交修改"></a>提交修改</h3><pre><code class="hljs bash">$ hexo g -d</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Chrome浏览器截屏</title>
    <link href="/2019/12/25/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%B1%8F/"/>
    <url>/2019/12/25/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%B1%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="Chrome-谷歌浏览器）快速截取整个页面"><a href="#Chrome-谷歌浏览器）快速截取整个页面" class="headerlink" title="Chrome(谷歌浏览器）快速截取整个页面"></a>Chrome(谷歌浏览器）快速截取整个页面</h1><h2 id="打开网页页面"><a href="#打开网页页面" class="headerlink" title="打开网页页面"></a>打开网页页面</h2><p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191225093402263.png" alt="image-20191225093402263"></p><h2 id="按F12打开开发者控制台"><a href="#按F12打开开发者控制台" class="headerlink" title="按F12打开开发者控制台"></a>按F12打开开发者控制台</h2><p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191225093415908.png" alt="image-20191225093415908"></p><h2 id="使用快捷键ctrl-shift-p，打开一个命令行输入框。然后输入screen-选择【Capture-full-size-screenshot】"><a href="#使用快捷键ctrl-shift-p，打开一个命令行输入框。然后输入screen-选择【Capture-full-size-screenshot】" class="headerlink" title="使用快捷键ctrl+shift+p，打开一个命令行输入框。然后输入screen,选择【Capture full size screenshot】"></a>使用快捷键ctrl+shift+p，打开一个命令行输入框。然后输入screen,选择【Capture full size screenshot】</h2><p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191225093458817.png" alt="image-20191225093458817"></p><p>几秒之后会弹出保存窗口，保存图片即可</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>learnmarkdown-cn</title>
    <link href="/2019/12/23/learnmarkdown-cn/"/>
    <url>/2019/12/23/learnmarkdown-cn/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><p>Markdown 由 John Gruber 于 2004年创立. 它旨在成为一门容易读写的语法结构，并可以便利地转换成 HTML（以及其他很多）格式。</p><p>在不同的解析器中，Markdown 的实现方法有所不同。此教程会指出哪些特征是通用，哪一些只对某一解析器有效。</p><ul><li><a href="#HTML标签">HTML标签</a></li><li><a href="#标题">标题</a></li><li><a href="#文本样式">文本样式</a></li><li><a href="#段落">段落</a></li><li><a href="#列表">列表</a></li><li><a href="#代码块">代码块</a></li><li><a href="#水平线分隔">水平线分隔</a></li><li><a href="#链接">链接</a></li><li><a href="#图片">图片</a></li><li><a href="#杂项">杂项</a></li></ul><p><h2>HTML标签</h2></p><p>Markdown 是 HTML 的父集，所以任何 HTML 文件都是有效的 Markdown。</p><div class="highlight"><pre><span></span>&lt;!--这意味着我们可以在 Markdown 里使用任何 HTML 元素，比如注释元素，且不会被 Markdown 解析器所影响。不过如果你在 Markdown 文件内创建了 HTML 元素，你将无法在 HTML 元素的内容中使用 Markdown 语法。--&gt;</pre></div><h2>标题</h2><p>通过在文本前加上不同数量的hash(#), 你可以创建相对应的 <code>&lt;h1&gt;</code> 到 <code>&lt;h6&gt;</code> HTML元素。</p><div class="highlight"><pre><span></span><span class="gh">#</span> 这是一个 &lt;h1&gt;<span class="gu">##</span> 这是一个 &lt;h2&gt;<span class="gu">###</span> 这是一个 &lt;h3&gt;<span class="gu">####</span> 这是一个 &lt;h4&gt;<span class="gu">#####</span> 这是一个 &lt;h5&gt;<span class="gu">######</span> 这是一个 &lt;h6&gt;</pre></div><p>实际效果（最终显示时会因设置而看起来不同）：</p><h1>这是一个</h1><h2>这也是一个</h2><h3>这还是一个</h3><h4>这依旧是一个</h4><h5>这真的是一个</h5><h6>这&hellip;是一个</h6><p>对于 <code>&lt;h1&gt;</code> 和 <code>&lt;h2&gt;</code> 元素，Markdown 额外提供了两种添加方式。</p><div class="highlight"><pre><span></span>这是一个 h1=============这是一个 h2-------------</pre></div><h2>文本样式</h2><p>文本的<em>斜体</em>，<strong>粗体</strong>在 Markdown 中可以轻易实现。</p><div class="highlight"><pre><span></span>*此文本为斜体。*<span class="ge">_此文本也是。_</span><span class="gs">**此文本为粗体。**</span><span class="gs">__此文本也是__</span><span class="gs">***此文本是斜体加粗体。***</span><span class="gs">**_或者这样。_**</span>*__这个也是！__*</pre></div><p>GitHub 也支持 Markdown，在 GitHub 的 Markdown 解析器中，我们可以使用~~删除线~~：</p><div class="highlight"><pre><span></span>~~此文本为删除线效果。~~</pre></div><h2>段落</h2><p>段落由一个句子或是多个中间没有空行的句子组成，每个段落由一个或是多个空行分隔开来。（注：部分解析器有无需空行就能换行的设置，这个主要看个人喜好）</p><div class="highlight"><pre><span></span>这是第一段落. 这句话在同一个段落里，好玩么？现在我是第二段落。这句话也在第二段落！这句话在第三段落！</pre></div><p>如果你想插入一个 <code>&lt;br /&gt;</code> 标签，你可以在段末加入两个以上的空格，然后另起一段。</p><p>(译者注：试了一下，很多解析器，并不需要空两个空格，直接换行就会添加一个<code>&lt;br /&gt;</code>)</p><div class="highlight"><pre><span></span>此段落结尾有两个空格（选中以显示）。  上文有一个 &lt;br /&gt; ！</pre></div><p>段落引用可由 <code>&gt;</code> 字符轻松实现。</p><blockquote><p>对的很轻松</p></blockquote><div class="highlight"><pre><span></span><span class="k">&gt; </span><span class="ge">这是一个段落引用。 你可以</span><span class="k">&gt; </span><span class="ge">手动断开你的句子，然后在每句句子前面添加 `&gt;` 字符。或者让你的句子变得很长，以至于他们自动得换行。</span><span class="k">&gt; </span><span class="ge">只要你的文字以 `&gt;` 字符开头，两种方式无异。</span><span class="k">&gt; </span><span class="ge">你也可以对文本进行</span>&gt;&gt; 多层引用<span class="k">&gt; </span><span class="ge">这多机智啊！</span></pre></div><h2>列表</h2><ul><li>无序列表可由星号，加号或者减号来创建</li></ul><div class="highlight"><pre><span></span><span class="k">*</span> 项目<span class="k">*</span> 项目<span class="k">*</span> 另一个项目或者+ 项目+ 项目+ 另一个项目或者 <span class="k">-</span> 项目<span class="k">-</span> 项目<span class="k">-</span> 最后一个项目</pre></div><p>有序序列可由数字加上点 <code>.</code> 来实现</p><div class="highlight"><pre><span></span><span class="k">1.</span> 项目一<span class="k">2.</span> 项目二<span class="k">3.</span> 项目三</pre></div><p>即使你的数字标签有误，Markdown 依旧会呈现出正确的序号，不过这并不是一个好主意</p><div class="highlight"><pre><span></span><span class="k">1.</span> 项目一<span class="k">1.</span> 项目二<span class="k">1.</span> 项目三</pre></div><p>(此段与上面效果一模一样)</p><p>你也可以使用子列表</p><div class="highlight"><pre><span></span><span class="k">1.</span> 项目一<span class="k">2.</span> 项目二<span class="k">3.</span> 项目三    <span class="k">*</span> 子项目    <span class="k">*</span> 子项目<span class="k">4.</span> 项目四</pre></div><p>你甚至可以使用任务列表，它将会生成 HTML 的选择框（checkboxes）标签。</p><div class="highlight"><pre><span></span>下面方框里包含 &#39;x&#39; 的列表，将会生成选中效果的选择框。<span class="k">- [ ]</span> 任务一需要完成<span class="k">- [ ]</span> 任务二需要完成下面这个选择框将会是选中状态<span class="k">- [x]</span> 这个任务已经完成</pre></div><ul><li>[ ] 你看完了这个任务（注：此选择框是无法直接更改的，即禁用状态。）</li></ul><h2>代码块</h2><p>代码块（HTML中 <code>&lt;code&gt;</code> 标签）可以由缩进四格（spaces）或者一个制表符（tab）实现</p><div class="highlight"><pre><span></span>    This is code    So is this</pre></div><p>在你的代码中，你仍然使用tab（或者四个空格）可以进行缩进操作</p><div class="highlight"><pre><span></span>    my_array.each do |item|        puts item    end</pre></div><p>内联代码可由反引号 ` 实现</p><div class="highlight"><pre><span></span>John 甚至不知道 <span class="sb">`go_to()`</span> 方程是干嘛的!</pre></div><p>在GitHub的 Markdown（GitHub Flavored Markdown）解析器中，你可以使用特殊的语法表示代码块</p><pre><code class="highlight">&#x60;&#x60;&#x60;rubydef foobar    puts "Hello world!"end&#x60;&#x60;&#x60;</code></pre><p>以上代码不需要缩进，而且 GitHub 会根据`&ldquo;后指定的语言来进行语法高亮显示</p><h2>水平线分隔</h2><p>水平线（<code>&lt;hr/&gt;</code>）可由三个或以上的星号或是减号创建，它们之间可以带或不带空格</p><div class="highlight"><pre><span></span>***---<span class="k">-</span> - - ****************下面这个就是示例</pre></div><hr><h2>链接</h2><p>Markdown 最棒的地方就是便捷的书写链接。把链接文字放在中括号[]内，在随后的括弧()内加入url就可以了。</p><div class="highlight"><pre><span></span>[<span class="nt">点我点我!</span>](<span class="na">http://test.com/</span>)</pre></div><p>你也可以在小括号内使用引号，为链接加上一个标题（title）</p><div class="highlight"><pre><span></span>[<span class="nt">点我点我!</span>](<span class="na">http://test.com/ &quot;连接到Test.com&quot;</span>)</pre></div><p>相对路径也可以有 </p><div class="highlight"><pre><span></span>[<span class="nt">去 music</span>](<span class="na">/music/</span>).</pre></div><p>Markdown同样支持引用形式的链接</p><div class="highlight"><pre><span></span>[点此链接][link1] 以获取更多信息！[看一看这个链接][foobar] 如果你愿意的话。</pre></div><p>对于引用形式，链接的标题可以处于单引号中，括弧中或是忽略。引用名可以在文档的任何地方，并且可以随意命名，只要名称不重复。</p><p>“隐含式命名” 的功能可以让链接文字作为引用名</p><div class="highlight"><pre><span></span>[This][] is a link.</pre></div><p>但这并不常用</p><h2>图片</h2><p>图片与链接相似，只需在前添加一个感叹号</p><div class="highlight"><pre><span></span>![<span class="nt">这是alt,请把鼠标放在图片上</span>](<span class="na">http://imgur.com/myimage.jpg &quot;这是title&quot;</span>)</pre></div><p>引用形式也同样起作用</p><div class="highlight"><pre><span></span>![这是alt][myimage]</pre></div><h2>杂项</h2><h3>自动链接</h3><div class="highlight"><pre><span></span>&lt;http://testwebsite.com/&gt; 与[<span class="nt">http://testwebsite.com/</span>](<span class="na">http://testwebsite.com/</span>) 等同</pre></div><h3>电子邮件的自动链接</h3><div class="highlight"><pre><span></span>&lt;foo@bar.com&gt;</pre></div><h3>转义字符</h3><div class="highlight"><pre><span></span>我希望 <span class="ge">*将这段文字置于星号之间*</span> 但是我不希望它被斜体化, 这么做: \*这段置文字于星号之间\*。</pre></div><p>对比一下：<em>将这段文字置于星号之间</em> 和 *将这段文字置于星号之间*</p><h3>键盘上的功能键</h3><p>在 GitHub 的 Markdown 中，你可以使用 <code>&lt;kbd&gt;</code> 标签来表示功能键。</p><div class="highlight"><pre><span></span>你的电脑死机了？试试&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt;</pre></div><p><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd></p><p>（译注：可能由于网站本身样式问题，效果不明显）</p><h3>表格</h3><p>下面示例的表格长这样：</p><table><thead><tr><th align="left">第一列</th><th align="center">第二列</th><th align="right">第三列</th></tr></thead><tbody><tr><td align="left">我是左对齐</td><td align="center">居个中</td><td align="right">右对齐</td></tr><tr><td align="left">注意</td><td align="center">冒</td><td align="right">号</td></tr></tbody></table><p>工整一点的写法是这样的：</p><div class="highlight"><pre><span></span>| 第一列        | 第二列    | 第三列       || :----------- | :-------: | ----------: || 我是左对齐    | 居个中    | 右对齐       || 注意          | 冒       | 号           |</pre></div><p>好吧，强行对齐字符是很难的。但是，至少比下面这种写法好一点——</p><div class="highlight"><pre><span></span>我是超级超级长的第一列 | 第二列 | 第三列:-- | :-: | --:这真的太丑了 | 药不能 | 停！！！！</pre></div><p>真的是<em>看着令人头晕</em></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Mark</title>
    <link href="/2019/12/19/Mark/"/>
    <url>/2019/12/19/Mark/</url>
    
    <content type="html"><![CDATA[<p align="center">    <font face="华文新魏" size="6">Interesting Mark</font>        </p><a id="more"></a><p>文言文編程語言 A programming language for the ancient Chinese. <a href="http://wenyan-lang.lingdong.works/">http://wenyan-lang.lingdong.works</a></p><p>交互线性代数 Interactive Linear Algebra <a href="http://textbooks.math.gatech.edu/ila/index.html">http://textbooks.math.gatech.edu/ila/index.html</a></p><h1 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h1><p>用不同颜色的沙砾代表不同密度的沙进行风沙运动研究 <a href="https://www.sciencedirect.com/science/article/pii/S1875963712000729">https://www.sciencedirect.com/science/article/pii/S1875963712000729</a></p><p>journal finder <a href="https://journalfinder.elsevier.com/">https://journalfinder.elsevier.com/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>收藏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10专业版激活及卓越性能开启</title>
    <link href="/2019/12/14/Win10%E4%B8%93%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E5%8F%8A%E5%8D%93%E8%B6%8A%E6%80%A7%E8%83%BD%E5%BC%80%E5%90%AF/"/>
    <url>/2019/12/14/Win10%E4%B8%93%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E5%8F%8A%E5%8D%93%E8%B6%8A%E6%80%A7%E8%83%BD%E5%BC%80%E5%90%AF/</url>
    
    <content type="html"><![CDATA[<p align="center">    <font face="华文新魏" size="6">小白的Win10装机之路（二）</font>        </p><a id="more"></a><h2 id="Win10专业版激活"><a href="#Win10专业版激活" class="headerlink" title="Win10专业版激活"></a>Win10专业版激活</h2><p>Win10专业版可以使用激活码激活也可以使用KMS工具进行激活，为保证系统纯净性推荐使用激活码激活。</p><p>win10专业版激活密钥 ：</p><pre><code class="hljs apache"><span class="hljs-attribute">Windows</span> <span class="hljs-number">10</span>专业版：NXRQM-CXV<span class="hljs-number">6</span>P-PBGVJ-<span class="hljs-number">293</span>T<span class="hljs-number">4</span>-R<span class="hljs-number">3</span>KTY<span class="hljs-attribute">Windows</span> <span class="hljs-number">10</span>专业版：W<span class="hljs-number">269</span>N-WFGWX-YVC<span class="hljs-number">9</span>B-<span class="hljs-number">4</span>J<span class="hljs-number">6</span>C<span class="hljs-number">9</span>-T<span class="hljs-number">83</span>GX<span class="hljs-attribute">Windows</span> <span class="hljs-number">10</span>专业版：<span class="hljs-number">8</span>N<span class="hljs-number">67</span>H-M<span class="hljs-number">3</span>CY<span class="hljs-number">9</span>-QT<span class="hljs-number">7</span>C<span class="hljs-number">4</span>-<span class="hljs-number">2</span>TR<span class="hljs-number">7</span>M-TXYCV<span class="hljs-attribute">Windows</span> <span class="hljs-number">10</span>专业版N：<span class="hljs-number">2</span>B<span class="hljs-number">87</span>N-<span class="hljs-number">8</span>KFHP-DKV<span class="hljs-number">6</span>R-Y<span class="hljs-number">2</span>C<span class="hljs-number">8</span>J-PKCKT<span class="hljs-attribute">Windows</span> <span class="hljs-number">10</span>专业版N：MH<span class="hljs-number">37</span>W-N<span class="hljs-number">47</span>XK-V<span class="hljs-number">7</span>XM<span class="hljs-number">9</span>-C<span class="hljs-number">7227</span>-GCQG<span class="hljs-number">9</span></code></pre><p>激活码使用方法：</p><ol><li>进入win10系统，右键点击开始，选择管理员模式的命令提示符。</li><li>在命令提示符中输入：<code>slmgr -ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</code>（也可以换成上面的其他激活密钥），回车。</li><li>然后再输入<code>slmgr -skms kms.landian.news</code>，回车。</li><li>提示安装成功后继续键入：<code>slmgr -ato</code>，回车，提示激活成功。</li></ol><h2 id="卓越性能开启"><a href="#卓越性能开启" class="headerlink" title="卓越性能开启"></a>卓越性能开启</h2><ol><li>打开“Windows Powershell”，并右键以管理员身份运行。</li><li>在弹出“windows powershell”窗口界面后，输入如下命令代码<code>powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61</code>窗口界面上将显示出“电源方案 GUID: xxxxxxxx (卓越性能)”字符串提示，这时我们便成功开启了“卓越性能模式”。</li></ol><p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191214160617256.png" alt="image-20191214160617256"></p>]]></content>
    
    
    
    <tags>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10装机指南</title>
    <link href="/2019/12/13/Win10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"/>
    <url>/2019/12/13/Win10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<p align="center">    <font face="华文新魏" size="6">小白的Win10装机之路（一）</font>        </p><a id="more"></a><ul><li>没有什么问题是重启解决不了的，如果不行就重启两次，如果实在不行就重装系统吧。</li><li>除了电脑硬件问题，几乎所有的电脑问题都可以通过重装系统，重新配置电脑驱动、软件解决。</li><li>在初次使用一些软件时系统环境变量等不能正确配置，造成的软件索引问题过多，最简单有效的方法就是重装系统。</li><li>原装的BUG10系统经常会出现蓝屏死机情况，同时随着使用时间的推移系统会越来越慢，这些问题也可以通过重装系统解决。</li><li>重装系统其实很简单，小白也能轻松重装，看完这篇推送别找了装系统了吧（逃）。</li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><strong>重装系统广义上也可以分为：</strong></p></blockquote><ol><li><strong>原系统重置</strong></li><li><strong>系统完全重装</strong></li></ol><blockquote><p><strong>Win10磁盘分区表及文件格式</strong></p></blockquote><h3 id="磁盘分区表"><a href="#磁盘分区表" class="headerlink" title="磁盘分区表"></a>磁盘分区表</h3><ol><li><p><strong>主引导记录MBR（Master Boot Record）</strong></p><p>MBR由3部分组成，包括主引导代码，磁盘分区表和磁盘签名。分区表最多可容纳Windows中主分区的4个条目，也就是最多支持四个主分区。</p><p>如果将磁盘初始化为MBR，则无论磁盘有多大，都只能使用2TB或16TB的硬盘容量。如果磁盘使用传统的512B对齐扇区，则只能使用2TB。如果使用4K对齐扇区，则可以使用16TB。</p></li><li><p><strong>GUID分区表GPT（GUID Partition Table）</strong></p><p>GUID分区表由保护性MBR组成，用于防止基于MBR的磁盘实用程序误识别并可能覆盖GPT磁盘；<strong>主要GUID分区表标头</strong>（记录了其自身的大小、位置以及辅助GPT标头），<strong>主GUID分区条目数组</strong>，<strong>备份GUID分区条目数组</strong>和<strong>备份GUID分区表标头</strong>。</p><p>在Windows中，GUID分区表最多可以包含128个分区条目。</p><p>XP及以下系统只能使用MBR分区格式的磁盘，当前Windows操作系统都可以使用GPT分区格式磁盘读写数据。如果主板仅支持Legacy启动，只能从MBR启动Windows，当主板支持UEFI启动时，Windows的64位系统支持从GPT启动。</p></li></ol><h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><p>Windows操作系统支持 NTFS, FAT32, and exFAT三种不同文件系统，在Win10装机时，硬盘格式一般选择NTFS，目前也有在exFAT文件系统上运行的Win10系统。</p><ol><li>NTFS是目前Windows系统中一种现代文件系统，目前使用最广泛，内置的硬盘大多数都是NTFS格式。</li><li>FAT32是一种相对老旧的文件系统，不能像NTFS格式支持很多现代文件格式的属性，但对于不同系统平台具有良好的兼容性，可以在Linux、Mac或Android系统平台上通用。</li><li>exFAT是FAT32文件格式的替代品，很多设备和操作系统都支持该文件系统。</li></ol><h2 id="原系统重置"><a href="#原系统重置" class="headerlink" title="原系统重置"></a>原系统重置</h2><p><img src="C:\Users\VEEN_Z~1\AppData\Local\Temp\Ditto\DragFiles\image_3.png" alt="image_3"></p><p>有三个选项能够初始化电脑。</p><ul><li>选项 1：依次选择“开始” &gt;“设置” &gt;“更新和安全” &gt;“恢复”。在“初始化此电脑”下，选择“开始”。<a href="ms-settings:recovery?activationSource=SMC-IA-4026528">打开“恢复”设置</a>。</li><li>选项 2：重启电脑以访问登录屏幕，然后长按 Shift 键，同时依次选择屏幕右下角的“电源”图标 &gt;“重启”。在计算机重启后，依次选择“疑难解答”&gt;“初始化此电脑”。</li><li>选项 3：选择“开始”，然后长按 Shift 键，同时依次选择“电源”图标 &gt;“重启”将计算机重启到恢复模式。在计算机重启后，依次选择“疑难解答”&gt;“初始化此电脑”。</li></ul><blockquote><p>重置电脑是重置所有用户安装的软件，可以选择保存自己的文档，在重置时不会完全删除所有驱动。</p><p>全新安装会删除所有的用户数据，在安装之前也可以保存文档，全新安装后需要重新安装驱动。</p></blockquote><h2 id="系统完全重置"><a href="#系统完全重置" class="headerlink" title="系统完全重置"></a>系统完全重置</h2><blockquote><p>本文教程不使用第三方工具进行装机，如需要第三方工具的装机可以百度“微PE”。</p></blockquote><h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h3><p>确保你的数据已经全部备份，在完全重置的系统安装中建议完全格式化系统盘。对于双硬盘的用户，建议在重装系统前将其取出。</p><blockquote><p>对于正版系统的安装：</p><ul><li>确保 Windows 10 已激活</li><li>在重新安装 Windows 之前，你需要将 Microsoft 帐户链接到数字许可证</li><li>如果你对电脑进行了重大的硬件更换，需要重新激活 Windows 10</li><li>你将需要重新安装与你的许可证匹配的 Windows 版本</li></ul></blockquote><h3 id="使用安装介质执行-Windows-10-的干净安装"><a href="#使用安装介质执行-Windows-10-的干净安装" class="headerlink" title="使用安装介质执行 Windows 10 的干净安装"></a>使用安装介质执行 Windows 10 的干净安装</h3><h4 id="制作系统镜像盘"><a href="#制作系统镜像盘" class="headerlink" title="制作系统镜像盘"></a>制作系统镜像盘</h4><ol><li>在工作电脑上，转到 <a href="http://go.microsoft.com/fwlink/p/?LinkID=616447">Microsoft 软件下载网站</a> <a href="http://go.microsoft.com/fwlink/p/?LinkID=616447">http://go.microsoft.com/fwlink/p/?LinkID=616447</a> ，然后选择<strong>立即下载工具</strong>。</li></ol><p><img src="D:\Veen&#39;s Files\win10\1.png" alt="1"></p><p><img src="D:\Veen&#39;s Files\win10\2.png" alt="2"></p><ol><li>在下载完成后，从你的桌面中打开该工具，然后在询问是否要使用工具对设备进行更改时，选择“是”。</li><li>当出现 Windows 10 设置指南时，请接受许可条款和协议。</li></ol><p><img src="D:\Veen&#39;s Files\win10\3.png" alt="3"></p><ol><li>选择<strong>从其他电脑中创建安装介质（U 盘、DVD 或 ISO 文件）</strong>，然后选择“下一步”。</li></ol><p><img src="D:\Veen&#39;s Files\win10\5.png" alt="5"></p><ol><li>选择语言、版本和体系结构（64 位或 32 位），推荐使用64位系统。</li></ol><p><img src="D:\Veen&#39;s Files\win10\6.png" alt="6"></p><ol><li>按照这些步骤创建安装介质，然后选择“完成”。</li></ol><p><img src="D:\Veen&#39;s Files\win10\9.png" alt="9"></p><p><img src="D:\Veen&#39;s Files\win10\7.png" alt="7"></p><p><img src="D:\Veen&#39;s Files\win10\8.png" alt="8"></p><blockquote><p>此时系统镜像已经写入U盘，此时开始准备重新装机，请确认重要文件已经备份完毕。</p></blockquote><h4 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h4><blockquote><p>在安装系统之前请确认电脑的启动模式是UEFI模式。</p><ul><li>在计算机启动时连续按特定键进入EFI设置。通常台式机为Del，笔记本电脑为F2。按Esc键将提供完整菜单，然后选择BIOS设置。</li><li>在“Boot”选项卡下找到Legacy / UEFI引导模式配置。禁用（<em>Disabled</em>）Legacy并启用（<em>Enabled</em>）UEFI。</li><li>按F10保存设置，然后退出。</li></ul></blockquote><ol><li>接下来重启电脑，在重启之后按下选择启动介质的快捷键，选择“<strong>USB Storage Device</strong>”。</li></ol><blockquote><p>常见品牌的选择启动介质的快捷键：联想和戴尔是F12；华硕：F8 其他的：百度一下，你就知道。</p></blockquote><ol><li>此时U盘引导系统进入Win10安装程序，请选择最符合你的需求的选项，然后选择“下一步”。（家庭版正版重装请选择家庭版，需要重装专业版可选择专业版，在之后一篇推送中提供专业版破解指南） </li><li>选择“立即安装”，然后选中“我接受”框。</li><li>选择“下一步”，然后选择“自定义: 仅安装 Windows (高级)”。</li><li>你的设备将显示驱动器和分区的列表，删除/格式化系统盘，多个硬盘用户请勿删除有重要数据的硬盘。</li><li>选择“删除”系统盘所有分区。指示“未分配空间”的驱动器除外。完成后，仅应保留驱动器 0 未分配空间。（双SSD用户可能为驱动器1，因此安装前最好取出第二块硬盘）</li><li>选择“下一步”，（此时如果提示硬盘格式错误，请使用命令行diskpart工具 进行修复，参照文末TIPS）Windows 安装程序屏幕将显示“正在安装 Windows”。安装完成后，设备可能提示重启，在有倒计时的界面不要自行点击重启，等待自动重启。</li><li>之后就是进入系统初始界面，按照提示进行设置即可。</li><li>进入系统后点击更新，更新所有系统驱动。</li></ol><p><img src="C:\Users\VEEN_ZHOU\Pictures\1.png" alt="1"></p><p><img src="C:\Users\VEEN_ZHOU\Pictures\2.png" alt="2"></p><h2 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h2><p>重装时出现硬盘分区表错误可以使用命令行diskpart工具进行磁盘修复、格式转换。在重装系统界面按“shift+F10”调出命令提示符，输入diskpart进入分区程序，部分命令说明如下：</p><p><strong><code>list disk</code></strong>：显示本机安装的硬盘，编号为0、1、2……只有一块硬盘的用户只有“磁盘0”</p><p><strong><code>select disk X</code></strong>：选择上面列出的硬盘</p><p><strong><code>clean</code></strong>：清空选中硬盘原有分区信息</p><p><strong><code>convert gpt</code></strong>：将分区格式转换为GPT</p><p><strong><code>list partition</code></strong>：显示已有分区</p><p><strong><code>create partition efi/msr/primary size=n</code></strong>：新建EFI/MSR/主分区，单位为MB</p>]]></content>
    
    
    
    <tags>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CFD Case Test</title>
    <link href="/2019/12/08/CFD%20Case%20Test/"/>
    <url>/2019/12/08/CFD%20Case%20Test/</url>
    
    <content type="html"><![CDATA[<h1 id="网格无关性检验"><a href="#网格无关性检验" class="headerlink" title="网格无关性检验"></a>网格无关性检验</h1><a id="more"></a><p><a href="https://www.grc.nasa.gov/www/wind/valid/tutorial/spatconv.html">Reprinted From NASA V&amp;A</a> </p><h2 align="center" class="style3">Examining Spatial (Grid) Convergence</h2><!-------------------------------------------------------------------------><h3 class="style1">Introduction </h3><p> The examination of the spatial convergence of a simulation is a straight-forward method fordetermining the <i>ordered</i> <a href="errors.html">discretizationerror</a> in a CFD simulation.  The method involves performing thesimulation on two or more successively finer grids.  The term <i>gridconvergence study</i> is equivalent to the commonly used term <i>gridrefinement study</i>. </p><p> As the grid is refined (grid cells become smaller and the numberof cells in the flow domain increase) and the time step is refined (reduced) the spatial and temporal discretization errors, respectively,should asymptotically approaches zero, excluding computer round-off error.</p><p> Methods for examining the spatial and temporal convergence of CFDsimulations are presented in the book by <ahref="bibliog.html#Roach94">Roache</a>.  They are based on use ofRichardson's extrapolation.  A summary of the method is presentedhere.</p><p> A general discussion of <a href="errors.html">errors in CFD computations</a> is available for background.</p><p> We will mostly likely want to determine the error band for theengineering quantities obtained from the finest grid solution.However, if the CFD simulations are part of a design study that mayrequire tens or hundreds of simulations, we may want to use one of thecoarser grids.  Thus we may also want to be able to determine the erroron the coarser grid.</p><!-------------------------------------------------------------------------><h3 class="style1">Grid Considerations for a Grid Convergence Study</h3><p> The easiest approach for generating the series of grids is togenerate a grid with what one would consider <i>fine</i> grid spacing,perhaps reaching the upper limit of one's tolerance for generating agrid or waiting for the computation on that grid to converge.  Thencoarser grids can be obtained by removing every other grid line in eachcoordinate direction.  This can be continued to create additionallevels of coarser grids.  In generating the fine grid, one can build inthe <b>n</b> levels of coarser grids by making sure that the number ofgrid points in each coordinate direction satisfies the relation</p><p align="center"><b> N = 2<sup>n</sup> m + 1</b></p><p> where <b>m</b> is an integer.  For example, if two levels of coarsergrids are desired (i.e. fine, medium, and coarse grids) then the numberof grid points in each coordinate direction must equal <b>4 m + 1</b>.The <b>m</b> may be different for each coordinate direction.</p><p> The <a href="http://www.grc.nasa.gov/WWW/winddocs">WIND</a> code has a <a href="http://www.grc.nasa.gov/WWW/winddocs/user/keywords/sequence.html">gridsequencing control</a> that will solve the solution on the coarser gridwithout having to change the grid input file, boundary conditionsettings, or the input data file.  Further, the converged solution onthe coarser grid then can be used directly as the initial solution onthe finer grid.  This option was originally used to speed upconvergence of solutions; however, can be used effectively for a gridconvergence study.</p><p> It is not necessary to halve the number of grid points in eachcoordinate direction to obtain the coarser grid.  <i>Non-integer</i> gridrefinement or coarsening can be used.  This may be desired since<i>halfing</i> a grid may put the solution out of the asymptotic range.Non-integer grid refinement or coarsening will require the generationof a new grid.  It is important to maintain the same grid generationparameters as the original grid. One approach is to select several gridspacings as reference grid spacings.  One should be the grid spacingnormal to the walls.  Others may be spacings at flow boundaries, atjunctures in the geometry, or at zonal interfaces.  Upon picking theratio as which the grid is to be refined or coarsened, this same ratiois applied to these spacings.  The number of grid points are thenadjusted according to grid quality parameters, such as grid spacingratio limits.  The surface and volume grids are then generated usingthe same methods as the original grid.  The grid refinement ratioshould be a minimum of <b>r &gt;= 1.1</b> to allow the discretizationerror to be differentiated from other error sources (iterativeconvergence errors, computer round-off, etc...).</p><!-------------------------------------------------------------------------><h3 class="style1">Order of Grid Convergence</h3><p> The order of grid convergence involves the behavior of the solutionerror defined as the difference between the discrete solution and theexact solution,</p><p align="center"><img src="eq_error1.gif" alt="Formula is described in the surrounding text"></p><p> where <b>C</b> is a constant, <b>h</b> is some measure of gridspacing, and <b>p</b> is the order of convergence.  A &quot;second-order&quot;solution would have <b>p = 2</b>.</p><p> A CFD code uses a numerical algorithm that will provide a <i>theoretical order of convergence</i>; however, the boundary conditions,numerical models, and grid will reduce this order so that the <i>observed order of convergence</i> will likely be lower.</p> <p> Neglecting higher-order terms and taking the logarithm of both sides of the above equation results in: </p> <p align="center"><img src="eq_logerror.gif" alt="formula is described in the surrounding text"></p><p> The order of convergence <b>p</b> can be obtained from the slope of thecurve of <b>log(E)</b> versus <b>log(h)</b>.   If such data pointsare available, the slope can be read from the graph or the slope can becomputed from a least-squares fit of the data.  The least-squares will likely be inaccurate if there are only a few data points.</p><p> A more direct evaluation of <b>p</b> can be obtained from three solutions using a constant grid refinement ratio <b>r</b>, </p><p align="center"><img src="eq_porder1.gif" alt="formula is described in the surrounding text"></p><p> The <i>order of accuracy</i> is determined by the order of theleading term of the <i>truncation error</i> and is represented withrespect to the scale of the discretization, <b>h</b>. The <i>localorder of accuracy</i> is the order for the stencil representing thediscretization of the equation at one location in the grid. The<i>global order of accuracy</i> considers the propagation andaccumulation of errors outside the stencil. This propagation causes theglobal order of accuracy to be, in general, one degree less than thelocal order of accuracy.  The order of accuracy of the boundaryconditions can be one order of accuracy lower than the interior orderof accuracy without degrading the overall global accuracy.</p><!-------------------------------------------------------------------------><h3 class="style1">Asymptotic Range of Convergence</h3><p> Assessing the accuracy of code and caluculations requires that the gridis sufficiently refined such that the solution is in the asymptoticrange of convergence. The asymptotic range of convergence is obtainedwhen the grid spacing is such that the various grid spacings <b>h</b> anderrors <b>E</b> result in the constancy of <b>C</b>,</p><p align="center"><b> C = E / h<sup>p</sup> </b></p><p> Another check of the asymptotic range will be discussed in the section on the grid convergence index.</p><!-------------------------------------------------------------------------><h3 class="style1">Richardson Extrapolation</h3><p> Richardson extrapolation is a method for obtaining a higher-orderestimate of the continuum value (value at zero grid spacing) from aseries of lower-order discrete values.</p><p> A simulation will yield a quantity <b>f</b> that can be expressedin a general form by the series expansion:</p><p align="center"><b>   f = f<sub>h=0</sub> + g<sub>1</sub> h + g<sub>2</sub> h<sup>2</sup>     + g<sub>3</sub> h<sup>3</sup> + ...</b></p><p> where <b>h</b> is the grid spacing and the functions<b>g<sub>1</sub></b>, <b>g<sub>2</sub></b>, and <b>g<sub>3</sub></b>are independent of the grid spacing.  The quantity <b>f</b> isconsidered &quot;second-order&quot; if <b>g<sub>1</sub> = 0.0</b>.  The<b>f<sub>h=0</sub></b> is the continuum value at zero grid spacing.</p><p> If one assumes a second-order solution and has computed <b>f</b> ontwo grids of spacing <b>h<sub>1</sub></b> and <b>h<sub>2</sub></b> with<b>h<sub>1</sub></b> being the finer (smaller) spacing, then one canwrite two equations for the above expansion, neglect third-order andhigher terms, and solve for <b>f<sub>h=0</sub></b> to estimate thecontinuum value,</p><p align="center"><img src="eq_rich1.gif" alt="Forumla is described in the surrounding text"></p><p> where the grid refinement ratio is:</p> <p align="center"><b> r = h<sub>2</sub> /  h<sub>1</sub></b></p><p> The Richardson extrapolation can be generalized for a <b>p-th</b>order methods and <b>r</b>-value of grid ratio (which does not have tobe an integer) as:</p><p align="center"><img src="eq_rich2.gif" alt="Forumla is described in the surrounding text"></p><p> Traditionally, Richardson extrapolation has been used with gridrefinement ratios of <b>r = 2</b>.  Thus, the above equation simplifiesto:</p><p align="center"><img src="eq_rich3.gif" alt="Forumla is described in the surrounding text"></p><p> In theory, the above equations for the Richardson extrapolation willprovide a fourth-order estimate of <b>f<sub>h=0</sub></b>, if <b>f<sub>1</sub></b> and <b>f<sub>2</sub></b>were computed using exactly second-order methods.  Otherwise, it willbe a third-order estimate.  In general, we will consider <b>f<sub>h=0</sub></b>to be <b>p+1</b> order accurate.  Richardson extrapolation can be appliedfor the solution at each grid point, or to solution functionals, suchas pressure recovery or drag.  This assumes that the solution isglobally second-order in addition to locally second-order and that thesolution functionals were computed using consistent second-ordermethods.  Other cautions with using Richardson extrapolation(non-conservative, amplification of round-off error, etc...) arediscussed in the book by <a href="bibliog.html#Roachebook">Roache</a>.</p><p> For our purposes we will assume <b>f</b> is a solution functional (i.e.pressure recovery).  The <b>f<sub>h=0</sub></b> is then as an estimate of <b>f</b>in the limit as the grid spacing goes to zero.  One use of<b>f<sub>h=0</sub></b> is to report the value as the an improved estimate of<b>f<sub>1</sub></b> from the CFD study; however, one has to understand the caveatsmentioned above that go along with that value. </p> <p> The other use of <b>f<sub>h=0</sub></b> is to obtain an estimate of thediscretization error that bands <b>f</b> obtained from the CFD.  This usewill now be examined.</p><p> The difference between <b>f<sub>1</sub></b> and <b>f<sub>h=0</sub></b> is one error estimator;however, this requires consideration of the caveats attached to<b>f<sub>h=0</sub></b>.</p><p> We will focus on using <b>f<sub>1</sub></b> and <b>f<sub>2</sub></b> to obtain an error estimate.Examining the generalized Richardson extrapolation equation above, the second term on the right-hand sidecan be considered to be an an error estimator of <b>f<sub>1</sub></b>.  The equation can be expressed as:</p><p align="center"><b>   A<sub>1</sub> =  E<sub>1</sub>   + O( h<sup>p+1</sup>, E<sub>1</sub><sup>2</sup>) </b></p><p> where <b>A<sub>1</sub></b> is the actual fractional error defined as:</p> <p align="center"><b>   A<sub>1</sub> =  ( f<sub>1</sub> - f<sub>h=0</sub> ) / f<sub>h=0</sub> </b></p><p> and <b>E<sub>1</sub></b> is the estimated fractional error for <b>f<sub>1</sub></b> defined as:</p> <p align="center"><img src="eq_eerror1.gif" alt="Forumla is described in the surrounding text"></p><p> where the relative error is defined as:</p><p align="center"><img src="eq_eps1.gif" alt="Forumla is described in the surrounding text"></p><p> This quantity should not be used as an error estimator since it does not take into account <b>r</b> or <b>p</b>.  This may lead to anunderestimation or overestimation of the error.  One could make this quantity artificially small by simply using a grid refinement ratio <b>r</b> close to 1.0.</p><p> The estimated fractional error <b>E<sub>1</sub></b> is an<i>ordered</i> error estimator and a good approximation of thediscretization error on the fine grid if <b>f<sub>1</sub></b> and<b>f<sub>2</sub></b> were obtained with good accuracy (i.e.<b>E<sub>1</sub>&lt;1</b>).  The value of <b>E<sub>1</sub></b> may bemeaningless if <b>f<sub>1</sub></b> and <b>f<sub>h=0</sub></b> are zeroor very small relative to <b>f<sub>2</sub>-f<sub>1</sub></b>.  If suchis the case, then another normalizing value should be used in place of<b>f<sub>1</sub></b>.</p><p> If a large number of CFD computations are to be performed (i.e fora DOE study), one may wish to use the coarser grid with<b>h<sub>2</sub></b>.  We will then want to estimate the error on thecoarser grid.  The Richardson extrapolation can be expressed as:</p><p align="center"><img src="eq_rich4.gif" alt="Forumla is described in the surrounding text"></p><p> The estimated fractional error for <b>f<sub>2</sub></b> is defined as:</p> <p align="center"><img src="eq_eerror2.gif" alt="Forumla is described in the surrounding text"></p><p> Richardson extrapolation is based on a Taylor series representation as indicated in Eqn. \ref{eq:series}.  If there are shocks and other discontinuities present, the Richardson extrapolation is invalid in the region of the discontinuity.  It is still felt that it applies to solution functionals computed from the entire flow field.</p><!-------------------------------------------------------------------------><h3 class="style1">Grid Convergence Index (GCI)</h3><p> <a href="bibliog.html#Roach94">Roache</a> suggests a gridconvergence index <b>GCI</b> to provide a consistent manner inreporting the results of grid convergence studies and perhaps providean error band on the grid convergence of the solution.  The <b>GCI</b>can be computed using two levels of grid; however, three levels arerecommended in order to accurately estimate the order of convergenceand to check that the solutions are within the asymptotic range ofconvergence.</p><p> A consistent numerical analysis will provide a result whichapproaches the actual result as the grid resolution approaches zero.Thus, the discretized equations will approach the solution of theactual equations. One significant issue in numerical computations iswhat level of grid resolution is appropriate. This is a function of theflow conditions, type of analysis, geometry, and other variables. Oneis often left to start with a grid resolution and then conduct a seriesof grid refinements to assess the effect of grid resolution. This isknown as a grid refinement study.</p><p> One must recognize the distinction between a numerical result whichapproaches an asymptotic numerical value and one which approaches thetrue solution. It is hoped that as the grid is refined and resolutionimproves that the computed solution will not change much and approachan asymptotic value (i.e. the true numerical solution). There still maybe error between this asymptotic value and the true physical solutionto the equations.</p><p> <a href="bibliog.html#Roach94">Roache</a> has provided a methodologyfor the uniform reporting of grid refinement studies. &quot;The basic ideais to approximately relate the results from any grid refinement test tothe expected results from a grid doubling using a second-order method.The <b>GCI</b> is based upon a grid refinement error estimator derivedfrom the theory of generalized Richardson Extrapolation.  It isrecommended for use whether or not Richardson Extrapolation is actuallyused to improve the accuracy, and in some cases even if the conditionsfor the theory do not strictly hold.&quot; The object is to provide ameasure of uncertainty of the grid convergence.</p><p> The <b>GCI</b> is a measure of the percentage the computed value isaway from the value of the asymptotic numerical value. It indicates anerror band on how far the solution is from the asymptotic value. Itindicates how much the solution would change with a further refinementof the grid. A small value of <b>GCI</b> indicates that the computationis within the asymptotic range.</p><p> The <b>GCI</b> on the fine grid is defined as:</p> <p align="center"><img src="eq_gcifine1.gif" alt="Forumla is described in the surrounding text"></p><p> where <b>F<sub>s</sub></b> is a factor of safety.  The refinementmay be spatial or in time.  The factor of safety is recommended to be<b>F<sub>s</sub>=3.0</b> for comparisons of two grids and<b>F<sub>s</sub>=1.25</b> for comparisons over three or more grids.The higher factor of safety is recommended for reporting purposes andis quite conservative of the actual errors.</p><p> When a design or analysis activity will involve many CFD simulations (i.e. DOE study), one may want to use the coarser grid <b>h<sub>2</sub></b>.  It is then necessary to quantify the error for the coarser grid.  The <b>GCI</b> for the coarser grid is defined as:</p><p align="center"><img src="eq_gcicoarse1.gif" alt="Forumla is described in the surrounding text" ></p><p> It is important that each grid level yield solutions that are in the asymptotic range of convergence for the computed solution.  This can be checked by observing two <b>GCI</b> values as computed over three grids,</p><p align="center"><b>GCI<sub>23</sub> = r<sup>p</sup> GCI<sub>12</sub></b></p><!-------------------------------------------------------------------------><h3 class="style1">Required Grid Resolution</h3><p> If a desired accuracy level is known and results from the gridresolution study are available, one can then estimate the gridresolution required to obtain the desired level of accuracy,</p><p align="center"><img src="eq_rstar.gif" alt="Forumla is described in the surrounding text"></p><!-------------------------------------------------------------------------><h3 class="style1">Independent Coordinate Refinement and Mixed Order Methods</h3><p> The grid refinement ratio assumes that the refinement ratio<b>r</b> applies equally in all coordinate directions <b>(i,j,k)</b>for steady-state solutions and also time <b>t</b> for time-dependentsolutions.  If this is not the case, then the grid convergence indicescan be computed for each direction independently and then added to givethe overall grid convergence index,</p><p align="center"><img src="eq_gcisum.gif" alt="Forumla is described in the surrounding text"></p><!-------------------------------------------------------------------------><h3 class="style1">Effective Grid Refinement Ratio</h3><p> If one generates a finer or coarser grid and is unsure of the value of grid refinement ratio to use, one can compute an effective grid refinement ratio as:</p><p align="center"><img src="eq_reffective.gif" alt="Forumla is described in the surrounding text"></p><p> where <b>N</b> is the total number of grid points used for the gridand <b>D</b> is the dimension of the flow domain. This effective gridrefinement ratio can also be used for unstructured grids.</p><!-------------------------------------------------------------------------><h3 class="style1">Example Grid Convergence Study</h3><p> The following example demonstrates the application of the aboveprocedures in conducting a grid convergence study.  The objective ofthe CFD analysis was to determine the pressure recovery for an inlet.The flow field is computed on three grids, each with twice the numberof grid points in the <b>i</b> and <b>j</b> coordinate directions asthe previous grid.  The number of grid points in the <b>k</b> directionremains the same.  Since the flow is axisymmetric in the <b>k</b>direction, we consider the finer grid to be double the next coarsergrid.   The table below indicates the grid information and the resultingpressure recovery computed from the solutions. Each solution wasproperly converged with respect to iterations.  The column indicated by&quot;spacing&quot; is the spacing normalized by the spacing of the finest grid.</p><table border cellpadding=0 rules="none" align="center"><tr ><th align=center scope="col"> Grid </th><th align=center> Normalized Grid Spacing </th><th align=center> Pressure Recovery, Pr </th></tr><tr ><td align=center scope="row"> 1 </td><td align=center> 1 </td><td align=center> 0.97050 </td></tr><tr ><td align=center scope="row"> 2 </td><td align=center> 2 </td><td align=center> 0.96854 </td></tr><tr ><td align=center scope="row"> 3 </td><td align=center> 4 </td><td align=center> 0.96178 </td></tr></table><p> The figure below shows the plot of pressure recoveries with varying grid spacings.  As the grid spacing reduces, the pressure recoveries approach an asymptotic zero-grid spacing value. </p><p> We determine the order of convergence observed from these results,</p><p align="center"><b> p = ln[ ( 0.96178 - 0.96854 ) / ( 0.96854 - 0.97050 ) ]      / ln(2) = 1.786170 </b></p><p> The theoretical order of convergence is <b>p=2.0</b>.  Thedifference is most likely due to grid stretching, grid quality,non-linearities in the solution, presence of shocks, turbulencemodeling, and perhaps other factors.</p><p> We now can apply Richardson extrapolation using the two finestgrids to obtain an estimate of the value of the pressure recovery atzero grid spacing,</p><p align="center"><b> Pr<sub>h=0</sub> = 0.97050 +                  ( 0.97050 - 0.96854 ) / ( 2<sup>1.786170</sup> - 1 ) <br>                 = 0.97050 + 0.00080 = 0.97130 </b></p><p> This value is also plotted on the figure below.</p><p> The grid convergence index for the fine grid solution can now be computed. A factor of safety of <b>F<sub>S</sub>=1.25</b> is used since three grids were used to estimage <b>p</b>.  The <b>GCI</b> for grids 1 and 2 is:</p><p align="center"><b> GCI<sub>12</sub> = 1.25 | ( 0.97050 - 0.96854 ) / 0.97050 |             / ( 2<sup>1.786170</sup> - 1 )            100%  = 0.103083% </b></p><p> The <b>GCI</b> for grids 2 and 3 is:</p><p align="center"><b> GCI<sub>23</sub> = 1.25 | ( 0.96854 - 0.96178 ) / 0.96854 |             / ( 2<sup>1.786170</sup> - 1 )            100%  = 0.356249% </b></p><p> We can now check that the solutions were in the asymptotic range of convergence, </p><p align="center"><b> 0.356249 / ( 2<sup>1.786170</sup> 0.103083 ) = 1.002019    </b></p><p> which is approximately one and indicates that the solutions are well within the asymptotic range of convergence.</p><p> Based on this study we could say that the pressure recovery for the supersonic ramp is estimated to be <b> Pr = 0.97130 </b> with an error band of <b>0.103%</b> or <b>0.001</b>.</p><p align="center"><img src="pr.gif" alt="Forumla is described in the surrounding text"></p><!-------------------------------------------------------------------------><h3 class="style1">VERIFY: A Fortran program to Perform Calculations Associated with a Grid Convergence Study</h3><p> The Fortran 90 program <a href="verify.f90"> verify.f90</a> was written to carry out the calculations associated with a grid convergence study involving 3 or more grids.  The program is compiled on a unix system through the commands:</p><blockquote><b> f90 verify.f90 -o verify </b></blockquote><p> It reads in an ASCII file (<a href="prD.do">prD.do</a>) through thestandard input unit (5) that contains a list of pairs of grid size andvalue of the observed quantity <b>f</b>.</p> <blockquote><b> verify &lt; <a href="prD.do">prD.do</a> &gt; <a href="prD.out">prD.out</a></b></blockquote><p> It assumes the values from the finest grid are listed first.  The output is then written to the standard output unit (6)  <a href="prD.out">prD.out</a>.The output from the of {\tt verify} for the results of Appendix A are:</p><blockquote><pre> --- VERIFY: Performs verification calculations --- Number of data sets read =  3      Grid Size     Quantity      1.000000      0.970500      2.000000      0.968540      4.000000      0.961780 Order of convergence using first three finest grid  and assuming constant grid refinement (Eqn. 5.10.6.1)  Order of Convergence, p =  1.78618479 Richardson Extrapolation: Use above order of convergence and first and second finest grids (Eqn. 5.4.1)  Estimate to zero grid value, f_exact =  0.971300304 Grid Convergence Index on fine grids. Uses p from above. Factor of Safety =  1.25   Grid     Refinement               Step      Ratio, r       GCI(%)   1  2      2.000000      0.103080   2  3      2.000000      0.356244 Checking for asymptotic range using Eqn. 5.10.5.2. A ratio of 1.0 indicates asymptotic range.  Grid Range    Ratio  12 23      0.997980 --- End of VERIFY ---</pre></blockquote><!-------------------------------------------------------------------------><h3 class="style1">Examples of Grid Converence Studies in the Archive</h3><p>A grid convergence study is performed in the<br><a href="wedge/wedge.html"> Supersonic Wedge</a> case.</p><!-------------------------------------------------------------------------><h3 class="style1">Examples of Grid Converence Studies in Literature</h3><p> Other examples of grid convergence studies that use the procedures outlined above can be found in <a href="bibliog.html#Roachebook">the book by Roache</a> and the paper by <a href="bibliog.html#Steffen95" > Steffen et al.</a>. </p><!-------------------------------------------------------------------------><h3 class="style1">NPARC Alliance Policy with Respect to Grid Converence Studies</h3><p> For the WIND verification and validation effort, it is suggestedthat the above procedures be used when conducting and reporting resultsfrom a grid convergence study.</p><!-------------------------------------------------------------------------><p><hr><br><span style="font-weight: bold;">Last Updated:</span> Thursday, 17-Jul-2008 09:46:07 EDT<br></p><div id="footer"><!-- <img src="images/nasa_logo.gif" class="right"      width= "50" height="40" alt="NASA meatball" />--><div>  <span style="font-weight: bold;">Responsible NASA Official/Curator:</span>       <a href="mailto:john.w.slater@nasa.gov">John W. Slater</a></div><p><span><span style="font-weight: bold;">Web Policies: </span><br>      <a href="http://www.grc.nasa.gov/Doc/grcwebpolicies.html">Web Privacy Policy and Important Notices</a>&lt;/span&gt;<br /><br>        <span style="font-weight: bold;">Adobe Reader Download: </span><br>        <a href="http://www.adobe.com/products/acrobat/readstep2.html" title="Go to Adobe Web Site"><br>        Adobe Reader</a><br><!-- <span class="notprinted"><span style="font-weight: bold;">Adobe Reader Download: </span>          <a href="http://www.adobe.com/products/acrobat/readstep2.html" title="Go to Adobe Web Site">        Adobe Reader</a></span> --></p><p>&lt;/div&gt;</p><p>&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</p><p>&lt;/body&gt;<br>&lt;/html&gt;</p>]]></content>
    
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Research</title>
    <link href="/2019/12/06/Research/"/>
    <url>/2019/12/06/Research/</url>
    
    <content type="html"><![CDATA[<p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191206215017237.png" alt="image-20191206215017237"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux</title>
    <link href="/2019/12/06/Linux/"/>
    <url>/2019/12/06/Linux/</url>
    
    <content type="html"><![CDATA[<p>It is a document for Linux using.  </p><a id="more"></a><pre><code class="hljs shell">apt-get install --reinstall [Package]</code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Git Bash</title>
    <link href="/2019/11/27/Git%20bash/"/>
    <url>/2019/11/27/Git%20bash/</url>
    
    <content type="html"><![CDATA[<p>本文用于记录Git常用语法。</p><a id="more"></a><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="Git-Bash登录"><a href="#Git-Bash登录" class="headerlink" title="Git Bash登录"></a>Git Bash登录</h3><pre><code class="hljs bash">$ git config --global user.name “Your Name” <span class="hljs-comment">#（注意前边是“- -global”，有两个横线） </span>$ git config --global user.email “email@example.com”</code></pre><h3 id="Git-SSH配置"><a href="#Git-SSH配置" class="headerlink" title="Git SSH配置"></a>Git SSH配置</h3><pre><code class="hljs bash">ssh-keygen -t rsa -C “email@example.com”<span class="hljs-comment">#全部回车</span><span class="hljs-comment">#打开.ssh文件夹下的id-rsa.pub文件的内容，复制到ssh key</span></code></pre><h3 id="Git-Bash创建仓库"><a href="#Git-Bash创建仓库" class="headerlink" title="Git Bash创建仓库"></a>Git Bash创建仓库</h3><pre><code class="hljs bash">$ git init newrepo$ git add README <span class="hljs-comment">#将目录下以README文件提交到仓库中</span>$ git commit -m <span class="hljs-string">&#x27;初始化项目版本&#x27;</span><span class="hljs-comment">#备注功能</span>$ git <span class="hljs-built_in">clone</span> &lt;repo<span class="hljs-comment">###  &lt;directory###  #repo:Git 仓库 directory:本地目录。</span>$ git status <span class="hljs-comment">#查看项目的当前状态</span></code></pre><h3 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h3><pre><code class="hljs bash"><span class="hljs-comment"># 查看工作区和暂存区的状态</span>$ git status <span class="hljs-comment"># 将工作区的文件提交到暂存区</span>$ git add .  <span class="hljs-comment"># 提交到本地仓库</span>$ git commit -m <span class="hljs-string">&quot;本次提交说明&quot;</span><span class="hljs-comment"># add和commit的合并，便捷写法（未追踪的文件无法直接提交到暂存区/本地仓库）</span>$ git commit -am <span class="hljs-string">&quot;本次提交说明&quot;</span>  <span class="hljs-comment"># 将本地分支和远程分支进行关联</span>$ git push -u origin branchName <span class="hljs-comment"># 将本地仓库的文件推送到远程分支</span>$ git push<span class="hljs-comment"># 拉取远程分支的代码</span>$ git pull origin branchName <span class="hljs-comment"># 合并分支</span>$ git merge branchName <span class="hljs-comment"># 查看本地拥有哪些分支</span>$ git branch<span class="hljs-comment"># 查看所有分支（包括远程分支和本地分支）</span>$ git branch -a <span class="hljs-comment"># 切换分支</span>$ git checkout branchName <span class="hljs-comment"># 临时将工作区文件的修改保存至堆栈中</span>$ git stash<span class="hljs-comment"># 将之前保存至堆栈中的文件取出来</span>$ git stash pop</code></pre><h3 id="Git-Bash提交修改"><a href="#Git-Bash提交修改" class="headerlink" title="Git Bash提交修改"></a>Git Bash提交修改</h3><ul><li>远程仓库未创建</li></ul><pre><code class="hljs bash">git init <span class="hljs-comment">#初始化一只本地仓库（或者基于初始化仓库建立项目vue init webpack demoxxxx）</span>git status <span class="hljs-comment">#查看状态</span>git add -A <span class="hljs-comment">#提交所有文件改动</span>git remote add origin ssh地址 <span class="hljs-comment"># 链接远程仓库步骤1</span>git push -u origin master <span class="hljs-comment">#链接远程仓库步骤2</span>git add -A <span class="hljs-comment">#提交所有文件改动</span>git status <span class="hljs-comment">#查看状态</span>git commit -m <span class="hljs-string">&quot;xx&quot;</span> <span class="hljs-comment">#备注功能</span>git status <span class="hljs-comment">#查看状态</span>git pull origin master <span class="hljs-comment">#拉最新代码 （下载）</span>git push origin master <span class="hljs-comment">#推送到远程 （上传）</span></code></pre><hr><ul><li>远程仓库已创建：</li></ul><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> ssh地址 <span class="hljs-comment">#关联远程</span>git remote add origin ssh地址 <span class="hljs-comment">#链接远程仓库步骤1</span>git pull origin master <span class="hljs-comment">#拉最新代码 （下载）</span>git add -A <span class="hljs-comment">#提交所有文件改动</span>git commit -m <span class="hljs-string">&quot;xx&quot;</span> <span class="hljs-comment">#备注功能</span>git push origin master <span class="hljs-comment">#推送到远程 （上传）</span></code></pre><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><pre><code class="hljs bash">$ git add . <span class="hljs-comment">#他会监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。</span>$ git add -u <span class="hljs-comment">#他仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区。add -u 不会提交新文件（untracked file）。（git add --update的缩写）</span>$ git add -A <span class="hljs-comment">#是上面两个功能的合集（git add --all的缩写）</span><span class="hljs-comment"># 添加指定文件到暂存区（追踪新增的指定文件）</span>$ git add [file1] [file2] ...<span class="hljs-comment"># 添加指定目录到暂存区，包括子目录</span>$ git add [dir]<span class="hljs-comment"># 添加当前目录的所有文件到暂存区（追踪所有新增的文件）</span>$ git add .<span class="hljs-comment"># 删除工作区/暂存区的文件</span>$ git rm [file1] [file2] ...<span class="hljs-comment"># 停止追踪指定文件，但该文件会保留在工作区</span>$ git rm --cached [file]<span class="hljs-comment"># 改名工作区/暂存区的文件</span>$ git mv [file-original] [file-renamed]<span class="hljs-comment"># Git 2.0 以下版本</span><span class="hljs-comment">#只作用于文件的新增和修改</span>$ git add .  <span class="hljs-comment">#只作用于文件的修改和删除</span>$ gti add -u<span class="hljs-comment">#作用于文件的增删改</span>$ git add -A <span class="hljs-comment"># Git 2.0 版本</span>$ git add . 等价于 $ git add -A</code></pre><h3 id="Git-Commit"><a href="#Git-Commit" class="headerlink" title="Git Commit"></a>Git Commit</h3><pre><code class="hljs bash"><span class="hljs-comment"># 将暂存区的文件提交到本地仓库并添加提交说明</span>$ git commit -m <span class="hljs-string">&quot;本次提交的说明&quot;</span>   <span class="hljs-comment"># add 和 commit 的合并，便捷写法</span><span class="hljs-comment"># 和 git add -u 命令一样，未跟踪的文件是无法提交上去的</span>$ git commit -am <span class="hljs-string">&quot;本次提交的说明&quot;</span>  <span class="hljs-comment"># 跳过验证继续提交</span>$ git commit --no-verify$ git commit -n<span class="hljs-comment"># 编辑器会弹出上一次提交的信息，可以在这里修改提交信息</span>$ git commit --amend<span class="hljs-comment"># 修复提交，同时修改提交信息</span>$ git commit --amend -m <span class="hljs-string">&quot;本次提交的说明&quot;</span><span class="hljs-comment"># 加入 --no-edit 标记会修复提交但不修改提交信息，编辑器不会弹出上一次提交的信息</span>$ git commit --amend --no-edit</code></pre><h3 id="Git-pull-push"><a href="#Git-pull-push" class="headerlink" title="Git pull push"></a>Git pull push</h3><pre><code class="hljs bash"><span class="hljs-comment"># 将本地仓库的文件推送到远程分支</span><span class="hljs-comment"># 如果远程仓库没有这个分支，会新建一个同名的远程分支</span><span class="hljs-comment"># 如果省略远程分支名，则表示两者同名</span>$ git push &lt;远程主机名<span class="hljs-comment">###  &lt;本地分支名&gt;:&lt;远程分支名&gt;</span>$ git push origin branchname  <span class="hljs-comment"># 如果省略本地分支名，则表示删除指定的远程分支</span><span class="hljs-comment"># 因为这等同于推送一个空的本地分支到远程分支。</span>$ git push origin :master<span class="hljs-comment"># 等同于</span>$ git push origin --delete master<span class="hljs-comment"># 建立当前分支和远程分支的追踪关系</span>$ git push -u origin master<span class="hljs-comment"># 如果当前分支与远程分支之间存在追踪关系</span><span class="hljs-comment"># 则可以省略分支和 -u </span>$ git push<span class="hljs-comment"># 不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机</span>$ git push --all origin<span class="hljs-comment"># 拉取所有远程分支到本地镜像仓库中</span>$ git pull<span class="hljs-comment"># 拉取并合并项目其他人员的一个分支 </span>$ git pull origin branchname  <span class="hljs-comment"># 等同于 fetch + merge</span>$ git fetch origin branchName$ git merge origin/branchName<span class="hljs-comment"># 如果远程主机的版本比本地版本更新，推送时 Git 会报错，要求先在本地做 git pull 合并差异，</span><span class="hljs-comment"># 然后再推送到远程主机。这时，如果你一定要推送，可以使用 –-force 选项 </span><span class="hljs-comment"># （尽量避免使用）</span>$ git push --force origin | git push -f origin</code></pre><h3 id="Git-merge"><a href="#Git-merge" class="headerlink" title="Git merge"></a>Git merge</h3><pre><code class="hljs bash"><span class="hljs-comment"># 默认 fast-forward ，HEAD 指针直接指向被合并的分支</span>$ git merge <span class="hljs-comment"># 禁止快进式合并</span>$ git merge --no-ff $ git merge --squash</code></pre><h3 id="Git-Bash分支管理"><a href="#Git-Bash分支管理" class="headerlink" title="Git Bash分支管理"></a>Git Bash分支管理</h3><pre><code class="hljs bash">$ git branch (branchname) <span class="hljs-comment">#创建分支命令</span>$ git checkout (branchname) <span class="hljs-comment">#切换分支命令</span>$ git merge <span class="hljs-comment">#合并分支</span>$ git branch <span class="hljs-comment">#列出分支</span>$ git branch -d (branchname) <span class="hljs-comment">#删除分支</span><span class="hljs-comment"># 查看本地分支</span>$ git branch | git branch -l <span class="hljs-comment"># 查看远程分支</span>$ git branch -r <span class="hljs-comment"># 查看所有分支（本地分支+远程分支）</span>$ git branch -a <span class="hljs-comment"># 查看所有分支并带上最新的提交信息</span>$ git branch -av <span class="hljs-comment"># 查看本地分支对应的远程分支</span>$ git branch -vv <span class="hljs-comment"># 新建分支</span><span class="hljs-comment"># 在别的分支下新建一个分支，新分支会复制当前分支的内容</span><span class="hljs-comment"># 注意：如果当前分支有修改，但是没有提交到仓库，此时修改的内容是不会被复制到新分支的</span>$ git branch branchname <span class="hljs-comment"># 切换分支(切换分支时，本地工作区，仓库都会相应切换到对应分支的内容)</span>$ git checkout branchname <span class="hljs-comment"># 创建一个 aaa 分支，并切换到该分支 （新建分支和切换分支的简写）</span>$ git checkout -b aaa <span class="hljs-comment"># 可以看做是基于 master 分支创建一个 aaa 分支，并切换到该分支</span>$ git checkout -b aaa master<span class="hljs-comment"># 新建一条空分支（详情请看问题列表）</span>$ git checkout --orphan emptyBranchName$ git rm -rf . <span class="hljs-comment"># 删除本地分支,会阻止删除包含未合并更改的分支</span>$ git brnach -d branchname <span class="hljs-comment"># 强制删除一个本地分支，即使包含未合并更改的分支</span>$ git branch -D branchname  <span class="hljs-comment"># 删除远程分支</span><span class="hljs-comment"># 推送一个空分支到远程分支，其实就相当于删除远程分支</span>$ git push origin  :远程分支名<span class="hljs-comment"># 或者</span>$ git push origin --delete 远程分支名 <span class="hljs-comment"># 修改当前分支名</span>$ git branch -m branchname</code></pre><h3 id="Git-Bash查看提交历史"><a href="#Git-Bash查看提交历史" class="headerlink" title="Git Bash查看提交历史"></a>Git Bash查看提交历史</h3><pre><code class="hljs bash">$ git <span class="hljs-built_in">log</span>$ git <span class="hljs-built_in">log</span> --oneline <span class="hljs-comment">#用 --oneline 选项来查看历史记录的简洁的版本</span></code></pre><h3 id="Git-Bash创建标签"><a href="#Git-Bash创建标签" class="headerlink" title="Git Bash创建标签"></a>Git Bash创建标签</h3><pre><code class="hljs bash">$ git tag -a v1.0 <span class="hljs-comment">#创建标签</span>$ git tag -d v1.1 <span class="hljs-comment">#删除标签</span>$ git show v1.0 <span class="hljs-comment">#查看此版本修改内容</span><span class="hljs-comment"># 默认在 HEAD 上创建一个标签 </span>$ git tag v1.0<span class="hljs-comment"># 指定一个 commit id 创建一个标签 </span>$ git tag v0.9 f52c633<span class="hljs-comment"># 创建带有说明的标签，用 -a 指定标签名，-m 指定说明文字</span>$ git tag -a v0.1 -m <span class="hljs-string">&quot;version 0.1 released&quot;</span> <span class="hljs-comment"># 查看所有标签</span><span class="hljs-comment"># 注意：标签不是按时间顺序列出，而是按字母排序的。</span>$ git tag<span class="hljs-comment"># 查看单个标签具体信息</span>$ git show &lt;tagname&gt;<span class="hljs-comment"># 推送一个本地标签</span>$ git push origin &lt;tagname&gt;<span class="hljs-comment"># 推送全部未推送过的本地标签</span>$ git push origin --tags<span class="hljs-comment"># 删除本地标签</span><span class="hljs-comment"># 因为创建的标签都只存储在本地，不会自动推送到远程。</span><span class="hljs-comment"># 所以，打错的标签可以在本地安全删除。</span>$ git tag -d v0.1<span class="hljs-comment"># 删除一个远程标签（先删除本地 tag ，然后再删除远程 tag）</span>$ git push origin :refs/tags/&lt;tagname&gt;</code></pre><h2 id="进阶用法"><a href="#进阶用法" class="headerlink" title="进阶用法"></a>进阶用法</h2><h3 id="如何解决-gitignore-不起作用问题"><a href="#如何解决-gitignore-不起作用问题" class="headerlink" title="如何解决 .gitignore 不起作用问题"></a>如何解决 .gitignore 不起作用问题</h3><p><code>.gitignore</code> 仅适用于未跟踪的文件。如果您正在跟踪，那么 <code>.gitignore</code> 将不适用；如果想暴力的解决，可以使用如下方法，予以修复：</p><pre><code class="hljs bash">git rm --cached -r .git add .</code></pre><p>更详细的答案，可参见: <a href="https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository">ignore-files</a>。</p><h3 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h3><pre><code class="hljs bash">git push origin --delete branch-name// eg:git push origin --delete develop</code></pre><h3 id="查看-Git-信息"><a href="#查看-Git-信息" class="headerlink" title="查看 Git 信息"></a>查看 Git 信息</h3><pre><code class="hljs bash"><span class="hljs-comment"># 查看系统配置</span>$ git config --list<span class="hljs-comment"># 查看用户配置</span>$ cat ~/.gitconfig <span class="hljs-comment"># 查看当前项目的 git 配置</span>$ cat .git/config<span class="hljs-comment"># 查看暂存区的文件</span>$ git ls-files<span class="hljs-comment"># 查看本地 git 命令历史</span>$ git reflog<span class="hljs-comment"># 查看所有 git 命令</span>$ git --<span class="hljs-built_in">help</span> -a <span class="hljs-comment"># 查看当前 HEAD 指向</span>$ cat .git/HEAD<span class="hljs-comment"># git 中 D 向下翻一行  F 向下翻页  B 向上翻页  Q 退出</span><span class="hljs-comment"># 查看提交历史</span>$ git <span class="hljs-built_in">log</span> --oneline            --grep=<span class="hljs-string">&quot;关键字&quot;</span>          --graph           --all                --author <span class="hljs-string">&quot;username&quot;</span>               --reverse           -num          -p          --before=  1  day/1  week/1  <span class="hljs-string">&quot;2019-06-06&quot;</span>           --after= <span class="hljs-string">&quot;2019-06-06&quot;</span>          --<span class="hljs-built_in">stat</span>           --abbrev-commit           --pretty=format:<span class="hljs-string">&quot;xxx&quot;</span>          <span class="hljs-comment"># oneline -###  将日志记录一行一行的显示</span><span class="hljs-comment"># grep=&quot;关键字&quot; -###  查找日志记录中(commit提交时的注释)与关键字有关的记录</span><span class="hljs-comment"># graph -###  记录图形化显示 ！！！    </span><span class="hljs-comment"># all -###  将所有记录都详细的显示出来</span><span class="hljs-comment"># author &quot;username&quot; -###  查找这个作者提交的记录</span><span class="hljs-comment"># reverse -###  commit 提交记录顺序翻转      </span><span class="hljs-comment"># before -###  查找规定的时间(如:1天/1周)之前的记录   </span><span class="hljs-comment"># num -###  git log -10 显示最近10次提交 ！！！    </span><span class="hljs-comment"># stat -###  显示每次更新的文件修改统计信息，会列出具体文件列表 ！！！</span><span class="hljs-comment"># abbrev-commit -###  仅显示 SHA-1 的前几个字符，而非所有的 40 个字符 ！！！</span><span class="hljs-comment"># pretty=format:&quot;xxx&quot; -###   可以定制要显示的记录格式 ！！！</span><span class="hljs-comment"># p -###  显示每次提交所引入的差异（按 补丁 的格式输出）！！！</span></code></pre><h3 id="Checkout"><a href="#Checkout" class="headerlink" title="Checkout"></a>Checkout</h3><pre><code class="hljs bash"><span class="hljs-comment"># 恢复暂存区的指定文件到工作区</span>$ git checkout &lt;filename&gt;<span class="hljs-comment"># 恢复暂存区的所有文件到工作区</span>$ git checkout .<span class="hljs-comment"># 回滚到最近的一次提交</span><span class="hljs-comment"># 如果修改某些文件后，没有提交到暂存区，此时的回滚是回滚到上一次提交</span><span class="hljs-comment"># 如果是已经将修改的文件提交到仓库了，这时再用这个命令回滚无效</span><span class="hljs-comment"># 因为回滚到的是之前自己修改后提交的版本</span>$ git checkout HEAD $ git checkout HEAD -- filename<span class="hljs-comment"># 回滚到最近一次提交的上一个版本</span>$ git checkout HEAD^ <span class="hljs-comment"># 回滚到最近一次提交的上2个版本</span>$ git checkout HEAD^^ <span class="hljs-comment"># 切换分支，在这里也可以看做是回到项目「当前」状态的方式</span>$ git checkout &lt;当前你正在使用的分支&gt;<span class="hljs-comment"># 切换到某个指定的 commit 版本</span>$ git checkout &lt;commit_id&gt;<span class="hljs-comment"># 切换指定 tag </span>$ git checkout &lt;tag&gt;</code></pre><h3 id="Reset"><a href="#Reset" class="headerlink" title="Reset"></a>Reset</h3><pre><code class="hljs bash"><span class="hljs-comment"># 从暂存区撤销特定文件，但不改变工作区。它会取消这个文件的暂存，而不覆盖任何更改</span>$ git reset &lt;fileName&gt;<span class="hljs-comment"># 重置暂存区最近的一次提交，但工作区的文件不变</span>$ git reset <span class="hljs-comment"># 等价于 </span>$ git reset HEAD （默认）<span class="hljs-comment"># 重置暂存区与工作区，回退到最近一次提交的版本内容</span>$ git reset --hard <span class="hljs-comment"># 重置暂存区与工作区，回退到最近一次提交的上一个版本</span>$ git reset --hard HEAD^ <span class="hljs-comment"># 将当前分支的指针指向为指定 commit（该提交之后的提交都会被移除），同时重置暂存区，但工作区不变</span>$ git reset &lt;commit&gt;<span class="hljs-comment"># 等价于 </span>$ git reset --mixed  &lt;commit&gt;<span class="hljs-comment"># 将当前分支的指针指向为指定 commit（该提交之后的提交都会被移除），但保持暂存区和工作区不变</span>$ git reset --soft  &lt;commit&gt;<span class="hljs-comment"># 将当前分支的指针指向为指定 commit（该提交之后的提交都会被移除），同时重置暂存区、工作区</span>$ git reset --hard  &lt;commit&gt;</code></pre><h3 id="Revert"><a href="#Revert" class="headerlink" title="Revert"></a>Revert</h3><pre><code class="hljs bash"><span class="hljs-comment"># 生成一个撤销最近的一次提交的新提交</span>$ git revert HEAD <span class="hljs-comment"># 生成一个撤销最近一次提交的上一次提交的新提交</span>$ git revert HEAD^ <span class="hljs-comment"># 生成一个撤销最近一次提交的上两次提交的新提交</span>$ git revert HEAD^^ <span class="hljs-comment"># 生成一个撤销最近一次提交的上n次提交的新提交</span>$ git revert HEAD~num <span class="hljs-comment"># 生成一个撤销指定提交版本的新提交</span>$ git revert &lt;commit_id&gt;<span class="hljs-comment"># 生成一个撤销指定提交版本的新提交，执行时不打开默认编辑器，直接使用 Git 自动生成的提交信息</span>$ git revert &lt;commit_id<span class="hljs-comment">###  --no-edit</span></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello Markdown</title>
    <link href="/2019/10/19/Hello%20Markdown/"/>
    <url>/2019/10/19/Hello%20Markdown/</url>
    
    <content type="html"><![CDATA[<p>本文用于记录Markdown常用语法。</p><a id="more"></a><p><strong>Markdown</strong> is created by <a href="http://daringfireball.net/">Daring Fireball</a>; the original guideline is <a href="http://daringfireball.net/projects/markdown/syntax">here</a>. Its syntax, however, varies between different parsers or editors. <strong>Typora</strong> is using [GitHub Flavored Markdown][GFM].</p><p>每个符号后加一个空格才能正确渲染，推荐在进行写作时切换到源代码模式。</p><p>[toc]</p><h2 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h2><h3 id="段落（-ctrl-0）"><a href="#段落（-ctrl-0）" class="headerlink" title="段落（ ctrl+ 0）"></a>段落（ <code>ctrl</code>+ <code>0</code>）</h3><p>在Typora中通过回车 <code>Return</code>来创建新的段落。</p><p> <code>Shift</code> + <code>Return</code> 可用于创建单个换行符。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><pre><code class="hljs markdown"><span class="hljs-section"># 一级标题（ `ctrl`+ `1`）</span><span class="hljs-section">## 二级标题（ `ctrl`+ `2`）</span><span class="hljs-section">### 三级标题（ `ctrl`+ `3`）</span><span class="hljs-section">#### 四级标题（ `ctrl`+ `4`）</span><span class="hljs-section">##### 五级标题（ `ctrl`+ `5`）</span><span class="hljs-section">###### 六级标题（ `ctrl`+ `6`）</span></code></pre><h3 id="块引用（-ctrl-Shift-Q）"><a href="#块引用（-ctrl-Shift-Q）" class="headerlink" title="块引用（ ctrl+ Shift+ Q）"></a>块引用（ <code>ctrl</code>+ <code>Shift</code>+ <code>Q</code>）</h3><pre><code class="hljs markdown"><span class="hljs-quote">&gt; 这是一个文字块</span>&gt;<span class="hljs-quote">&gt; 这是第二个文字块</span>&gt;&gt;## 这是添加在二级标题上的文字块&gt;&gt; 这是二级引用</code></pre><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><pre><code class="hljs markdown"><span class="hljs-section"># 无序列表</span><span class="hljs-bullet">*</span> red<span class="hljs-bullet">*</span> blue<span class="hljs-bullet">*</span> green<span class="hljs-section"># 有序列表</span><span class="hljs-bullet">1.</span> red<span class="hljs-bullet">2.</span> blue<span class="hljs-bullet">3.</span> green</code></pre><h3 id="代码块（-ctrl-Shift-K）"><a href="#代码块（-ctrl-Shift-K）" class="headerlink" title="代码块（ ctrl+ Shift+ K）"></a>代码块（ <code>ctrl</code>+ <code>Shift</code>+ <code>K</code>）</h3><pre><code class="hljs markdown"><span class="hljs-section"># 普通代码块</span>​<span class="hljs-code">```</span><span class="hljs-code">Hello World!</span><span class="hljs-code">​```</span><span class="hljs-section"># 根据语言高亮代码块</span>​<span class="hljs-code">```ruby</span><span class="hljs-code">require &#x27;redcarpet&#x27;</span><span class="hljs-code">markdown = Redcarpet.new(&quot;Hello World!&quot;)</span><span class="hljs-code">puts markdown.to_html</span></code></pre><pre><code class="hljs gams">### 公式（ `ctrl`+ `Shift`+ `M`）<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>\<span class="hljs-built_in">frac</span>&#123;\partial p&#125;&#123;\partial x&#125;=<span class="hljs-number">0</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>​```markdown<span class="hljs-symbol">$</span><span class="hljs-symbol">$</span>\<span class="hljs-built_in">frac</span>&#123;\partial p&#125;&#123;\partial x&#125;=<span class="hljs-number">0</span><span class="hljs-symbol">$</span><span class="hljs-symbol">$</span></code></pre><p>You can find more details <a href="https://support.typora.io/Math/">here</a>.</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><ol><li><h4 id="极简方式"><a href="#极简方式" class="headerlink" title="极简方式"></a>极简方式</h4><pre><code class="hljs markdown">name | 价格 |  数量  -|-|-香蕉 | $1 | 5 |苹果 | $1 | 6 |草莓 | $1 | 7 |</code></pre><p>| name | 价格 | 数量 |<br>| —— | —— | —— |<br>| 香蕉 | $1   | 5    |<br>| 苹果 | $1   | 6    |<br>| 草莓 | $1   | 7    |</p></li><li><h4 id="简单方法"><a href="#简单方法" class="headerlink" title="简单方法"></a>简单方法</h4><pre><code class="hljs markdown">name | 111 | 222 | 333 | 444<span class="hljs-bullet">-</span> | :-: | :-: | :-: | -:aaa | bbb | ccc | ddd | eee| fff | ggg| hhh | iii | 000|</code></pre><p>| name | 111  | 222  | 333  |  444 |<br>| —— | :—: | :—: | :—: | —-: |<br>| aaa  | bbb  | ccc  | ddd  |  eee |<br>| fff  | ggg  | hhh  | iii  |  000 |</p></li><li><p>原生方法</p><pre><code class="hljs markdown">name | 111 | 222 | 333 | 444:-: | :-: | :-: | :-: | :-:aaa | bbb | ccc | ddd | eee| fff | ggg| hhh | iii | 000|</code></pre><p>| name | 111  | 222  | 333  | 444  |<br>| :—: | :—: | :—: | :—: | :—: |<br>| aaa  | bbb  | ccc  | ddd  | eee  |<br>| fff  | ggg  | hhh  | iii  | 000  |</p></li></ol><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><pre><code class="hljs markdown">You can create footnotes like this[^1].[<span class="hljs-symbol">^1</span>]: <span class="hljs-link">Here is the *text* of the **footnote**.</span></code></pre><h3 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h3><pre><code class="hljs markdown"><span class="hljs-bullet">-</span> [x] 已完成<span class="hljs-bullet">-</span> [ ] 待完成</code></pre><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p> <code>***</code> 或者<code>---</code>都可以插入一条分割线。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>输入<code>[toc]</code>用于创建目录。</p><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p>通过如下代码可以便捷的绘制流程图：</p><pre><code class="hljs markdown">st=&gt;start: Startop=&gt;operation: Your Operationcond=&gt;condition: Yes or No?e=&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op</code></pre><pre><code class="hljs flow">st&#x3D;&gt;start: Startop&#x3D;&gt;operation: Your Operationcond&#x3D;&gt;condition: Yes or No?e&#x3D;&gt;endst-&gt;op-&gt;condcond(yes)-&gt;econd(no)-&gt;op</code></pre><h2 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><pre><code class="hljs markdown"><span class="hljs-section"># 原生方法</span>This is [<span class="hljs-string">an example</span>](<span class="hljs-link">http://example.com/ &quot;Title&quot;</span>) inline link.[<span class="hljs-string">This link</span>](<span class="hljs-link">http://example.net/</span>) has no title attribute.<span class="hljs-section"># HTML</span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span>This is <span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://example.com/&quot;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&quot;Title&quot;</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;http://example.net/&quot;</span>&gt;</span></span>This link<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></span> has no&#x27;按住ctrl可以在浏览器中访问链接&#x27;<span class="hljs-section"># 插入URLs</span>例如插入邮箱<span class="xml">&lt;veenzhou@gmail.com&gt;</span>有的网址也能直接识别，例如www.google.com</code></pre><h3 id="引用链接"><a href="#引用链接" class="headerlink" title="引用链接"></a>引用链接</h3><pre><code class="hljs markdown">This is [<span class="hljs-string">an example</span>][<span class="hljs-symbol">id</span>] reference-style link.Then, anywhere in the document, you define your link label on a line by itself like this:[<span class="hljs-symbol">id</span>]: <span class="hljs-link">http://example.com/  &quot;Optional Title Here&quot;</span></code></pre><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><pre><code class="hljs markdown">![<span class="hljs-string">这个文字我也不知道是干啥的</span>](<span class="hljs-link">/path/to/img.jpg</span>)</code></pre><h3 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h3><pre><code class="hljs markdown"><span class="hljs-emphasis">*此文本为斜体。*</span><span class="hljs-emphasis">_此文本也是。_</span><span class="hljs-strong">**此文本为粗体。**</span><span class="hljs-strong">__此文本也是__</span><span class="hljs-strong">**<span class="hljs-emphasis">*此文本是斜体加粗体。<span class="hljs-strong">**<span class="hljs-emphasis">*</span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong">**<span class="hljs-emphasis">_或者这样。_</span>**</span></span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis">*</span>_<span class="hljs-emphasis">_这个也是！<span class="hljs-strong">__<span class="hljs-emphasis">*</span></span></span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"></span></span></span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis">~~此文本为删除线效果。~~</span></span></span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"></span></span></span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis">行内代码Use the `printf()` function.</span></span></span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"></span></span></span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">u</span>&gt;</span></span>下划线<span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">u</span>&gt;</span></span></span></span></span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"></span></span></span></span></span></span><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis"><span class="hljs-strong"><span class="hljs-emphasis">表情符号:smile:</span></span></span></span></span></span></code></pre><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>HTML基本语法都支持，之后有时间再出教程吧。</p><p>You can use HTML to style content what pure Markdown does not support. For example, use <code>&lt;span style=&quot;color:red&quot;&gt;this text is red&lt;/span&gt;</code> to add text with red color.</p><h3 id="Embed-Contents"><a href="#Embed-Contents" class="headerlink" title="Embed Contents"></a>Embed Contents</h3><p>Some websites provide iframe-based embed code which you can also paste into Typora. For example:</p><iframe height='265' scrolling='no' title='Fancy Animated SVG Menu' src='http://codepen.io/jeangontijo/embed/OxVywj/?height=265&theme-id=0&default-tab=css,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'></iframe><pre><code class="hljs Markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">iframe</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&#x27;265&#x27;</span> <span class="hljs-attr">scrolling</span>=<span class="hljs-string">&#x27;no&#x27;</span> <span class="hljs-attr">title</span>=<span class="hljs-string">&#x27;Fancy Animated SVG Menu&#x27;</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&#x27;http://codepen.io/jeangontijo/embed/OxVywj/?height=265&amp;theme-id=0&amp;default-tab=css,result&amp;embed-version=2&#x27;</span> <span class="hljs-attr">frameborder</span>=<span class="hljs-string">&#x27;no&#x27;</span> <span class="hljs-attr">allowtransparency</span>=<span class="hljs-string">&#x27;true&#x27;</span> <span class="hljs-attr">allowfullscreen</span>=<span class="hljs-string">&#x27;true&#x27;</span> <span class="hljs-attr">style</span>=<span class="hljs-string">&#x27;width: 100%;&#x27;</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">iframe</span>&gt;</span></span></code></pre><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>You can use the <code>&lt;video&gt;</code> HTML tag to embed videos. For example:</p><pre><code class="hljs Markdown"><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">video</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;xxx.mp4&quot;</span> /&gt;</span></span></code></pre><h3 id="Other-HTML-Support"><a href="#Other-HTML-Support" class="headerlink" title="Other HTML Support"></a>Other HTML Support</h3><p>You can find more details <a href="https://support.typora.io/HTML/">here</a>.</p>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C Summary</title>
    <link href="/2019/10/18/C-Summary/"/>
    <url>/2019/10/18/C-Summary/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenFOAM Note</title>
    <link href="/2019/10/18/NOTE/"/>
    <url>/2019/10/18/NOTE/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="elbow"><a href="#elbow" class="headerlink" title="elbow"></a>elbow</h1><blockquote><p>terminal<br><pre><code class="hljs crmsh">fluentMeshToFoam elbow.mshsim //constant\poluMesh mesh locationfoamCleanTutorials cleanDirtouch case.foam</code></pre></p><p>boundary condition<br>type            empty; 2D</p></blockquote><p>type            noSlip;</p><p>type            fixedValue;</p><p>value           uniform 0;</p><blockquote><p>flies<br>flie 0 boundary</p></blockquote><p>flie constant<br>transportProperties nu<br>turbulenceProperties method RAS LES laminar</p><p>flie system </p><blockquote><p>units</p><p>[kg,m,s,k…]</p><p>solve<br>steady: deltaT          1;<br>writeFormat     binary\ascii;</p></blockquote><h1 id="TShspe-TEST"><a href="#TShspe-TEST" class="headerlink" title="TShspe_TEST"></a>TShspe_TEST</h1><blockquote><p>constant    /boundary    /nu    /laminar<br>0    /p    /U</p></blockquote><pre><code class="hljs irpf90">blockMesh<span class="hljs-keyword">touch</span> <span class="hljs-keyword">case</span><span class="hljs-number">.</span>foamsimpleFoam</code></pre><h1 id="arota-transient"><a href="#arota-transient" class="headerlink" title="arota_transient"></a>arota_transient</h1><pre><code class="hljs css"><span class="hljs-selector-tag">fluent3DMeshToFoam</span> <span class="hljs-selector-tag">fluent</span><span class="hljs-selector-class">.msh</span></code></pre><blockquote><p>/p<br>type            codedFixedValue;<br>changable pressure with time on boundary</p></blockquote><p>“OUTLET.*”=OUTLET1 OUTLET2 OUTLET3…</p><blockquote><p>/controlDict<br>important: deltaT<br>writeFormat     binary;</p></blockquote><pre><code class="hljs awk">pimpleFoamfoamListTimes -rm  <span class="hljs-regexp">//</span><span class="hljs-keyword">delete</span> previous solution data</code></pre><p>postProcessing residuals data</p><p>foamMonitor -l postProcessing/residuals/0/residuals.dat</p><h1 id="sylinder-TEST"><a href="#sylinder-TEST" class="headerlink" title="_sylinder_TEST"></a>_sylinder_TEST</h1><pre><code class="hljs apache"><span class="hljs-attribute">inGroups</span>        List&lt;word&gt; <span class="hljs-number">1</span>(mywall);<span class="hljs-attribute">empty</span> cyclic cyclicAMI wedge symmetry &gt; #includeEtc <span class="hljs-string">&quot;caseDicts/setConstraintTypes&quot;</span><span class="hljs-attribute">internalField</span>   uniform (<span class="hljs-number">1</span> <span class="hljs-number">0</span> <span class="hljs-number">0</span>);<span class="hljs-attribute">pimpleFoam</span> &amp;&gt; log<span class="hljs-attribute">nOuterCorrectors</span>    <span class="hljs-number">15</span>&gt;&gt;<span class="hljs-number">1</span>; pimple to piso<span class="hljs-attribute">foamMonitor</span> yrange <span class="hljs-string">&quot;[0 1]&quot;</span></code></pre><h1 id="TaylorCouettte-steadyState"><a href="#TaylorCouettte-steadyState" class="headerlink" title="_TaylorCouettte_steadyState"></a>_TaylorCouettte_steadyState</h1><pre><code class="hljs elm"><span class="hljs-string">&quot;.*&quot;</span>&#123;<span class="hljs-keyword">type</span> zeroGradient;&#125;</code></pre><pre><code class="hljs bash">&gt; foamGet residuals<span class="hljs-built_in">functions</span>&#123;<span class="hljs-comment">#includeFunc residuals</span>&#125;</code></pre><pre><code class="hljs apache"><span class="hljs-attribute">decomposePar</span> <span class="hljs-attribute">mpirun</span> -np <span class="hljs-number">4</span> simpleFoam -parallel</code></pre><h1 id="cyclic-RANS"><a href="#cyclic-RANS" class="headerlink" title="cyclic_RANS"></a>cyclic_RANS</h1><p>👉<br>wall function<br>    type    kqRWallFunction;<br>    value    $internalField;</p><p>./Allrun<br>decomposePar -force<br>mpirun -np 4 simpleFoam -parallel<br>reconstructPar</p><h1 id="dynMesh"><a href="#dynMesh" class="headerlink" title="_dynMesh"></a>_dynMesh</h1><p>dynamicMeshDict   movingwall nessary file</p><p>pointDisplacement</p><h1 id="livingRoom"><a href="#livingRoom" class="headerlink" title="_livingRoom"></a>_livingRoom</h1><p>topoSet<br>        name    window;<br>        type    faceSet;<br>        action  new;<br>        source  boxToFace;<br>        sourceInfo<br>        {<br>            box (0.5 1.0 -0.001)(2.5 2.0 0.001);<br>        }</p><p>p_rgh</p><pre><code>type        zerogradient;    type            fixedFluxPressure;    value           uniform 0;equationOfState perfectGas;</code></pre><p>buoyantSimpleFoam</p><h1 id="BernardCells"><a href="#BernardCells" class="headerlink" title="_BernardCells"></a>_BernardCells</h1><p>buoyantPimpleFoam</p><p>—&gt; FOAM FATAL ERROR:<br>LHS and RHS of - have different dimensions<br>     dimensions : [0 2 -2 0 0 0 0] - [1 -1 -2 0 0 0 0]</p><h1 id="rhiCentralFoam"><a href="#rhiCentralFoam" class="headerlink" title="rhiCentralFoam"></a>rhiCentralFoam</h1><h1 id="rhoSimpleFoam"><a href="#rhoSimpleFoam" class="headerlink" title="rhoSimpleFoam"></a>rhoSimpleFoam</h1><pre><code class="hljs scala">mu          <span class="hljs-number">0</span>;sutherland  mu relacted <span class="hljs-keyword">with</span> <span class="hljs-type">T</span>internalField   uniform $<span class="hljs-type">Uinlet</span>;internalField   uniform $pOut;<span class="hljs-class"><span class="hljs-keyword">type</span>           <span class="hljs-title">fixedMean</span></span>;  <span class="hljs-comment">//face average</span><span class="hljs-class"><span class="hljs-keyword">type</span>       <span class="hljs-title">totalTemperature</span></span>;<span class="hljs-class"><span class="hljs-keyword">type</span> <span class="hljs-title">turbulentIntensityKineticEnergyInlet</span></span>;</code></pre><h1 id="VOF"><a href="#VOF" class="headerlink" title="VOF"></a>VOF</h1><p>type           constantAlphaContactAngle;<br>interFoam</p><pre><code>pRefCell    0;pRefValue           0;</code></pre><h1 id="Mixture"><a href="#Mixture" class="headerlink" title="Mixture"></a>Mixture</h1><p>driftFluxFoam</p><p>relativeVelocityModel simple; //relative Velocity</p><h1 id="find-solvers"><a href="#find-solvers" class="headerlink" title="find solvers"></a>find solvers</h1><p>OpenFOAM/OpenFOAM-7/applications/solvers/xx/xx.c &gt; discriptions</p><p>OKSS2</p><p>laplacianFoam.c<br><pre><code class="hljs gams">Application    laplacianFoamDescription    Solves a simple Laplace <span class="hljs-keyword">equation</span>, e.g. for <span class="hljs-comment">thermal diffusion in a solid.</span>            fvScalarMatrix <span class="hljs-comment">TEqn</span>            (                fvm::ddt(T) <span class="hljs-comment">- fvm::laplacian(DT, T)</span>             ==                fvOptions(T)            );</code></pre></p><p>scalarTransportFoam<br><pre><code class="hljs excel">Application    scalarTransportFoamDescription    Solves the steady <span class="hljs-built_in">or</span> transient transport equation for a passive scalar.            fvScalarMatrix TEqn            (                f<span class="hljs-symbol">vm:</span><span class="hljs-symbol">:dd</span><span class="hljs-built_in">t</span>(<span class="hljs-built_in">T</span>)              + f<span class="hljs-symbol">vm:</span><span class="hljs-symbol">:di</span>v(<span class="hljs-built_in">phi</span>, <span class="hljs-built_in">T</span>)              - f<span class="hljs-symbol">vm:</span><span class="hljs-symbol">:la</span>placian(DT, <span class="hljs-built_in">T</span>)             ==                fvOptions(<span class="hljs-built_in">T</span>)            );</code></pre></p><h1 id="Energe-equation"><a href="#Energe-equation" class="headerlink" title="Energe equation"></a>Energe equation</h1><p>name.c&gt;Make&gt;flies&gt;name.C name</p><p>$ wmake</p><blockquote><p>name.c</p></blockquote><pre><code class="hljs dts">   volScalarField T   &#123;IOobject&#123;    <span class="hljs-string">&quot;T&quot;</span>,           runTime.timeName(),           mesh,<span class="hljs-symbol">           IOobject:</span>:MUST_READ,<span class="hljs-symbol">           IOobject:</span>:AUTO_WRITE&#125;,       mesh   &#125;;   dimensionedScalar DT   &#123;       <span class="hljs-string">&quot;DT&quot;</span>,       dimensionSet(<span class="hljs-number">0</span>,<span class="hljs-number">2</span>,<span class="hljs-number">-1</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>),       <span class="hljs-number">0.0001</span>   &#125;;   fvScalarMatrix TEqn   &#123;<span class="hljs-symbol">       fvm:</span>:ddt(T)     + fvc::div(phi, T)     - fvc::laplacian(DT, T)   &#125;;</code></pre><h1 id="projectionFoam"><a href="#projectionFoam" class="headerlink" title="projectionFoam"></a>projectionFoam</h1><p>projectionFoam.C</p><p>EXE = $(FOAM_USER_APPBIN)/projectionFoam</p><p>phi = fvc::interpolate(U) &amp; mesh.Sf(); volume to surface</p><h1 id="dym"><a href="#dym" class="headerlink" title="dym"></a>dym</h1><pre><code class="hljs dts">&gt;pisoDyMFoam.C<span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-string">&quot;dynamicFvMesh.H&quot;</span></span><span class="hljs-meta">#<span class="hljs-meta-keyword">include</span> <span class="hljs-string">&quot;createDynamicFvMesh.H&quot;</span></span>mesh.update();&gt;UEqnphi = phi - mesh.phi();&gt;options-ldynamicFvMesh \-ltopoChangerFvMesh \-I$(LIB_SRC)/dynamicFvMesh/lnInclude \</code></pre><p>missing operator &gt;options environment variables</p><h1 id="EMMS"><a href="#EMMS" class="headerlink" title="EMMS"></a>EMMS</h1><h1 id="BASUOQU"><a href="#BASUOQU" class="headerlink" title="BASUOQU"></a>BASUOQU</h1><p>pimpleFoam -listScalarBCs -listVectorBCs \list boundary type</p>]]></content>
    
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Download</title>
    <link href="/2019/10/18/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%99%A8/"/>
    <url>/2019/10/18/%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E5%99%A8/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><p>油猴网盘万能助手+XDown</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CFD Theory</title>
    <link href="/2019/10/18/CFD-Theory/"/>
    <url>/2019/10/18/CFD-Theory/</url>
    
    <content type="html"><![CDATA[<p>Basic CFD Theory</p><a id="more"></a><h3 id="CFD-Equations"><a href="#CFD-Equations" class="headerlink" title="CFD-Equations"></a>CFD-Equations</h3><h4 id="Navier-Stokes-N-S-Equation"><a href="#Navier-Stokes-N-S-Equation" class="headerlink" title="Navier-Stokes (N-S) Equation"></a>Navier-Stokes (N-S) Equation</h4><script type="math/tex; mode=display">\begin{align}& \frac{\partial u_{i}}{\partial t}+ u_{j}\frac{\partial u_{i}}{\partial x_{j}}=-\frac{1}{\rho}\frac{\partial p}{\partial x_{i}}+\nu \frac{\partial^2 u_{i}}{\partial x_{j}\partial x_{j}}+g_{i}\tag{1.1}\\& \frac{\partial u_{i}}{\partial x_{i}}=0\tag{1.2}\end{align}</script><script type="math/tex; mode=display">\begin{align}& \frac{\partial u_{i}}{\partial t}+ u_{j}\frac{\partial u_{i}}{\partial x_{j}}=-\frac{1}{\rho}\frac{\partial p}{\partial x_{i}}+\nu \frac{\partial^2 u_{i}}{\partial x_{j}\partial x_{j}}+g_{i}\\& \frac{\partial u_{i}}{\partial x_{i}}=0\end{align}</script><p>where  $u_i$ represents the air velocity, p is the pressure, $g_i$ is the gravitational acceleration.</p><h4 id="Energy-Equation"><a href="#Energy-Equation" class="headerlink" title="Energy Equation"></a>Energy Equation</h4><script type="math/tex; mode=display">\begin{aligned}&\rho \frac{\partial\left(c_{p} T\right)}{\partial t}+\rho \frac{\partial\left(c_{p} u_{j} T\right)}{\partial x_{j}}=\frac{\partial}{\partial x_{j}}\left[k \frac{\partial T}{\partial x_{j}}\right]+\Phi+S_{T}\\&\Phi = \mu\left(\frac{\partial u_{i}}{\partial x_{j}}+\frac{\partial u_{j}}{\partial x_{i}}\right) \frac{\partial u_{i}}{\partial x_{j}}\end{aligned}</script><h4 id="DEM"><a href="#DEM" class="headerlink" title="DEM"></a>DEM</h4><script type="math/tex; mode=display">\begin{aligned}& m_{p} \frac{d u_{i}^{p}}{d t}=\sum F_{i}+\left(m_{p}-m_{f}\right) g_{i}\\& F_{i}^{D}=\frac{\pi}{8} \rho_{f} d_{p}^{2} C_{D}\left(u_{i}^{f}-u_{i}^{p}\right)\left|u_{i}^{f}-u_{i}^{p}\right|\\& C_{D}=\frac{24}{\operatorname{Re}_{p}}+3.6 \operatorname{Re}_{p}^{-0.313}\end{aligned}</script><script type="math/tex; mode=display">C_{D}=\left\{\begin{array}{c}\frac{24\left(1+0.15 R e^{0.687}\right)}{\operatorname{Re}} \text {Re} \leq 1000 \\0.44 \mathrm{Re}>1000\end{array}\right.</script><script type="math/tex; mode=display">\begin{aligned}C_{\mathrm{D}}=\left\{\begin{array}{cc}\frac{24}{\operatorname{Re}_{\mathrm{p}}} & \text { if } \operatorname{Re}_{\mathrm{p}} \leq 10^{3} \\\frac{24}{\mathrm{Re}_{\mathrm{p}}}\left(1+0.15 \mathrm{Re}_{\mathrm{p}}^{0.678}\right) & \text { if } \quad \operatorname{Re}_{\mathrm{p}}>10^{3}\end{array}\right.\end{aligned}</script><script type="math/tex; mode=display">m_{p} \frac{d u_{i}^{p}}{d t}=\sum F_{i}+\left(m_{p}-m_{f}\right) g_{i}\\</script><script type="math/tex; mode=display">F_{p} = \frac{C_D Re_{p}}{24}\\</script><script type="math/tex; mode=display">C_D = \left\{ \begin{array}{**lr**}  \frac{24(1+0.15Re_{p}^{0.687})}{Re_{p}} \qquad &Re_{p}\leq 10^{3} \\0.44Re_{p}\qquad &Re_{p}<10^{3}\end{array}\right.</script><script type="math/tex; mode=display">Re_{p}=\frac{\rho\left|\vec{u}-\vec{u}_{p}\right| d_{p}}{\mu_{p}}</script>]]></content>
    
    
    <categories>
      
      <category>CFD</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Study C++</title>
    <link href="/2019/10/18/Study-C/"/>
    <url>/2019/10/18/Study-C/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Study HTML</title>
    <link href="/2019/10/18/Study-HTML/"/>
    <url>/2019/10/18/Study-HTML/</url>
    
    <content type="html"><![CDATA[<a id="more"></a><h2 id="常规用法"><a href="#常规用法" class="headerlink" title="常规用法"></a>常规用法</h2><pre><code class="hljs html"><span class="hljs-comment">&lt;!--注释--&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">align</span>=<span class="hljs-string">&quot;right&quot;</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">font</span> <span class="hljs-attr">face</span>=<span class="hljs-string">&quot;华文新魏&quot;</span> <span class="hljs-attr">size</span>=<span class="hljs-string">&quot;6&quot;</span>&gt;</span>        定义对齐、字体、字号<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">font</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>这是普通文本 - <span class="hljs-tag">&lt;<span class="hljs-name">b</span>&gt;</span>这是粗体文本<span class="hljs-tag">&lt;/<span class="hljs-name">b</span>&gt;</span>。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span></code></pre><h3 id="Style用法"><a href="#Style用法" class="headerlink" title="Style用法"></a>Style用法</h3><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">style</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/css&quot;</span>&gt;</span><span class="css"><span class="hljs-selector-tag">h1</span> &#123;<span class="hljs-attribute">color</span>:red&#125;</span><span class="css"><span class="hljs-selector-tag">p</span> &#123;<span class="hljs-attribute">color</span>:blue&#125;</span><span class="hljs-tag">&lt;/<span class="hljs-name">style</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">h1</span>&gt;</span>Header 1<span class="hljs-tag">&lt;/<span class="hljs-name">h1</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>A paragraph.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text/javascript&quot;</span>&gt;</span><span class="javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">setFont</span>(<span class="hljs-params"></span>)</span></span>&#123;<span class="javascript"><span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;p1&quot;</span>).style.font=<span class="hljs-string">&quot;italic bold 12px arial,serif&quot;</span>;</span>&#125;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;p1&quot;</span>&gt;</span>This is an example paragraph.<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;button&quot;</span> <span class="hljs-attr">onclick</span>=<span class="hljs-string">&quot;setFont()&quot;</span> <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;Change font&quot;</span> /&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><h2 id="插入超链接"><a href="#插入超链接" class="headerlink" title="插入超链接"></a>插入超链接</h2><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;https://veenxz.github.io/&quot;</span>&gt;</span>Veen&#x27;s Blog<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Study Julia</title>
    <link href="/2019/10/18/Study-Julia/"/>
    <url>/2019/10/18/Study-Julia/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Julia</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My first post</title>
    <link href="/2019/10/16/My%20first%20post/"/>
    <url>/2019/10/16/My%20first%20post/</url>
    
    <content type="html"><![CDATA[<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>本博客使用Github与Hexo搭建，使用<a href="https://github.com/fluid-dev/hexo-theme-fluid">hexo-theme-fluid</a>。</p><p>支持valine评论。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Others</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
