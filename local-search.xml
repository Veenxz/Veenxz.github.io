<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>OpenCV Usage</title>
    <link href="/yuque/OpenCV%20Usage/"/>
    <url>/yuque/OpenCV%20Usage/</url>
    
    <content type="html"><![CDATA[<blockquote><p>This is OpenCV basic usage.</p></blockquote><span id="more"></span><p>OpenCV 是一款由 Intel 公司俄罗斯团队发起并参与和维护的一个计算机视觉处理开源软件库，支持与计算机视觉和机器学习相关的众多算法。</p><h2 id="1-opencv-包安装"><a href="#1-opencv-包安装" class="headerlink" title="1. opencv 包安装"></a>1. opencv 包安装</h2><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">pip install opencv<span class="token operator">-</span>contrib<span class="token operator">-</span>python <span class="token operator">-</span>i https<span class="token punctuation">:</span><span class="token operator">//</span>mirrors<span class="token punctuation">.</span>aliyun<span class="token punctuation">.</span>com<span class="token operator">/</span>pypi<span class="token operator">/</span>simple<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>官方文档：<a href="https://opencv-python-tutroals.readthedocs.io/en/latest/">https://opencv-python-tutroals.readthedocs.io/en/latest/</a></p><h2 id="2-opencv-简单图像处理"><a href="#2-opencv-简单图像处理" class="headerlink" title="2. opencv 简单图像处理"></a>2. opencv 简单图像处理</h2><h3 id="2-1-图像像素存储形式"><a href="#2-1-图像像素存储形式" class="headerlink" title="2.1 图像像素存储形式"></a>2.1 图像像素存储形式</h3><p>首先得了解下图像在计算机中存储形式：(为了方便画图，每列像素值都写一样了)<br>对于只有黑白颜色的灰度图，为单通道，一个像素块对应矩阵中一个数字，数值为 0 到 255, 其中 0 表示最暗（黑色） ，255 表示最亮（白色）<br>　　　　<img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178301-44b6fa1f-7b79-4f51-9770-fe146abf4862.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_24%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=247&amp;id=y2Se2&amp;originHeight=247&amp;originWidth=825&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=825" alt=""></p><p>对于采用 RGB 模式的彩色图片，为三通道图，Red、Green、Blue 三原色，按不同比例相加，一个像素块对应矩阵中的一个向量, 如[24,180, 50]，分别表示三种颜色的比列, 即对应深度上的数字，如下图所示：<br>　　　　<img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178266-cc0553c7-f38d-48d0-a309-ada3e780d0b3.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_32%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=340&amp;id=DKoRJ&amp;originHeight=340&amp;originWidth=1132&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=1132" alt=""><br><strong>注意：</strong>由于历史遗留问题，opencv 采用 BGR 模式，而不是 RGB</p><h3 id="2-2-图像读取和写入"><a href="#2-2-图像读取和写入" class="headerlink" title="2.2 图像读取和写入"></a>2.2 图像读取和写入</h3><p><strong>cv.imread()</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>img_path<span class="token punctuation">,</span> flag<span class="token punctuation">)</span> 读取图片，返回图片对象    img_path<span class="token punctuation">:</span> 图片的路径，即使路径错误也不会报错，但打印返回的图片对象为<span class="token boolean">None</span>    flag：cv<span class="token punctuation">.</span>IMREAD_COLOR，读取彩色图片，图片透明性会被忽略，为默认参数，也可以传入<span class="token number">1</span>          cv<span class="token punctuation">.</span>IMREAD_GRAYSCALE<span class="token punctuation">,</span>按灰度模式读取图像，也可以传入<span class="token number">0</span>          cv<span class="token punctuation">.</span>IMREAD_UNCHANGED<span class="token punctuation">,</span>读取图像，包括其alpha通道，也可以传入<span class="token operator">-</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>cv.imshow()</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>window_name<span class="token punctuation">,</span> img<span class="token punctuation">)</span>：显示图片，窗口自适应图片大小    window_name<span class="token punctuation">:</span> 指定窗口的名字    img：显示的图片对象    可以指定多个窗口名称，显示多个图片cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span>millseconds<span class="token punctuation">)</span>  键盘绑定事件，阻塞监听键盘按键，返回一个数字（不同按键对应的数字不同）    millseconds<span class="token punctuation">:</span> 传入时间毫秒数，在该时间内等待键盘事件；传入<span class="token number">0</span>时，会一直等待键盘事件cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span>window_name<span class="token punctuation">)</span>    window_name<span class="token punctuation">:</span> 需要销毁的窗口名字，不传入时关闭所有窗口<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>cv.imwrite()</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span>img_path_name<span class="token punctuation">,</span> img<span class="token punctuation">)</span>    img_path_name<span class="token punctuation">:</span>保存的文件名    img：文件对象<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>cv.cvtColor()</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span><span class="token punctuation">)</span>    参数：        img<span class="token punctuation">:</span> 图像对象        code：            cv<span class="token punctuation">.</span>COLOR_RGB2GRAY<span class="token punctuation">:</span> RGB转换到灰度模式            cv<span class="token punctuation">.</span>COLOR_RGB2HSV： RGB转换到HSV模式（hue<span class="token punctuation">,</span>saturation<span class="token punctuation">,</span>Value）cv<span class="token punctuation">.</span>inRange<span class="token punctuation">(</span><span class="token punctuation">)</span>    参数：        img<span class="token punctuation">:</span> 图像对象<span class="token operator">/</span>array        lowerb<span class="token punctuation">:</span> 低边界array，  如lower_blue <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        upperb：高边界array， 如 upper_blue <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">130</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    mask <span class="token operator">=</span> cv<span class="token punctuation">.</span>inRange<span class="token punctuation">(</span>hsv<span class="token punctuation">,</span> lower_green<span class="token punctuation">,</span> upper_green<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>使用示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> avimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">r"./image/kids.jpg"</span><span class="token punctuation">)</span><span class="token comment"># print(img.shape)</span><span class="token comment"># 将图片灰度处理</span>img_gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>ret<span class="token punctuation">,</span> img_threshold <span class="token operator">=</span> cv<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img_gray<span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"thre"</span><span class="token punctuation">,</span> img_threshold<span class="token punctuation">)</span>key <span class="token operator">=</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">r"./image/kids1.jpg"</span><span class="token punctuation">,</span> img_threshold<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617367177142-b5027fa2-49d6-47c6-aa07-d82ac4a24636.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_29%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=405&amp;id=t2Z9f&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=405&amp;originWidth=1008&amp;originalType=binary∶=1&amp;size=564733&amp;status=done&amp;style=none&amp;width=1008" alt="image.png"></p><h3 id="2-3-绘制图形和文字"><a href="#2-3-绘制图形和文字" class="headerlink" title="2.3 绘制图形和文字"></a>2.3 绘制图形和文字</h3><p><strong>绘制图形</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 绘制直线</span>cv<span class="token punctuation">.</span>line<span class="token punctuation">(</span>img<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> color<span class="token punctuation">,</span> thickness<span class="token punctuation">)</span>    img<span class="token punctuation">:</span>要绘制直线的图像    Start<span class="token punctuation">,</span>end<span class="token punctuation">:</span> 直线的起点和终点    color<span class="token punctuation">:</span> 线条的颜色    Thickness<span class="token punctuation">:</span> 线条宽度<span class="token comment"># 绘制圆形</span>cv<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> centerpoint<span class="token punctuation">,</span> r<span class="token punctuation">,</span> color<span class="token punctuation">,</span> thickness<span class="token punctuation">)</span>    mg<span class="token punctuation">:</span>要绘制圆形的图像    Centerpoint<span class="token punctuation">,</span> r<span class="token punctuation">:</span> 圆心和半径    color<span class="token punctuation">:</span> 线条的颜色    Thickness<span class="token punctuation">:</span> 线条宽度，为<span class="token operator">-</span><span class="token number">1</span>时生成闭合图案并填充颜色<span class="token comment"># 绘制矩形</span>cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span>leftupper<span class="token punctuation">,</span>rightdown<span class="token punctuation">,</span>color<span class="token punctuation">,</span>thickness<span class="token punctuation">)</span>    img<span class="token punctuation">:</span>要绘制矩形的图像    Leftupper<span class="token punctuation">,</span> rightdown<span class="token punctuation">:</span> 矩形的左上角和右下角坐标    color<span class="token punctuation">:</span> 线条的颜色    Thickness<span class="token punctuation">:</span> 线条宽度<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>向图像中添加文字</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 向图像中添加文字</span>cv<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> text<span class="token punctuation">,</span> station<span class="token punctuation">,</span> font<span class="token punctuation">,</span> fontsize<span class="token punctuation">,</span> color<span class="token punctuation">,</span> thickness<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>LINE_AA<span class="token punctuation">)</span>    img<span class="token punctuation">:</span> 图像    text：要写入的文本数据    station：文本的放置位置    font：字体    Fontsize <span class="token punctuation">:</span>字体大小<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>使用示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 创建一个空白的图像</span>img <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">512</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span><span class="token comment"># 2 绘制图形</span>cv<span class="token punctuation">.</span>line<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">511</span><span class="token punctuation">,</span> <span class="token number">511</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">384</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">510</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">447</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>font <span class="token operator">=</span> cv<span class="token punctuation">.</span>FONT_HERSHEY_SIMPLEXcv<span class="token punctuation">.</span>putText<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token string">'OpenCV'</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">,</span> font<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>LINE_AA<span class="token punctuation">)</span><span class="token comment"># 3 图像展示</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'匹配结果'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617372204685-7b6fe0d2-2fb1-4ddf-b66f-650223f72d5d.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_12%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=429&amp;id=mdUyn&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=429&amp;originWidth=424&amp;originalType=binary∶=1&amp;size=21195&amp;status=done&amp;style=none&amp;width=424" alt="image.png"></p><h3 id="2-4-图像像素获取和裁剪"><a href="#2-4-图像像素获取和裁剪" class="headerlink" title="2.4 图像像素获取和裁剪"></a>2.4 图像像素获取和裁剪</h3><p><strong>获取并修改图像中的像素点</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cvimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/kids.jpg'</span><span class="token punctuation">)</span><span class="token comment"># 获取某个像素点的值</span>px <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>px<span class="token punctuation">)</span><span class="token comment"># 仅获取蓝色通道的强度值</span>blue <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>blue<span class="token punctuation">)</span><span class="token comment"># 修改某个位置的像素值</span>img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">142</span> <span class="token number">187</span> <span class="token number">190</span><span class="token punctuation">]</span><span class="token number">142</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>图片性质</strong><br>图像属性包括行数，列数和通道数，图像数据类型，像素数等。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617372458921-6db9dcd0-1135-4c92-bd7b-1cbb26db64ed.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=163&amp;id=CL2ZZ&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=163&amp;originWidth=787&amp;originalType=binary∶=1&amp;size=50505&amp;status=done&amp;style=none&amp;width=787" alt="image.png"></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cvimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">r"./image/kids.jpg"</span><span class="token punctuation">)</span><span class="token comment"># rows, cols, channels</span>img<span class="token punctuation">.</span>shape   <span class="token comment">#返回(280, 450, 3), 宽280(rows)，长450(cols)，3通道(channels)</span><span class="token comment"># size</span>img<span class="token punctuation">.</span>size    <span class="token comment">#返回378000，所有像素数量，=280*450*3</span><span class="token comment"># type</span>img<span class="token punctuation">.</span>dtype   <span class="token comment">#dtype('uint8')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>ROI 截取（Range of Interest）</strong><br>有时需要在 B，G，R 通道图像上单独工作。在这种情况下，需要将 BGR 图像分割为单个通道。或者在其他情况下，可能需要将这些单独的通道合并到 BGR 图像。你可以通过以下方式完成。</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#ROI,Range of instrest</span>roi <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">:</span><span class="token number">400</span><span class="token punctuation">]</span>  <span class="token comment">#截取100行到200行，列为300到400列的整块区域</span>img<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">:</span><span class="token number">150</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">:</span><span class="token number">300</span><span class="token punctuation">]</span> <span class="token operator">=</span> roi   <span class="token comment">#将截取的roi移动到该区域 （50到100行，200到300列）</span>b <span class="token operator">=</span> img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token punctuation">:</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment">#截取整个蓝色通道</span><span class="token comment"># 通道拆分</span>b<span class="token punctuation">,</span> g<span class="token punctuation">,</span> r <span class="token operator">=</span> cv<span class="token punctuation">.</span>split<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment"># 通道合并</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>merge<span class="token punctuation">(</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> g<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-5-添加边界-padding"><a href="#2-5-添加边界-padding" class="headerlink" title="2.5 添加边界(padding)　　"></a>2.5 添加边界(padding)　　</h3><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span><span class="token punctuation">)</span>    参数：        img<span class="token punctuation">:</span>图像对象        top<span class="token punctuation">,</span> bottom<span class="token punctuation">,</span> left<span class="token punctuation">,</span> right<span class="token punctuation">:</span> 上下左右边界宽度，单位为像素值        borderType<span class="token punctuation">:</span>            cv<span class="token punctuation">.</span>BORDER_CONSTANT<span class="token punctuation">,</span> 带颜色的边界，需要传入另外一个颜色值            cv<span class="token punctuation">.</span>BORDER_REFLECT<span class="token punctuation">,</span> 边缘元素的镜像反射做为边界            cv<span class="token punctuation">.</span>BORDER_REFLECT_101<span class="token operator">/</span>cv<span class="token punctuation">.</span>BORDER_DEFAULT            cv<span class="token punctuation">.</span>BORDER_REPLICATE<span class="token punctuation">,</span> 边缘元素的复制做为边界            CV<span class="token punctuation">.</span>BORDER_WRAP        value<span class="token punctuation">:</span> borderType为cv<span class="token punctuation">.</span>BORDER_CONSTANT时，传入的边界颜色值，如<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>使用示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltimg2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">r"./image/dog.jpg"</span><span class="token punctuation">)</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img2<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span>  <span class="token comment"># matplotlib的图像为RGB格式</span>constant <span class="token operator">=</span> cv<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>BORDER_CONSTANT<span class="token punctuation">,</span> value<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 绿色</span>reflect <span class="token operator">=</span> cv<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>BORDER_REFLECT<span class="token punctuation">)</span>reflect01 <span class="token operator">=</span> cv<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>BORDER_REFLECT_101<span class="token punctuation">)</span>replicate <span class="token operator">=</span> cv<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>BORDER_REPLICATE<span class="token punctuation">)</span>wrap <span class="token operator">=</span> cv<span class="token punctuation">.</span>copyMakeBorder<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>BORDER_WRAP<span class="token punctuation">)</span>titles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"constant"</span><span class="token punctuation">,</span> <span class="token string">"reflect"</span><span class="token punctuation">,</span> <span class="token string">"reflect01"</span><span class="token punctuation">,</span> <span class="token string">"replicate"</span><span class="token punctuation">,</span> <span class="token string">"wrap"</span><span class="token punctuation">]</span>images <span class="token operator">=</span> <span class="token punctuation">[</span>constant<span class="token punctuation">,</span> reflect<span class="token punctuation">,</span> reflect01<span class="token punctuation">,</span> replicate<span class="token punctuation">,</span> wrap<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>images<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>titles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178298-913f9e4c-6d5c-43a7-941c-ec6654217258.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_15%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=373&amp;id=zbLbG&amp;originHeight=373&amp;originWidth=515&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=515" alt=""></p><h3 id="2-6-像素算术运算"><a href="#2-6-像素算术运算" class="headerlink" title="2.6 像素算术运算"></a>2.6 像素算术运算</h3><p><strong>cv.add() </strong> 相加的两个图片，应该有相同的大小和通道<br>你可以使用 OpenCV 的 cv.add()函数把两幅图像相加，或者可以简单地通过 numpy 操作添加两个图像，如 res = img1 + img2。两个图像应该具有相同的大小和类型，或者第二个图像可以是标量值。<br><strong>注意：OpenCV 加法和 Numpy 加法之间存在差异。OpenCV 的加法是饱和操作，而 Numpy 添加是模运算。</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">)</span>    参数：        img1<span class="token punctuation">:</span>图片对象<span class="token number">1</span>        img2<span class="token punctuation">:</span>图片对象<span class="token number">2</span>        mask<span class="token punctuation">:</span><span class="token boolean">None</span> （掩膜，一般用灰度图做掩膜，img1和img2相加后，和掩膜与运算，从而达到掩盖部分区域的目的）        dtype<span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span>注意：图像相加时应该用cv<span class="token punctuation">.</span>add<span class="token punctuation">(</span>img1<span class="token punctuation">,</span>img2<span class="token punctuation">)</span>代替img1<span class="token operator">+</span>img2<span class="token operator">>></span><span class="token operator">></span> x <span class="token operator">=</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">250</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> y <span class="token operator">=</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span> cv<span class="token punctuation">.</span>add<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token comment"># 250+10 = 260 => 255  #相加，opencv超过255的截取为255</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">print</span> x<span class="token operator">+</span>y          <span class="token comment"># 250+10 = 260 % 256 = 4  #相加，np超过255的会取模运算 （uint8只能表示0-255，所以取模）</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>使用示例：图一无掩膜，图二有掩膜</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像</span>img1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/view.jpg"</span><span class="token punctuation">)</span>img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/rain.jpg"</span><span class="token punctuation">)</span><span class="token comment"># 2 加法操作</span>img3 <span class="token operator">=</span> cv<span class="token punctuation">.</span>add<span class="token punctuation">(</span>img1<span class="token punctuation">,</span> img2<span class="token punctuation">)</span>  <span class="token comment"># cv中的加法</span>img4 <span class="token operator">=</span> img1 <span class="token operator">+</span> img2  <span class="token comment"># 直接相加</span><span class="token comment"># 3 图像显示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img3<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"cv中的加法"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img4<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"直接相加"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>结果如下所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617372984582-86e680c1-87d3-4230-b2be-68ce9763a4b8.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=357&amp;id=wdsrV&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=357&amp;originWidth=714&amp;originalType=binary∶=1&amp;size=555526&amp;status=done&amp;style=none&amp;width=714" alt="image.png"><br><strong>cv.addWeight(): </strong>两张图片相加，分别给予不同权重，实现图片融合和透明背景等效果<br>这其实也是加法，但是不同的是两幅图像的权重不同，这就会给人一种混合或者透明的感觉。图像混合的计算公式如下：</p><blockquote><p>g(x) = (1−α)f0(x) + αf1(x)</p></blockquote><p>通过修改 α 的值（0 → 1），可以实现非常炫酷的混合。<br>现在我们把两幅图混合在一起。第一幅图的权重是 0.7，第二幅图的权重是 0.3。函数 cv2.addWeighted()可以按下面的公式对图片进行混合操作。</p><blockquote><p>dst = α⋅img1 + β⋅img2 + γ</p></blockquote><p>这里 γ 取为零。</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span><span class="token punctuation">)</span> 两张图片相加，分别给予不同权重，实现图片融合和透明背景等效果    参数：        img1<span class="token punctuation">:</span>图片对象<span class="token number">1</span>        alpha<span class="token punctuation">:</span>img1的权重        img2<span class="token punctuation">:</span>图片对象<span class="token number">2</span>        beta<span class="token punctuation">:</span>img1的权重        gamma：常量值，图像相加后再加上常量值        dtype：返回图像的数据类型，默认为<span class="token operator">-</span><span class="token number">1</span>，和img1一样    <span class="token punctuation">(</span>img1<span class="token operator">*</span>alpha<span class="token operator">+</span>img2<span class="token operator">*</span>beta<span class="token operator">+</span>gamma<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>使用示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像</span>img1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/view.jpg"</span><span class="token punctuation">)</span>img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/rain.jpg"</span><span class="token punctuation">)</span><span class="token comment"># 2 图像混合</span>img3 <span class="token operator">=</span> cv<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>img1<span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">,</span> img2<span class="token punctuation">,</span> <span class="token number">0.3</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 3 图像显示</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img3<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617373117773-11493931-ec15-4823-a231-6f286466d6bf.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_19%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=485&amp;id=juA4V&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=646&amp;originWidth=656&amp;originalType=binary∶=1&amp;size=800568&amp;status=done&amp;style=none&amp;width=492" alt="image.png"></p><h3 id="2-7-图像位运算"><a href="#2-7-图像位运算" class="headerlink" title="2.7 图像位运算"></a>2.7 图像位运算</h3><p><strong>btwise_and(), bitwise_or(), bitwise_not(), bitwise_xor()</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>btwise_and<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 与运算    参数：        img1<span class="token punctuation">:</span>图片对象<span class="token number">1</span>        img2<span class="token punctuation">:</span>图片对象<span class="token number">2</span>        mask<span class="token punctuation">:</span>掩膜    cv<span class="token punctuation">.</span>bitwise_or<span class="token punctuation">(</span><span class="token punctuation">)</span>：或运算    参数：        img1<span class="token punctuation">:</span>图片对象<span class="token number">1</span>        img2<span class="token punctuation">:</span>图片对象<span class="token number">2</span>        mask<span class="token punctuation">:</span>掩膜    cv<span class="token punctuation">.</span>bitwise_not<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 非运算        img1<span class="token punctuation">:</span>图片对象<span class="token number">1</span>        mask<span class="token punctuation">:</span>掩膜    cv<span class="token punctuation">.</span>bitwise_xor<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>异或运算，相同为<span class="token number">1</span>，不同为<span class="token number">0</span>（<span class="token number">1</span><span class="token operator">^</span><span class="token number">1</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token operator">^</span><span class="token number">0</span><span class="token operator">=</span><span class="token number">1</span>）        img1<span class="token punctuation">:</span>图片对象<span class="token number">1</span>        img2<span class="token punctuation">:</span>图片对象<span class="token number">2</span>        mask<span class="token punctuation">:</span>掩膜<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>使用示例：将 logo 图片移动到足球图片中，需要截取 logo 图片的前景和足球图片 ROI 的背景，然后叠加，效果如下：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltimg1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">r"./image/logo.png"</span><span class="token punctuation">)</span>rows<span class="token punctuation">,</span>cols <span class="token operator">=</span> img1<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">r"./image/Messi.jpg"</span><span class="token punctuation">)</span>roi <span class="token operator">=</span> img2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>rows<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span>cols<span class="token punctuation">]</span>img1_gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img1<span class="token punctuation">,</span>cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>ret<span class="token punctuation">,</span>img1_thres <span class="token operator">=</span> cv<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img1_gray<span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span>cv<span class="token punctuation">.</span>THRESH_BINARY_INV<span class="token punctuation">)</span>img1_fg <span class="token operator">=</span>cv<span class="token punctuation">.</span>add<span class="token punctuation">(</span>img1<span class="token punctuation">,</span> img1<span class="token punctuation">,</span> mask<span class="token operator">=</span>img1_thres<span class="token punctuation">)</span>    <span class="token comment">#拿到logo图案的前景</span>img1_thres_inv <span class="token operator">=</span> cv<span class="token punctuation">.</span>bitwise_not<span class="token punctuation">(</span>img1_thres<span class="token punctuation">)</span>roi_bg <span class="token operator">=</span> cv<span class="token punctuation">.</span>add<span class="token punctuation">(</span>roi<span class="token punctuation">,</span> roi<span class="token punctuation">,</span>mask<span class="token operator">=</span>img1_thres_inv<span class="token punctuation">)</span>  <span class="token comment">#拿到roi图案的背景</span>img_add <span class="token operator">=</span> cv<span class="token punctuation">.</span>add<span class="token punctuation">(</span>img1_fg<span class="token punctuation">,</span> roi_bg<span class="token punctuation">)</span>     <span class="token comment">#背景和前景相加</span>img2<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>rows<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">:</span>cols<span class="token punctuation">]</span> <span class="token operator">=</span> img_addcv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"gray"</span><span class="token punctuation">,</span> img1_gray<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"thres"</span><span class="token punctuation">,</span> img1_thres<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"fg"</span><span class="token punctuation">,</span> img1_fg<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"tinv"</span><span class="token punctuation">,</span> img1_thres_inv<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"roi_bg"</span><span class="token punctuation">,</span> roi_bg<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"img_add"</span><span class="token punctuation">,</span> img_add<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"img2"</span><span class="token punctuation">,</span> img2<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178303-6873a51b-276b-4905-9624-0a952707553f.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_32%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=462&amp;id=UTuXW&amp;originHeight=462&amp;originWidth=1114&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=1114" alt=""></p><h3 id="2-8-性能评价"><a href="#2-8-性能评价" class="headerlink" title="2.8 性能评价　"></a>2.8 性能评价　</h3><p><strong>cv.getTickCount()：</strong> 获得时钟次数<br><strong>cv.getTickFrequency()：</strong>获得时钟频率 （每秒振动次数）</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">img1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'messi5.jpg'</span><span class="token punctuation">)</span>e1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTickCount<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    img1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>medianBlur<span class="token punctuation">(</span>img1<span class="token punctuation">,</span>i<span class="token punctuation">)</span>e2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTickCount<span class="token punctuation">(</span><span class="token punctuation">)</span>t <span class="token operator">=</span> <span class="token punctuation">(</span>e2 <span class="token operator">-</span> e1<span class="token punctuation">)</span><span class="token operator">/</span>cv<span class="token punctuation">.</span>getTickFrequency<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-9-绑定-trackbar-到图像"><a href="#2-9-绑定-trackbar-到图像" class="headerlink" title="2.9 绑定 trackbar 到图像"></a>2.9 绑定 trackbar 到图像</h3><p><strong>cv.createTrackbar()</strong><br><strong>cv.getTrackbarPos()</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token punctuation">)</span> 为窗口添加trackbar    参数：        trackbarname<span class="token punctuation">:</span> trackbar的名字        winname<span class="token punctuation">:</span> 窗口的名字        value<span class="token punctuation">:</span> trackbar创建时的值        count：trackbar能设置的最大值，最小值总为<span class="token number">0</span>        onChange：trackbar值发生变化时的回调函数，trackbar的值作为参数传给onchangecv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token punctuation">)</span> 获取某个窗口中trackbar的值    参数：        trackbarname<span class="token punctuation">:</span> trackbar的名字        winname<span class="token punctuation">:</span> 窗口的名字<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>使用示例：通过改变 trackbar 的值，来寻找最优的 mask 范围，从而识别出图片中蓝色的瓶盖</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">def</span> <span class="token function">nothing</span><span class="token punctuation">(</span>args<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">r"./image/frame.png"</span><span class="token punctuation">)</span>img_hsv <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span>cv<span class="token punctuation">.</span>COLOR_BGR2HSV<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">'tracks'</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"LH"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>nothing<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"LS"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>nothing<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"LV"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>nothing<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"UH"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>nothing<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"US"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>nothing<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"UV"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>nothing<span class="token punctuation">)</span><span class="token comment"># switch = "0:OFF \n1:ON"</span><span class="token comment"># cv.createTrackbar(switch,"tracks",0,1,nothing)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    l_h <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"LH"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">)</span>    l_s <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"LS"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">)</span>    l_v <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"LV"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">)</span>    u_h <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"UH"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">)</span>    u_s <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"US"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">)</span>    u_v <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"UV"</span><span class="token punctuation">,</span><span class="token string">"tracks"</span><span class="token punctuation">)</span>    lower_b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>l_h<span class="token punctuation">,</span>l_s<span class="token punctuation">,</span>l_v<span class="token punctuation">]</span><span class="token punctuation">)</span>    upper_b <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>u_h<span class="token punctuation">,</span>u_s<span class="token punctuation">,</span>u_v<span class="token punctuation">]</span><span class="token punctuation">)</span>    mask <span class="token operator">=</span> cv<span class="token punctuation">.</span>inRange<span class="token punctuation">(</span>img_hsv<span class="token punctuation">,</span>lower_b<span class="token punctuation">,</span>upper_b<span class="token punctuation">)</span>    res <span class="token operator">=</span> cv<span class="token punctuation">.</span>add<span class="token punctuation">(</span>img<span class="token punctuation">,</span>img<span class="token punctuation">,</span>mask<span class="token operator">=</span>mask<span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"img"</span><span class="token punctuation">,</span>img<span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"mask"</span><span class="token punctuation">,</span>mask<span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"res"</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>    k <span class="token operator">=</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> k<span class="token operator">==</span><span class="token number">27</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178411-8f454c38-00e2-471f-b55c-a685bd81dce1.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_11%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=227&amp;id=GwejM&amp;originHeight=227&amp;originWidth=242&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=242" alt=""></p><p><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178513-401cc885-25b5-4d3f-9e47-12bb8a41e1de.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_26%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=357&amp;id=ZRzWN&amp;originHeight=357&amp;originWidth=903&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=903" alt=""><br>再来一个例子</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">def</span> <span class="token function">empty</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">pass</span><span class="token keyword">def</span> <span class="token function">stackImages</span><span class="token punctuation">(</span>scale<span class="token punctuation">,</span> imgArray<span class="token punctuation">)</span><span class="token punctuation">:</span>    rows <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>imgArray<span class="token punctuation">)</span>    cols <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    rowsAvailable <span class="token operator">=</span> <span class="token builtin">isinstance</span><span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span>    width <span class="token operator">=</span> imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    height <span class="token operator">=</span> imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    <span class="token keyword">if</span> rowsAvailable<span class="token punctuation">:</span>        <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> y <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> cols<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                    imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> scale<span class="token punctuation">,</span> scale<span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span>                                               scale<span class="token punctuation">,</span> scale<span class="token punctuation">)</span>                <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span> imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_GRAY2BGR<span class="token punctuation">)</span>        imageBlank <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span><span class="token punctuation">(</span>height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>        hor <span class="token operator">=</span> <span class="token punctuation">[</span>imageBlank<span class="token punctuation">]</span> <span class="token operator">*</span> rows        hor_con <span class="token operator">=</span> <span class="token punctuation">[</span>imageBlank<span class="token punctuation">]</span> <span class="token operator">*</span> rows        <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">:</span>            hor<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span>        ver <span class="token operator">=</span> np<span class="token punctuation">.</span>vstack<span class="token punctuation">(</span>hor<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> x <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> scale<span class="token punctuation">,</span> scale<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> imgArray<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> scale<span class="token punctuation">,</span> scale<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>shape<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span> imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>imgArray<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_GRAY2BGR<span class="token punctuation">)</span>        hor <span class="token operator">=</span> np<span class="token punctuation">.</span>hstack<span class="token punctuation">(</span>imgArray<span class="token punctuation">)</span>        ver <span class="token operator">=</span> hor    <span class="token keyword">return</span> verpath <span class="token operator">=</span> <span class="token string">'Resources/lambo.png'</span>cv<span class="token punctuation">.</span>namedWindow<span class="token punctuation">(</span><span class="token string">"TrackBars"</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>resizeWindow<span class="token punctuation">(</span><span class="token string">"TrackBars"</span><span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"Hue Min"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> empty<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"Hue Max"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">179</span><span class="token punctuation">,</span> empty<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"Sat Min"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> empty<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"Sat Max"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">,</span> <span class="token number">240</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> empty<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"Val Min"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">,</span> <span class="token number">153</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> empty<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>createTrackbar<span class="token punctuation">(</span><span class="token string">"Val Max"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> empty<span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>path<span class="token punctuation">)</span>    imgHSV <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2HSV<span class="token punctuation">)</span>    h_min <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"Hue Min"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">)</span>    h_max <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"Hue Max"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">)</span>    s_min <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"Sat Min"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">)</span>    s_max <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"Sat Max"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">)</span>    v_min <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"Val Min"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">)</span>    v_max <span class="token operator">=</span> cv<span class="token punctuation">.</span>getTrackbarPos<span class="token punctuation">(</span><span class="token string">"Val Max"</span><span class="token punctuation">,</span> <span class="token string">"TrackBars"</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>h_min<span class="token punctuation">,</span> h_max<span class="token punctuation">,</span> s_min<span class="token punctuation">,</span> s_max<span class="token punctuation">,</span> v_min<span class="token punctuation">,</span> v_max<span class="token punctuation">)</span>    lower <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>h_min<span class="token punctuation">,</span> s_min<span class="token punctuation">,</span> v_min<span class="token punctuation">]</span><span class="token punctuation">)</span>    upper <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>h_max<span class="token punctuation">,</span> s_max<span class="token punctuation">,</span> v_max<span class="token punctuation">]</span><span class="token punctuation">)</span>    mask <span class="token operator">=</span> cv<span class="token punctuation">.</span>inRange<span class="token punctuation">(</span>imgHSV<span class="token punctuation">,</span> lower<span class="token punctuation">,</span> upper<span class="token punctuation">)</span>    imgResult <span class="token operator">=</span> cv<span class="token punctuation">.</span>bitwise_and<span class="token punctuation">(</span>img<span class="token punctuation">,</span> img<span class="token punctuation">,</span> mask<span class="token operator">=</span>mask<span class="token punctuation">)</span>    <span class="token comment"># cv.imshow("Original",img)</span>    <span class="token comment"># cv.imshow("HSV",imgHSV)</span>    <span class="token comment"># cv.imshow("Mask", mask)</span>    <span class="token comment"># cv.imshow("Result", imgResult)</span>    <span class="token comment"># stackImages图片拼接</span>    imgStack <span class="token operator">=</span> stackImages<span class="token punctuation">(</span><span class="token number">0.6</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>img<span class="token punctuation">,</span> imgHSV<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>mask<span class="token punctuation">,</span> imgResult<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"Stacked Images"</span><span class="token punctuation">,</span> imgStack<span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603449379350-e2cc40f6-4e82-426c-91c0-1ad4bdf88360.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_16%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=283&amp;id=hoViZ&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=283&amp;originWidth=345&amp;originalType=binary∶=1&amp;size=16826&amp;status=done&amp;style=none&amp;width=345" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603449388273-62fa4381-2886-4246-abf5-2038bb92f1a2.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=312&amp;id=DhPqt&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=624&amp;originWidth=748&amp;originalType=binary∶=1&amp;size=603499&amp;status=done&amp;style=none&amp;width=374" alt="image.png"></p><h2 id="3-图像阈值化"><a href="#3-图像阈值化" class="headerlink" title="3. 图像阈值化"></a>3. 图像阈值化</h2><p><strong>cv.threshold()</strong><br><strong>cv.adaptiveThreshold()</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    参数：        img<span class="token punctuation">:</span>图像对象，必须是灰度图        thresh<span class="token punctuation">:</span>阈值        maxval：最大值        <span class="token builtin">type</span><span class="token punctuation">:</span>            cv<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">:</span>     小于阈值的像素置为<span class="token number">0</span>，大于阈值的置为maxval            cv<span class="token punctuation">.</span>THRESH_BINARY_INV： 小于阈值的像素置为maxval，大于阈值的置为<span class="token number">0</span>            cv<span class="token punctuation">.</span>THRESH_TRUNC：      小于阈值的像素不变，大于阈值的置为thresh            cv<span class="token punctuation">.</span>THRESH_TOZERO       小于阈值的像素置<span class="token number">0</span>，大于阈值的不变            cv<span class="token punctuation">.</span>THRESH_TOZERO_INV   小于阈值的不变，大于阈值的像素置<span class="token number">0</span>返回两个值    ret<span class="token punctuation">:</span>阈值    img：阈值化处理后的图像cv<span class="token punctuation">.</span>adaptiveThreshold<span class="token punctuation">(</span><span class="token punctuation">)</span> 自适应阈值处理，图像不同部位采用不同的阈值进行处理    参数：        img<span class="token punctuation">:</span> 图像对象，<span class="token number">8</span><span class="token operator">-</span>bit单通道图        maxValue<span class="token punctuation">:</span>最大值        adaptiveMethod<span class="token punctuation">:</span> 自适应方法            cv<span class="token punctuation">.</span>ADAPTIVE_THRESH_MEAN_C     ：阈值为周围像素的平均值            cv<span class="token punctuation">.</span>ADAPTIVE_THRESH_GAUSSIAN_C <span class="token punctuation">:</span> 阈值为周围像素的高斯均值（按权重）        threshType<span class="token punctuation">:</span>            cv<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">:</span>     小于阈值的像素置为<span class="token number">0</span>，大于阈值的置为maxValuel            cv<span class="token punctuation">.</span>THRESH_BINARY_INV<span class="token punctuation">:</span>  小于阈值的像素置为maxValue，大于阈值的置为<span class="token number">0</span>        blocksize<span class="token punctuation">:</span> 计算阈值时，自适应的窗口大小<span class="token punctuation">,</span>必须为奇数 （如<span class="token number">3</span>：表示附近<span class="token number">3</span>个像素范围内的像素点，进行计算阈值）        C： 常数值，通过自适应方法计算的值，减去该常数值    <span class="token punctuation">(</span>mean value of the blocksize<span class="token operator">*</span>blocksize neighborhood of <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> minus C<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>使用示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> pltimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">r"C:./image/maze.png"</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>ret<span class="token punctuation">,</span> thre1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">)</span>adaptive_thre1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>adaptiveThreshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>ADAPTIVE_THRESH_MEAN_C<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>adaptive_thre2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>adaptiveThreshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>ADAPTIVE_THRESH_GAUSSIAN_C<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>titles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"img"</span><span class="token punctuation">,</span> <span class="token string">"thre1"</span><span class="token punctuation">,</span> <span class="token string">"adaptive_thre1"</span><span class="token punctuation">,</span> <span class="token string">"adaptive_thre2"</span><span class="token punctuation">]</span>imgs <span class="token operator">=</span> <span class="token punctuation">[</span>img<span class="token punctuation">,</span> thre1<span class="token punctuation">,</span> adaptive_thre1<span class="token punctuation">,</span> adaptive_thre2<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">"gray"</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>titles<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178758-ce84c7ec-030b-409c-aa06-fbe1075bf145.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_16%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=428&amp;id=TMDSZ&amp;originHeight=428&amp;originWidth=544&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=544" alt=""><br><strong>奥斯二值化（Otsu’s Binarization）</strong><br>对于一些双峰图像，奥斯二值化能找到两峰之间的像素值作为阈值，并将其返回。适用于双峰图像的阈值化，或者通过去噪而产生的双峰图像。<br>官网使用示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> pltimg <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'noisy2.png'</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># global thresholding</span>ret1<span class="token punctuation">,</span>th1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv<span class="token punctuation">.</span>THRESH_BINARY<span class="token punctuation">)</span><span class="token comment"># Otsu's thresholding</span>ret2<span class="token punctuation">,</span>th2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv<span class="token punctuation">.</span>THRESH_BINARY<span class="token operator">+</span>cv<span class="token punctuation">.</span>THRESH_OTSU<span class="token punctuation">)</span><span class="token comment"># Otsu's thresholding after Gaussian filtering</span>blur <span class="token operator">=</span> cv<span class="token punctuation">.</span>GaussianBlur<span class="token punctuation">(</span>img<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>ret3<span class="token punctuation">,</span>th3 <span class="token operator">=</span> cv<span class="token punctuation">.</span>threshold<span class="token punctuation">(</span>blur<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span>cv<span class="token punctuation">.</span>THRESH_BINARY<span class="token operator">+</span>cv<span class="token punctuation">.</span>THRESH_OTSU<span class="token punctuation">)</span><span class="token comment"># plot all the images and their histograms</span>images <span class="token operator">=</span> <span class="token punctuation">[</span>img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> th1<span class="token punctuation">,</span>          img<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> th2<span class="token punctuation">,</span>          blur<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> th3<span class="token punctuation">]</span>titles <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Original Noisy Image'</span><span class="token punctuation">,</span><span class="token string">'Histogram'</span><span class="token punctuation">,</span><span class="token string">'Global Thresholding (v=127)'</span><span class="token punctuation">,</span>          <span class="token string">'Original Noisy Image'</span><span class="token punctuation">,</span><span class="token string">'Histogram'</span><span class="token punctuation">,</span><span class="token string">"Otsu's Thresholding"</span><span class="token punctuation">,</span>          <span class="token string">'Gaussian filtered Image'</span><span class="token punctuation">,</span><span class="token string">'Histogram'</span><span class="token punctuation">,</span><span class="token string">"Otsu's Thresholding"</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">xrange</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>i<span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>images<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'gray'</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>titles<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>i<span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>hist<span class="token punctuation">(</span>images<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ravel<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">256</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>titles<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span>i<span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>images<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'gray'</span><span class="token punctuation">)</span>    plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span>titles<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">3</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178744-7d481550-b13d-4807-a893-26484a332d90.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_13%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=346&amp;id=PRl0Y&amp;originHeight=346&amp;originWidth=471&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=471" alt=""></p><h2 id="4-图像形状变换"><a href="#4-图像形状变换" class="headerlink" title="4. 图像形状变换"></a>4. 图像形状变换</h2><h3 id="4-1-cv-resize-图像缩放"><a href="#4-1-cv-resize-图像缩放" class="headerlink" title="4.1 cv.resize()   图像缩放"></a>4.1 cv.resize()   图像缩放</h3><p>缩放是对图像的大小进行调整，即使图像放大或缩小。</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>src<span class="token punctuation">,</span> dsize<span class="token punctuation">,</span> fx<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> fy<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> interpolation<span class="token operator">=</span>cv2<span class="token punctuation">.</span>INTER_LINEAR<span class="token punctuation">)</span> 放大和缩小图像    参数：        src<span class="token punctuation">:</span> 输入图像对象        dsize：输出矩阵<span class="token operator">/</span>图像的大小，为<span class="token number">0</span>时计算方式如下：dsize <span class="token operator">=</span> Size<span class="token punctuation">(</span><span class="token builtin">round</span><span class="token punctuation">(</span>fx<span class="token operator">*</span>src<span class="token punctuation">.</span>cols<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">round</span><span class="token punctuation">(</span>fy<span class="token operator">*</span>src<span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">)</span>        fx<span class="token punctuation">:</span> 水平轴的缩放因子，为<span class="token number">0</span>时计算方式：  <span class="token punctuation">(</span>double<span class="token punctuation">)</span>dsize<span class="token punctuation">.</span>width<span class="token operator">/</span>src<span class="token punctuation">.</span>cols        fy<span class="token punctuation">:</span> 垂直轴的缩放因子，为<span class="token number">0</span>时计算方式：  <span class="token punctuation">(</span>double<span class="token punctuation">)</span>dsize<span class="token punctuation">.</span>heigh<span class="token operator">/</span>src<span class="token punctuation">.</span>rows        interpolation：插值算法            cv<span class="token punctuation">.</span>INTER_NEAREST <span class="token punctuation">:</span> 最近邻插值法            cv<span class="token punctuation">.</span>INTER_LINEAR   默认值，双线性插值法            cv<span class="token punctuation">.</span>INTER_AREA        基于局部像素的重采样（resampling using pixel area relation）。对于图像抽取（image decimation）来说，这可能是一个更好的方法。但如果是放大图像时，它和最近邻法的效果类似。            cv<span class="token punctuation">.</span>INTER_CUBIC        基于4x4像素邻域的<span class="token number">3</span>次插值法            cv<span class="token punctuation">.</span>INTER_LANCZOS4     基于8x8像素邻域的Lanczos插值    cv<span class="token punctuation">.</span>INTER_AREA 适合于图像缩小， cv<span class="token punctuation">.</span>INTER_CUBIC <span class="token punctuation">(</span>slow<span class="token punctuation">)</span> <span class="token operator">&amp;</span> cv<span class="token punctuation">.</span>INTER_LINEAR 适合于图像放大<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>官网示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1. 读取图片</span>img1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/kids.jpg"</span><span class="token punctuation">)</span><span class="token comment"># 2.图像缩放</span><span class="token comment"># 2.1 绝对尺寸</span>rows<span class="token punctuation">,</span> cols <span class="token operator">=</span> img1<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>res <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img1<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> cols<span class="token punctuation">,</span> <span class="token number">2</span> <span class="token operator">*</span> rows<span class="token punctuation">)</span><span class="token punctuation">,</span> interpolation<span class="token operator">=</span>cv<span class="token punctuation">.</span>INTER_CUBIC<span class="token punctuation">)</span><span class="token comment"># 2.2 相对尺寸</span>res1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>img1<span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> fx<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> fy<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token comment"># 3 图像显示</span><span class="token comment"># 3.1 使用opencv显示图像(不推荐)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"orignal"</span><span class="token punctuation">,</span> img1<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"enlarge"</span><span class="token punctuation">,</span> res<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"shrink）"</span><span class="token punctuation">,</span> res1<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 3.2 使用matplotlib显示图像</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"绝对尺度（放大）"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>res1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"相对尺度（缩小）"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617373330704-bd2a29d0-3b8a-4f2c-8140-17248d3bff23.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_29%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=788&amp;id=JdmwO&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=788&amp;originWidth=1017&amp;originalType=binary∶=1&amp;size=2045746&amp;status=done&amp;style=none&amp;width=1017" alt="image.png"></p><h3 id="4-2-cv-warpAffine-仿射变换"><a href="#4-2-cv-warpAffine-仿射变换" class="headerlink" title="4.2 cv.warpAffine()      仿射变换"></a>4.2 cv.warpAffine()      仿射变换</h3><p>仿射变换（从二维坐标到二维坐标之间的线性变换，且保持二维图形的“平直性”和“平行性”。仿射变换可以通过一系列的原子变换的复合来实现，包括平移，缩放，翻转，旋转和剪切）</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span><span class="token punctuation">)</span>   仿射变换（从二维坐标到二维坐标之间的线性变换，且保持二维图形的“平直性”和“平行性”。仿射变换可以通过一系列的原子变换的复合来实现，包括平移，缩放，翻转，旋转和剪切）    参数：        img<span class="token punctuation">:</span> 图像对象        M：<span class="token number">2</span><span class="token operator">*</span><span class="token number">3</span> transformation matrix <span class="token punctuation">(</span>转变矩阵<span class="token punctuation">)</span>        dsize：输出矩阵的大小<span class="token punctuation">,</span>注意格式为（cols，rows）  即width对应cols，height对应rows        flags：可选，插值算法标识符，有默认值INTER_LINEAR，               如果插值算法为WARP_INVERSE_MAP<span class="token punctuation">,</span> warpAffine函数使用如下矩阵进行图像转dst<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token operator">=</span>src<span class="token punctuation">(</span>M11<span class="token operator">*</span>x<span class="token operator">+</span>M12<span class="token operator">*</span>y<span class="token operator">+</span>M13<span class="token punctuation">,</span>M21<span class="token operator">*</span>x<span class="token operator">+</span>M22<span class="token operator">*</span>y<span class="token operator">+</span>M23<span class="token punctuation">)</span>        borderMode：可选， 边界像素模式，有默认值BORDER_CONSTANT        borderValue<span class="token punctuation">:</span>可选，边界取值，有默认值Scalar<span class="token punctuation">(</span><span class="token punctuation">)</span>即<span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>常用插值算法：<br><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178823-96afaa0d-b385-4556-bc9b-0df72a2ff033.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_16%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=352&amp;id=pii0x&amp;originHeight=352&amp;originWidth=573&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=573" alt=""><br>仿射变换的本质：即一个矩阵 A 和向量 B 共同组成的转变矩阵，和原图像坐标相乘来得到新图像的坐标，从而实现图像移动，旋转等。如下矩阵 A 和向量 B 组成的转变矩阵 M，用来对原图像的坐标（x,y）进行转变，得到新坐标向量 T<br>矩阵 A 和向量 B<br><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178765-a34f69bf-11b8-4ac1-a264-9e917c835dd1.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_15%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=114&amp;id=pU6QE&amp;originHeight=114&amp;originWidth=330&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=330" alt=""><br>仿射变换（矩阵计算）：变换前坐标（x,y）<br><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178759-f415d73a-be00-49f5-8331-30fc25003d01.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_13%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=85&amp;id=UCeET&amp;originHeight=85&amp;originWidth=296&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=296" alt=""><br>变换结果：变换后坐标（a00<em>x+a01 </em>y+b00, a10<em>x+a11</em>y+b10）<br><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178760-e43ede53-fd59-4244-bc2a-536c394482b9.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_9%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=64&amp;id=zf3dA&amp;originHeight=64&amp;originWidth=209&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=209" alt=""></p><h4 id="4-2-1-平移变换"><a href="#4-2-1-平移变换" class="headerlink" title="4.2.1 平移变换"></a>4.2.1 平移变换</h4><p>了解了仿射变换的概念，平移变换只是采用了一个如下的转变矩阵（transformation matrix）: 从（x,y）平移到（x+tx, y+ty）<br>　　　　　　　　　　　　　　　　　　<img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178720-f53e78b9-3241-45ad-b4f0-ebc840a4b696.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_9%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=63&amp;id=YtGQ9&amp;originHeight=63&amp;originWidth=159&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=159" alt=""><br>　　　　　　　　　　　<img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178814-da807751-1cb6-4f96-968f-a195d73c1a34.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_12%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=102&amp;id=yWjN7&amp;originHeight=102&amp;originWidth=432&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=432" alt=""><br>官网使用示例：向左平移 100，向下平移 50</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img<span class="token punctuation">,</span> M<span class="token punctuation">,</span> dsize<span class="token punctuation">)</span>    img<span class="token punctuation">:</span> 输入图像    M： <span class="token number">2</span><span class="token operator">*</span>∗<span class="token number">3</span>移动矩阵    dsize<span class="token punctuation">:</span> 输出图像的大小<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>注意：输出图像的大小，它应该是(宽度，高度)的形式。请记住,width=列数，height=行数</strong></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1. 读取图像</span>img1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/kids.jpg"</span><span class="token punctuation">)</span><span class="token comment"># 2. 图像平移</span>rows<span class="token punctuation">,</span> cols <span class="token operator">=</span> img1<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>M <span class="token operator">=</span> M <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  <span class="token comment"># 平移矩阵</span>dst <span class="token operator">=</span> cv<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img1<span class="token punctuation">,</span> M<span class="token punctuation">,</span> <span class="token punctuation">(</span>cols<span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 3. 图像显示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img1<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>dst<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"平移后结果"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617373487855-b1437839-ef57-4731-a063-f1898447b55a.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=267&amp;id=XHNED&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=267&amp;originWidth=714&amp;originalType=binary∶=1&amp;size=372282&amp;status=done&amp;style=none&amp;width=714" alt="image.png"></p><h4 id="4-2-2-放大和缩小"><a href="#4-2-2-放大和缩小" class="headerlink" title="4.2.2 放大和缩小"></a>4.2.2 放大和缩小</h4><p>放大和缩小指相对于原坐标（x,y）,变换为了（a<em>x, b</em>y）,即水平方向放大了 a 倍，水平方向放大了 b 倍，其对应的转变矩阵如下：<br>　　　<img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178832-6c6e20b7-9366-426b-87a7-8e1fe5917a66.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_12%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=124&amp;id=HLuiw&amp;originHeight=124&amp;originWidth=409&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=409" alt=""></p><h4 id="4-2-3-旋转变换"><a href="#4-2-3-旋转变换" class="headerlink" title="4.2.3 旋转变换"></a>4.2.3 旋转变换</h4><p><strong>图像旋转是指图像按照某个位置转动一定角度的过程，旋转中图像仍保持这原始尺寸。图像旋转后图像的水平对称轴、垂直对称轴及中心坐标原点都可能会发生变换，因此需要对图像旋转中的坐标进行相应转换。</strong><br>将（x,y），以坐标原点为中心，顺时针方向旋转 α 得到(x1,y1)， 有如下关系 x1 = xcosα-ysinα, y1 =xsinα+ycosα; 因此可以构建对应的转变矩阵如下：<img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178751-bd7a8973-d495-4146-b0ac-e68ea9a54113.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_10%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=73&amp;id=ZikP8&amp;originHeight=73&amp;originWidth=214&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=214" alt=""><br>opencv 将其扩展到，任意点 center 为中心进行顺时针旋转 α，放大 scale 倍的，转变矩阵如下：<br>　　　　　　　　　　　　<img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603440178794-884b148f-b8c3-4278-9471-917b9258aa48.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_12%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=146&amp;id=P6cFP&amp;originHeight=146&amp;originWidth=405&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=405" alt=""><br>通过 getRotationMatrix2D()能得到转变矩阵</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>getRotationMatrix2D<span class="token punctuation">(</span><span class="token punctuation">)</span>  返回<span class="token number">2</span><span class="token operator">*</span><span class="token number">3</span>的转变矩阵（浮点型）    参数：        center：旋转的中心点坐标        angle：旋转角度，单位为度数，证书表示逆时针旋转        scale：同方向的放大倍数<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/kids.jpg"</span><span class="token punctuation">)</span><span class="token comment"># 2 图像旋转</span>rows<span class="token punctuation">,</span> cols <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># 2.1 生成旋转矩阵</span>M <span class="token operator">=</span> cv<span class="token punctuation">.</span>getRotationMatrix2D<span class="token punctuation">(</span><span class="token punctuation">(</span>cols <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">,</span> rows <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 2.2 进行旋转变换</span>dst <span class="token operator">=</span> cv<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img<span class="token punctuation">,</span> M<span class="token punctuation">,</span> <span class="token punctuation">(</span>cols<span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 3 图像展示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>dst<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"旋转后结果"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617373576429-c1a9326c-56f3-4ab4-9dcb-e0f37e1e18b5.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=279&amp;id=S2HZH&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=279&amp;originWidth=736&amp;originalType=binary∶=1&amp;size=395572&amp;status=done&amp;style=none&amp;width=736" alt="image.png"></p><h4 id="4-2-4-仿射变换矩阵的计算"><a href="#4-2-4-仿射变换矩阵的计算" class="headerlink" title="4.2.4 仿射变换矩阵的计算"></a>4.2.4 仿射变换矩阵的计算</h4><p>通过上述的平移，缩放，旋转的组合变换即实现了仿射变换，上述多个变换的变换矩阵相乘即能得到组合变换的变换矩阵。同时该变换矩阵中涉及到六个未知数（2*3 的矩阵），通过变换前后对应三组坐标，也可以求出变换矩阵，opencv 提供了函数 getAffineTransform()来计算变化矩阵</p><ol><li>矩阵相乘：将平移，旋转和缩放的变换矩阵相乘，最后即为仿射变换矩阵</li><li>getAffineTransform()：根据变换前后三组坐标计算变换矩阵</li></ol><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>getAffineTransform<span class="token punctuation">(</span><span class="token punctuation">)</span>  返回<span class="token number">2</span><span class="token operator">*</span><span class="token number">3</span>的转变矩阵    参数：        src：原图像中的三组坐标，如np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        dst<span class="token punctuation">:</span> 转换后的对应三组坐标，如np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token number">250</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 图像读取</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/kids.jpg"</span><span class="token punctuation">)</span><span class="token comment"># 2 仿射变换</span>rows<span class="token punctuation">,</span> cols <span class="token operator">=</span> img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token comment"># 2.1 创建变换矩阵</span>pts1 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pts2 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">250</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>M <span class="token operator">=</span> cv<span class="token punctuation">.</span>getAffineTransform<span class="token punctuation">(</span>pts1<span class="token punctuation">,</span> pts2<span class="token punctuation">)</span><span class="token comment"># 2.2 完成仿射变换</span>dst <span class="token operator">=</span> cv<span class="token punctuation">.</span>warpAffine<span class="token punctuation">(</span>img<span class="token punctuation">,</span> M<span class="token punctuation">,</span> <span class="token punctuation">(</span>cols<span class="token punctuation">,</span> rows<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 3 图像显示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>dst<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"仿射后结果"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617373620628-4ba09de1-c440-4899-a033-84c9de766402.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=313&amp;id=wZzZT&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=313&amp;originWidth=794&amp;originalType=binary∶=1&amp;size=432930&amp;status=done&amp;style=none&amp;width=794" alt="image.png"></p><h3 id="4-3-透视变换-persperctive-transformation"><a href="#4-3-透视变换-persperctive-transformation" class="headerlink" title="4.3 透视变换(persperctive transformation)"></a>4.3 透视变换(persperctive transformation)</h3><p>仿射变换都是在二维空间的变换，透视变换（投影变换）是在三维空间中发生了旋转。需要前后四组坐标来计算对应的转变矩阵，opencv 提供了函数 getPerspectiveTransform()来计算转变矩阵，cv2.wrapPerspective()函数来进行透视变换。其对应参数如下：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>getPerspectiveTransform<span class="token punctuation">(</span><span class="token punctuation">)</span>   返回<span class="token number">3</span><span class="token operator">*</span><span class="token number">3</span>的转变矩阵    src：原图像中的四组坐标，如 np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">368</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token number">387</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">389</span><span class="token punctuation">,</span><span class="token number">390</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    dst<span class="token punctuation">:</span> 转换后的对应四组坐标，如np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>wrapPerspective<span class="token punctuation">(</span><span class="token punctuation">)</span>src<span class="token punctuation">:</span> 图像对象    M：<span class="token number">3</span><span class="token operator">*</span><span class="token number">3</span> transformation matrix <span class="token punctuation">(</span>转变矩阵<span class="token punctuation">)</span>    dsize：输出矩阵的大小，注意格式为（cols，rows）  即width对应cols，height对应rows    flags：可选，插值算法标识符，有默认值INTER_LINEAR，如果插值算法为WARP_INVERSE_MAP<span class="token punctuation">,</span> warpAffine函数使用如下矩阵进行图像转dst<span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token operator">=</span>src<span class="token punctuation">(</span>M11<span class="token operator">*</span>x<span class="token operator">+</span>M12<span class="token operator">*</span>y<span class="token operator">+</span>M13<span class="token punctuation">,</span>M21<span class="token operator">*</span>x<span class="token operator">+</span>M22<span class="token operator">*</span>y<span class="token operator">+</span>M23<span class="token punctuation">)</span>    borderMode：可选， 边界像素模式，有默认值BORDER_CONSTANT    borderValue<span class="token punctuation">:</span>可选，边界取值，有默认值Scalar<span class="token punctuation">(</span><span class="token punctuation">)</span>即<span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>使用示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 1 读取图像</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/poker.jpg"</span><span class="token punctuation">)</span>width<span class="token punctuation">,</span> height <span class="token operator">=</span> <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">350</span><span class="token comment"># 2 创建变换矩阵</span><span class="token comment"># 找到扑克牌中的四个点</span>pts1 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">219</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">287</span><span class="token punctuation">,</span> <span class="token number">188</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">154</span><span class="token punctuation">,</span> <span class="token number">482</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">352</span><span class="token punctuation">,</span> <span class="token number">440</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>pts2 <span class="token operator">=</span> np<span class="token punctuation">.</span>float32<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>width<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> height<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>width<span class="token punctuation">,</span> height<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>matrix <span class="token operator">=</span> cv<span class="token punctuation">.</span>getPerspectiveTransform<span class="token punctuation">(</span>pts1<span class="token punctuation">,</span> pts2<span class="token punctuation">)</span><span class="token comment"># 3 进行变换</span>imgOutput <span class="token operator">=</span> cv<span class="token punctuation">.</span>warpPerspective<span class="token punctuation">(</span>img<span class="token punctuation">,</span> matrix<span class="token punctuation">,</span> <span class="token punctuation">(</span>width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 4 图像显示</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"Image"</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">"Output"</span><span class="token punctuation">,</span> imgOutput<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603448225125-72b2c7aa-30e9-4b45-985e-8dd593ce62f7.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_27%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=286&amp;id=DKWLN&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=1140&amp;originWidth=954&amp;originalType=binary∶=1&amp;size=772877&amp;status=done&amp;style=none&amp;width=239" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2020/png/448115/1603448195900-c518c7fa-9fe3-4247-bdad-6f38e073c686.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=211&amp;id=Ce61x&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=840&amp;originWidth=690&amp;originalType=binary∶=1&amp;size=307890&amp;status=done&amp;style=none&amp;width=173" alt="image.png"><br>从上图中可以透视变换的一个应用，如果能找到原图中纸张的四个顶点，将其转换到新图中纸张的四个顶点，能将歪斜的 roi 区域转正，并进行放大；如在书籍，名片拍照上传后进行识别时，是一个很好的图片预处理方法。</p><h2 id="5-形态学操作"><a href="#5-形态学操作" class="headerlink" title="5. 形态学操作"></a>5. 形态学操作</h2><p>形态学转换是基于图像形状的一些简单操作。它通常在二进制图像上执行。腐蚀和膨胀是两个基本的形态学运算符。然后它的变体形式如开运算，闭运算，礼帽黑帽等。</p><h3 id="5-1-腐蚀和膨胀"><a href="#5-1-腐蚀和膨胀" class="headerlink" title="5.1 腐蚀和膨胀"></a>5.1 腐蚀和膨胀</h3><p>腐蚀和膨胀是最基本的形态学操作，腐蚀和膨胀都是针对白色部分（高亮部分）而言的。<br>膨胀就是使图像中高亮部分扩张，效果图拥有比原图更大的高亮区域；腐蚀是原图中的高亮区域被蚕食，效果图拥有比原图更小的高亮区域。膨胀是求局部最大值的操作，腐蚀是求局部最小值的操作。</p><ol><li><strong>腐蚀</strong><br>具体操作是：用一个结构元素扫描图像中的每一个像素，用结构元素中的每一个像素与其覆盖的像素做“与”操作，如果都为 1，则该像素为 1，否则为 0。如下图所示，结构 A 被结构 B 腐蚀后：</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374948515-3a42045d-2d3c-4401-b092-0d602caeab02.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=207&amp;id=xFGIK&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=207&amp;originWidth=695&amp;originalType=binary∶=1&amp;size=29824&amp;status=done&amp;style=none&amp;width=695" alt="image.png"></p><h6 id="腐蚀的作用是消除物体边界点，使目标缩小，可以消除小于结构元素的噪声点。"><a href="#腐蚀的作用是消除物体边界点，使目标缩小，可以消除小于结构元素的噪声点。" class="headerlink" title="腐蚀的作用是消除物体边界点，使目标缩小，可以消除小于结构元素的噪声点。"></a>腐蚀的<strong>作用</strong>是消除物体边界点，使目标缩小，可以消除小于结构元素的噪声点。</h6><p><strong>API</strong>：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>erode<span class="token punctuation">(</span>img<span class="token punctuation">,</span>kernel<span class="token punctuation">,</span>iterations<span class="token punctuation">)</span>    img<span class="token punctuation">:</span> 要处理的图像    kernel<span class="token punctuation">:</span> 核结构    iterations<span class="token punctuation">:</span> 腐蚀的次数，默认是<span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ol><li><strong>膨胀</strong></li></ol><p>具体操作是：用一个结构元素扫描图像中的每一个像素，用结构元素中的每一个像素与其覆盖的像素做“与”操作，如果都为 0，则该像素为 0，否则为 1。如下图所示，结构 A 被结构 B 腐蚀后：<img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374931837-0282dca4-6743-42cd-9d00-b0ad2bacbfa3.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=274&amp;id=M9MMf&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=274&amp;originWidth=720&amp;originalType=binary∶=1&amp;size=32674&amp;status=done&amp;style=none&amp;width=720" alt="image.png"></p><h6 id="膨胀的作用是将与物体接触的所有背景点合并到物体中，使目标增大，可添补目标中的孔洞。"><a href="#膨胀的作用是将与物体接触的所有背景点合并到物体中，使目标增大，可添补目标中的孔洞。" class="headerlink" title="膨胀的作用是将与物体接触的所有背景点合并到物体中，使目标增大，可添补目标中的孔洞。"></a>膨胀的作用是将与物体接触的所有背景点合并到物体中，使目标增大，可添补目标中的孔洞。</h6><p><strong>API</strong>：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">cv.dilate(img,kernel,iterations)  img: 要处理的图像  kernel: 核结构  iterations: 腐蚀的次数，默认是1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ol><li><strong>示例</strong></li></ol><p>我们使用一个 5*5 的卷积核实现腐蚀和膨胀的运算：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/letter.png"</span><span class="token punctuation">)</span><span class="token comment"># 2 创建核结构</span>kernel <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span><span class="token comment"># 3 图像腐蚀和膨胀</span>erosion <span class="token operator">=</span> cv<span class="token punctuation">.</span>erode<span class="token punctuation">(</span>img<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>  <span class="token comment"># 腐蚀</span>dilate <span class="token operator">=</span> cv<span class="token punctuation">.</span>dilate<span class="token punctuation">(</span>img<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>  <span class="token comment"># 膨胀</span><span class="token comment"># 4 图像展示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>erosion<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"腐蚀后结果"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>dilate<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"膨胀后结果"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374915472-40958e3a-1812-4d57-be20-e0a1a5ddd6e7.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=328&amp;id=S7Gc8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=328&amp;originWidth=790&amp;originalType=binary∶=1&amp;size=72600&amp;status=done&amp;style=none&amp;width=790" alt="image.png"></p><h3 id="5-2-开闭运算"><a href="#5-2-开闭运算" class="headerlink" title="5.2 开闭运算"></a>5.2 开闭运算</h3><p>开运算和闭运算是将腐蚀和膨胀按照一定的次序进行处理。 但这两者并不是可逆的，即先开后闭并不能得到原来的图像。</p><ol><li><strong>开运算</strong><br>开运算是先腐蚀后膨胀，其<strong>作用</strong>是：分离物体，消除小区域。<strong>特点</strong>：消除噪点，去除小的干扰块，而不影响原来的图像。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374906407-98a10cac-cee2-458e-baf9-896895dd8513.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=467&amp;id=s3InA&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=467&amp;originWidth=729&amp;originalType=binary∶=1&amp;size=86120&amp;status=done&amp;style=none&amp;width=729" alt="image.png"></li><li><strong>闭运算</strong><br>闭运算与开运算相反，是先膨胀后腐蚀，<strong>作用</strong>是消除/“闭合”物体里面的孔洞，<strong>特点</strong>：可以填充闭合区域。</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374899714-983e6827-bf2d-4886-bfa6-402832bc82f2.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=562&amp;id=faZ6r&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=562&amp;originWidth=728&amp;originalType=binary∶=1&amp;size=105747&amp;status=done&amp;style=none&amp;width=728" alt="image.png"></p><ol><li><strong>API</strong></li></ol><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img<span class="token punctuation">,</span> op<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>    img<span class="token punctuation">:</span> 要处理的图像    op<span class="token punctuation">:</span> 处理方式：若进行开运算，则设为cv<span class="token punctuation">.</span>MORPH_OPEN，若进行闭运算，则设为cv<span class="token punctuation">.</span>MORPH_CLOSE    Kernel： 核结构<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ol><li><strong>示例</strong><br>使用 10*10 的核结构对卷积进行开闭运算的实现。</li></ol><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像</span>img1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/letter1.png"</span><span class="token punctuation">)</span>img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/letter2.png"</span><span class="token punctuation">)</span><span class="token comment"># 2 创建核结构</span>kernel <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span><span class="token comment"># 3 图像的开闭运算</span>cvOpen <span class="token operator">=</span> cv<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img1<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>MORPH_OPEN<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>  <span class="token comment"># 开运算</span>cvClose <span class="token operator">=</span> cv<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img2<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>MORPH_CLOSE<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>  <span class="token comment"># 闭运算</span><span class="token comment"># 4 图像展示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img1<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>cvOpen<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"开运算结果"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img2<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>cvClose<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"闭运算结果"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374873761-0ab46f02-d306-42b9-bf8e-10dca2cacf6b.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=529&amp;id=SDWqd&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=705&amp;originWidth=751&amp;originalType=binary∶=1&amp;size=226291&amp;status=done&amp;style=none&amp;width=563" alt="image.png"></p><h3 id="5-3-礼帽和黑帽"><a href="#5-3-礼帽和黑帽" class="headerlink" title="5.3 礼帽和黑帽"></a>5.3 礼帽和黑帽</h3><ol><li><strong>礼帽运算</strong><br>原图像与“开运算“的结果图之差，如下式计算：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374862119-8c27ef5b-4be8-43e7-881d-f960797865d1.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=36&amp;id=ee0ev&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=36&amp;originWidth=730&amp;originalType=binary∶=1&amp;size=41420&amp;status=done&amp;style=none&amp;width=730" alt="image.png"><br>　　因为开运算带来的结果是放大了裂缝或者局部低亮度的区域，因此，从原图中减去开运算后的图，得到的效果图突出了比原图轮廓周围的区域更明亮的区域，且这一操作和选择的核的大小相关。<br>　　礼帽运算用来分离比邻近点亮一些的斑块。当一幅图像具有大幅的背景的时候，而微小物品比较有规律的情况下，可以使用顶帽运算进行背景提取。</li><li><strong>黑帽运算</strong><br>为”闭运算“的结果图与原图像之差。数学表达式为：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374855658-b2d047d0-6088-4243-a786-795b65057c72.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=50&amp;id=wWv6n&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=50&amp;originWidth=747&amp;originalType=binary∶=1&amp;size=20646&amp;status=done&amp;style=none&amp;width=747" alt="image.png"><br>黑帽运算后的效果图突出了比原图轮廓周围的区域更暗的区域，且这一操作和选择的核的大小相关。<br>黑帽运算用来分离比邻近点暗一些的斑块。</li><li><strong>API</strong></li></ol><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img<span class="token punctuation">,</span> op<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>    img<span class="token punctuation">:</span> 要处理的图像    op<span class="token punctuation">:</span> 处理方式：    Kernel： 核结构<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ol><li>参数：</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374834506-499ee6d6-d554-46f3-bf3d-1eebc4068026.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=186&amp;id=Jc2NC&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=186&amp;originWidth=716&amp;originalType=binary∶=1&amp;size=71208&amp;status=done&amp;style=none&amp;width=716" alt="image.png"></p><ol><li><strong>示例</strong></li></ol><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像</span>img1 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/letter.png"</span><span class="token punctuation">)</span>img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/letter.png"</span><span class="token punctuation">)</span><span class="token comment"># 2 创建核结构</span>kernel <span class="token operator">=</span> np<span class="token punctuation">.</span>ones<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span><span class="token comment"># 3 图像的礼帽和黑帽运算</span>cvOpen <span class="token operator">=</span> cv<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img1<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>MORPH_TOPHAT<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>  <span class="token comment"># 礼帽运算</span>cvClose <span class="token operator">=</span> cv<span class="token punctuation">.</span>morphologyEx<span class="token punctuation">(</span>img2<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>MORPH_BLACKHAT<span class="token punctuation">,</span> kernel<span class="token punctuation">)</span>  <span class="token comment"># 黑帽运算</span><span class="token comment"># 4 图像显示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img1<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>cvOpen<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"礼帽运算结果"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img2<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>cvClose<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"黑帽运算结果"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617374789561-e36f7d13-78bf-41f2-846a-0d488cef9e57.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=740&amp;id=SHlhJ&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=740&amp;originWidth=796&amp;originalType=binary∶=1&amp;size=308935&amp;status=done&amp;style=none&amp;width=796" alt="image.png"></p><h2 id="6-图像平滑"><a href="#6-图像平滑" class="headerlink" title="6. 图像平滑"></a>6. 图像平滑</h2><h3 id="6-1-图像噪声"><a href="#6-1-图像噪声" class="headerlink" title="6.1 图像噪声"></a>6.1 图像噪声</h3><p>由于图像采集、处理、传输等过程不可避免的会受到噪声的污染，妨碍人们对图像理解及分析处理。常见的图像噪声有高斯噪声、椒盐噪声等。</p><h4 id="6-1-1-椒盐噪声"><a href="#6-1-1-椒盐噪声" class="headerlink" title="6.1.1 椒盐噪声"></a>6.1.1 椒盐噪声</h4><p>椒盐噪声也称为脉冲噪声，是图像中经常见到的一种噪声，它是一种随机出现的白点或者黑点，可能是亮的区域有黑色像素或是在暗的区域有白色像素（或是两者皆有）。椒盐噪声的成因可能是影像讯号受到突如其来的强烈干扰而产生、类比数位转换器或位元传输错误等。例如失效的感应器导致像素值为最小值，饱和的感应器导致像素值为最大值。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375885885-a3d85457-7f4e-4b67-8a51-4016343be0f7.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=238&amp;id=EGMPV&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=238&amp;originWidth=757&amp;originalType=binary∶=1&amp;size=222471&amp;status=done&amp;style=none&amp;width=757" alt="image.png"></p><h4 id="6-1-2-高斯噪声"><a href="#6-1-2-高斯噪声" class="headerlink" title="6.1.2 高斯噪声"></a>6.1.2 高斯噪声</h4><p>高斯噪声是指噪声密度函数服从高斯分布的一类噪声。由于高斯噪声在空间和频域中数学上的易处理性，这种噪声(也称为正态噪声)模型经常被用于实践中。高斯随机变量 z 的概率密度函数由下式给出：<img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376001833-af45b947-9eda-49ed-8e1f-34938b838c78.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_9%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=65&amp;id=Zacjr&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=65&amp;originWidth=208&amp;originalType=binary∶=1&amp;size=3151&amp;status=done&amp;style=none&amp;width=208" alt="image.png"><br>其中 z 表示灰度值，μ 表示 z 的平均值或期望值，σ 表示 z 的标准差。标准差的平方\sigma^{2}_σ_2 称为 z 的方差。高斯函数的曲线如图所示。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375856318-5b0be950-77ac-4cb4-b0c7-d5981ab2d778.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_16%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=369&amp;id=acyqP&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=492&amp;originWidth=578&amp;originalType=binary∶=1&amp;size=134416&amp;status=done&amp;style=none&amp;width=434" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375865502-4420295d-1876-4855-998c-98596085cef8.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=243&amp;id=EiVzB&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=243&amp;originWidth=791&amp;originalType=binary∶=1&amp;size=278782&amp;status=done&amp;style=none&amp;width=791" alt="image.png"></p><h3 id="6-2-图像平滑简介"><a href="#6-2-图像平滑简介" class="headerlink" title="6.2 图像平滑简介"></a>6.2 图像平滑简介</h3><p>图像平滑从信号处理的角度看就是去除其中的高频信息，保留低频信息。因此我们可以对图像实施低通滤波。低通滤波可以去除图像中的噪声，对图像进行平滑。<br>根据滤波器的不同可分为均值滤波，高斯滤波，中值滤波， 双边滤波。</p><h4 id="6-2-1-均值滤波"><a href="#6-2-1-均值滤波" class="headerlink" title="6.2.1 均值滤波"></a>6.2.1 均值滤波</h4><p>采用均值滤波模板对图像噪声进行滤除。令<img src="https://cdn.nlark.com/yuque/0/2021/svg/448115/1617375239079-004d5d20-619a-4893-bb42-8e3f513abca0.svg#height=26&amp;id=GcbqM&amp;originHeight=26&amp;originWidth=31&amp;originalType=binary∶=1&amp;size=0&amp;status=done&amp;style=none&amp;width=31" alt=""> 表示中心在(x, y)点，尺寸为 m×n 的矩形子图像窗口的坐标组。 均值滤波器可表示为：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375835493-94ba0dd4-a6e1-43cf-83dc-09f0b10cd6bb.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_12%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=85&amp;id=bc7Yk&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=85&amp;originWidth=266&amp;originalType=binary∶=1&amp;size=4552&amp;status=done&amp;style=none&amp;width=266" alt="image.png"><br>由一个归一化卷积框完成的。它只是用卷积框覆盖区域所有像素的平均值来代替中心元素。<br>例如，3x3 标准化的平均过滤器如下所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375820770-d5964ba2-00d1-48b8-863e-fab2c4854d05.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_9%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=98&amp;id=mWHtv&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=98&amp;originWidth=179&amp;originalType=binary∶=1&amp;size=2382&amp;status=done&amp;style=none&amp;width=179" alt="image.png"><br>均值滤波的优点是算法简单，计算速度较快，缺点是在去噪的同时去除了很多细节部分，将图像变得模糊。<br>API:</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>blur<span class="token punctuation">(</span>src<span class="token punctuation">,</span> ksize<span class="token punctuation">,</span> anchor<span class="token punctuation">,</span> borderType<span class="token punctuation">)</span>  src：输入图像  ksize：卷积核的大小  anchor：默认值 <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> ，表示核中心  borderType：边界类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 图像读取</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/dogsp.jpeg'</span><span class="token punctuation">)</span><span class="token comment"># 2 均值滤波</span>blur <span class="token operator">=</span> cv<span class="token punctuation">.</span>blur<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 3 图像显示</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'原图'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>blur<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'均值滤波后结果'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375798284-c005a796-bb2c-4b64-90fa-4cccfc2ee003.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=226&amp;id=X31f6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=226&amp;originWidth=778&amp;originalType=binary∶=1&amp;size=225876&amp;status=done&amp;style=none&amp;width=778" alt="image.png"></p><h4 id="6-2-2-高斯滤波"><a href="#6-2-2-高斯滤波" class="headerlink" title="6.2.2 高斯滤波"></a>6.2.2 高斯滤波</h4><p>二维高斯是构建高斯滤波器的基础，其概率分布函数如下所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375765245-e97fa825-af21-4637-86b7-b7833ff0e995.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_15%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=62&amp;id=UImuU&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=123&amp;originWidth=526&amp;originalType=binary∶=1&amp;size=26760&amp;status=done&amp;style=none&amp;width=263" alt="image.png"><br>G(x,y)的分布是一个突起的帽子的形状。这里的 σ 可以看作两个值，一个是 x 方向的标准差\sigma<em>x</em>σx<em>，另一个是 y 方向的标准差\sigma_y</em>σy_。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375759114-424b7cbc-8a3c-42d5-9232-b52dd5f3ee3f.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=506&amp;id=UpXxn&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=674&amp;originWidth=790&amp;originalType=binary∶=1&amp;size=315611&amp;status=done&amp;style=none&amp;width=593" alt="image.png"><br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375781101-2fbabbde-1b74-49d2-856d-758c1ecaccc0.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_16%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=43&amp;id=gUIXl&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=43&amp;originWidth=572&amp;originalType=binary∶=1&amp;size=5346&amp;status=done&amp;style=none&amp;width=572" alt="image.png"><br>正态分布是一种钟形曲线，越接近中心，取值越大，越远离中心，取值越小。计算平滑结果时，只需要将”中心点”作为原点，其他点按照其在正态曲线上的位置，分配权重，就可以得到一个加权平均值。<br>高斯平滑在从图像中去除高斯噪声方面非常有效。<br><strong>高斯平滑的流程：</strong></p><ul><li>首先确定权重矩阵</li></ul><p>假定中心点的坐标是（0,0），那么距离它最近的 8 个点的坐标如下：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375744756-b50fc8d4-5513-417b-b2a3-2a18a805d8b2.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_18%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=225&amp;id=qXjtJ&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=450&amp;originWidth=626&amp;originalType=binary∶=1&amp;size=70097&amp;status=done&amp;style=none&amp;width=313" alt="image.png"><br>更远的点以此类推。<br>为了计算权重矩阵，需要设定 σ 的值。假定 σ=1.5，则模糊半径为 1 的权重矩阵如下：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375738852-f263a075-8271-49e8-8e06-1bd47c47ad89.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=227&amp;id=JHgni&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=453&amp;originWidth=688&amp;originalType=binary∶=1&amp;size=115199&amp;status=done&amp;style=none&amp;width=344" alt="image.png"><br>这 9 个点的权重总和等于 0.4787147，如果只计算这 9 个点的加权平均，还必须让它们的权重之和等于 1，因此上面 9 个值还要分别除以 0.4787147，得到最终的权重矩阵。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375732376-43bc0848-899c-422b-a097-7a9bfafa7192.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_19%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=226&amp;id=gdn3N&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=451&amp;originWidth=661&amp;originalType=binary∶=1&amp;size=110676&amp;status=done&amp;style=none&amp;width=331" alt="image.png"></p><ul><li>计算高斯模糊</li></ul><p>有了权重矩阵，就可以计算高斯模糊的值了。<br>假设现有 9 个像素点，灰度值（0-255）如下：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375726494-39383d76-8885-464e-8561-53b8f55ec4ef.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_18%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=225&amp;id=JUmhJ&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=450&amp;originWidth=621&amp;originalType=binary∶=1&amp;size=57689&amp;status=done&amp;style=none&amp;width=311" alt="image.png"><br>每个点乘以对应的权重值：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375718904-05fd2bea-e5e1-4b24-8bcb-3a8f7d7fd134.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=216&amp;id=hTCFS&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=431&amp;originWidth=785&amp;originalType=binary∶=1&amp;size=141896&amp;status=done&amp;style=none&amp;width=393" alt="image.png"><br>得到<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375713230-8843b8e8-9c1b-4018-998a-8c3e2a77a3cf.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_18%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=230&amp;id=w2vzq&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=460&amp;originWidth=634&amp;originalType=binary∶=1&amp;size=101092&amp;status=done&amp;style=none&amp;width=317" alt="image.png"><br>将这 9 个值加起来，就是中心点的高斯模糊的值。<br>对所有点重复这个过程，就得到了高斯模糊后的图像。如果原图是彩色图片，可以对 RGB 三个通道分别做高斯平滑。<br>API：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv2<span class="token punctuation">.</span>GaussianBlur<span class="token punctuation">(</span>src<span class="token punctuation">,</span>ksize<span class="token punctuation">,</span>sigmaX<span class="token punctuation">,</span>sigmay<span class="token punctuation">,</span>borderType<span class="token punctuation">)</span>  src<span class="token punctuation">:</span> 输入图像  ksize<span class="token punctuation">:</span>高斯卷积核的大小，注意 ： 卷积核的宽度和高度都应为奇数，且可以不同  sigmaX<span class="token punctuation">:</span> 水平方向的标准差  sigmaY<span class="token punctuation">:</span> 垂直方向的标准差，默认值为<span class="token number">0</span>，表示与sigmaX相同  borderType<span class="token punctuation">:</span>填充边界类型<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>示例</strong>：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 图像读取</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/dogGasuss.jpeg'</span><span class="token punctuation">)</span><span class="token comment"># 2 高斯滤波</span>blur <span class="token operator">=</span> cv<span class="token punctuation">.</span>GaussianBlur<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 3 图像显示</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'原图'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>blur<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'高斯滤波后结果'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375680991-576a8ace-4523-47d0-99df-3313eb0f70a8.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=225&amp;id=XCiG6&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=225&amp;originWidth=780&amp;originalType=binary∶=1&amp;size=321388&amp;status=done&amp;style=none&amp;width=780" alt="image.png"></p><h4 id="6-2-3-中值滤波"><a href="#6-2-3-中值滤波" class="headerlink" title="6.2.3 中值滤波"></a>6.2.3 中值滤波</h4><p>中值滤波是一种典型的非线性滤波技术，基本思想是用像素点邻域灰度值的中值来代替该像素点的灰度值。<br>中值滤波对椒盐噪声（salt-and-pepper noise）来说尤其有用，因为它不依赖于邻域内那些与典型值差别很大的值。<br>API：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>medianBlur<span class="token punctuation">(</span>src<span class="token punctuation">,</span> ksize<span class="token punctuation">)</span>    src：输入图像    ksize：卷积核的大小<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 图像读取</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/dogsp.jpeg'</span><span class="token punctuation">)</span><span class="token comment"># 2 中值滤波</span>blur <span class="token operator">=</span> cv<span class="token punctuation">.</span>medianBlur<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token comment"># 3 图像展示</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'原图'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>blur<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'中值滤波后结果'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617375247382-9f988e06-7bfe-4f82-9d0a-44949f150a31.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=227&amp;id=pxqAE&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=227&amp;originWidth=795&amp;originalType=binary∶=1&amp;size=210769&amp;status=done&amp;style=none&amp;width=795" alt="image.png"></p><h2 id="7-直方图"><a href="#7-直方图" class="headerlink" title="7. 直方图"></a>7. 直方图</h2><h3 id="7-1-灰度直方图"><a href="#7-1-灰度直方图" class="headerlink" title="7.1 灰度直方图"></a>7.1 灰度直方图</h3><h4 id="7-1-1-原理"><a href="#7-1-1-原理" class="headerlink" title="7.1.1 原理"></a>7.1.1 原理</h4><p>直方图是对数据进行统计的一种方法，并且将统计值组织到一系列实现定义好的 bin 当中。其中， bin 为直方图中经常用到的一个概念，可以译为 “直条” 或 “组距”，其数值是从数据中计算出的特征统计量，这些数据可以是诸如梯度、方向、色彩或任何其他特征。<br>   图像直方图（Image Histogram）是用以表示数字图像中亮度分布的直方图，标绘了图像中每个亮度值的像素个数。这种直方图中，横坐标的左侧为较暗的区域，而右侧为较亮的区域。因此一张较暗图片的直方图中的数据多集中于左侧和中间部分，而整体明亮、只有少量阴影的图像则相反。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376678723-d8fe5595-5f70-484e-8b18-c8d9a5d6e116.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=311&amp;id=bhClw&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=414&amp;originWidth=792&amp;originalType=binary∶=1&amp;size=410655&amp;status=done&amp;style=none&amp;width=594" alt="image.png"><br>注意：直方图是根据灰度图进行绘制的，而不是彩色图像。    假设有一张图像的信息（灰度值 0 - 255，已知数字的范围包含 256 个值，于是可以按一定规律将这个范围分割成子区域（也就是 bins）。如：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376693608-91a9c642-5b14-49e3-9b6e-2fd1047fdacb.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_11%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=50&amp;id=a0u5p&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=50&amp;originWidth=375&amp;originalType=binary∶=1&amp;size=4014&amp;status=done&amp;style=none&amp;width=375" alt="image.png"><br>然后再统计每一个 bin(i) 的像素数目。可以得到下图（其中 x 轴表示 bin，y 轴表示各个 bin 中的像素个数）：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376668953-01dcb858-4e87-4397-882a-28633f90e357.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=177&amp;id=Q5fPA&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=236&amp;originWidth=781&amp;originalType=binary∶=1&amp;size=151192&amp;status=done&amp;style=none&amp;width=586" alt="image.png"><br>直方图的一些<strong>术语和细节</strong>：</p><ul><li>dims：需要统计的特征数目。在上例中，dims = 1 ，因为仅仅统计了灰度值。</li><li>bins：每个特征空间子区段的数目，可译为 “直条” 或 “组距”，在上例中， bins = 16。</li><li>range：要统计特征的取值范围。在上例中，range = [0, 255]。</li></ul><p>直方图的<strong>意义</strong>：</p><ul><li>直方图是图像中像素强度分布的图形表达方式。</li><li>它统计了每一个强度值所具有的像素个数。</li><li>不同的图像的直方图可能是相同的</li></ul><h4 id="7-1-2-直方图的计算和绘制"><a href="#7-1-2-直方图的计算和绘制" class="headerlink" title="7.1.2 直方图的计算和绘制"></a>7.1.2 直方图的计算和绘制</h4><p>我们使用 OpenCV 中的方法统计直方图，并使用 matplotlib 将其绘制出来。<br>API：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>calcHist<span class="token punctuation">(</span>images<span class="token punctuation">,</span>channels<span class="token punctuation">,</span>mask<span class="token punctuation">,</span>histSize<span class="token punctuation">,</span>ranges<span class="token punctuation">[</span><span class="token punctuation">,</span>hist<span class="token punctuation">[</span><span class="token punctuation">,</span>accumulate<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  images<span class="token punctuation">:</span> 原图像。当传入函数时应该用中括号 <span class="token punctuation">[</span><span class="token punctuation">]</span> 括起来，例如：<span class="token punctuation">[</span>img<span class="token punctuation">]</span>。  channels<span class="token punctuation">:</span> 如果输入图像是灰度图，它的值就是 <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>；如果是彩色图像的话，传入的参数可以是 <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>，<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>，<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> 它们分别对应着通道 B，G，R。 　　  mask<span class="token punctuation">:</span> 掩模图像。要统计整幅图像的直方图就把它设为 <span class="token boolean">None</span>。但是如果你想统计图像某一部分的直方图的话，你就需要制作一个掩模图像，并使用它。（后边有例子） 　　  histSize<span class="token punctuation">:</span>BIN 的数目。也应该用中括号括起来，例如：<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span>。 　　  ranges<span class="token punctuation">:</span> 像素值范围，通常为 <span class="token punctuation">[</span><span class="token number">0</span>，<span class="token number">256</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>示例：<br>如下图，绘制相应的直方图</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 直接以灰度图的方式读入</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/cat.jpeg'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 2 统计灰度图</span>histr <span class="token operator">=</span> cv<span class="token punctuation">.</span>calcHist<span class="token punctuation">(</span><span class="token punctuation">[</span>img<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 3 绘制灰度图</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>plot<span class="token punctuation">(</span>histr<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376635328-6a2c57fb-e225-4813-9f30-fffd7caed102.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=273&amp;id=mrOSq&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=273&amp;originWidth=765&amp;originalType=binary∶=1&amp;size=270086&amp;status=done&amp;style=none&amp;width=765" alt="image.png"></p><h4 id="7-1-3-掩膜的应用"><a href="#7-1-3-掩膜的应用" class="headerlink" title="7.1.3 掩膜的应用"></a>7.1.3 掩膜的应用</h4><p>掩膜是用选定的图像、图形或物体，对要处理的图像进行遮挡，来控制图像 处理的区域。<br>在数字图像处理中，我们通常使用二维矩阵数组进行掩膜。掩膜是由 0 和 1 组成一个二进制图像，利用该掩膜图像要处理的图像进行掩膜，其中 1 值的区域被处理，0 值区域被屏蔽，不会处理。<br>掩膜的主要用途是：</p><ul><li>提取感兴趣区域：用预先制作的感兴趣区掩模与待处理图像进行”与“操作，得到感兴趣区图像，感兴趣区内图像值保持不变，而区外图像值都为 0。</li><li>屏蔽作用：用掩模对图像上某些区域作屏蔽，使其不参加处理或不参加处理参数的计算，或仅对屏蔽区作处理或统计。</li><li>结构特征提取：用相似性变量或图像匹配方法检测和提取图像中与掩模相似的结构特征。</li><li>特殊形状图像制作</li></ul><p>掩膜在遥感影像处理中使用较多，当提取道路或者河流，或者房屋时，通过一个掩膜矩阵来对图像进行像素过滤，然后将我们需要的地物或者标志突出显示出来。<br>我们使用 cv.calcHist（）来查找完整图像的直方图。 如果要查找图像某些区域的直方图，该怎么办？ 只需在要查找直方图的区域上创建一个白色的掩膜图像，否则创建黑色， 然后将其作为掩码 mask 传递即可。<br>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1. 直接以灰度图的方式读入</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/cat.jpeg'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 2. 创建蒙版</span>mask <span class="token operator">=</span> np<span class="token punctuation">.</span>zeros<span class="token punctuation">(</span>img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>mask<span class="token punctuation">[</span><span class="token number">400</span><span class="token punctuation">:</span><span class="token number">650</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">:</span><span class="token number">500</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">255</span><span class="token comment"># 3.掩模</span>masked_img <span class="token operator">=</span> cv<span class="token punctuation">.</span>bitwise_and<span class="token punctuation">(</span>img<span class="token punctuation">,</span> img<span class="token punctuation">,</span> mask<span class="token operator">=</span>mask<span class="token punctuation">)</span><span class="token comment"># 4. 统计掩膜后图像的灰度图</span>mask_histr <span class="token operator">=</span> cv<span class="token punctuation">.</span>calcHist<span class="token punctuation">(</span><span class="token punctuation">[</span>img<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> mask<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">256</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 5. 图像展示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>mask<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"蒙版数据"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>masked_img<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"掩膜后数据"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>plot<span class="token punctuation">(</span>mask_histr<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>grid<span class="token punctuation">(</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"灰度直方图"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376623443-6efa5f2c-24a5-4f69-9670-262f67cf5bb0.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=578&amp;id=F5jkh&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=578&amp;originWidth=760&amp;originalType=binary∶=1&amp;size=186155&amp;status=done&amp;style=none&amp;width=760" alt="image.png"></p><h3 id="7-2-直方图均衡化"><a href="#7-2-直方图均衡化" class="headerlink" title="7.2 直方图均衡化"></a>7.2 直方图均衡化</h3><h4 id="7-2-1-原理与应用"><a href="#7-2-1-原理与应用" class="headerlink" title="7.2.1 原理与应用"></a>7.2.1 原理与应用</h4><h6 id="想象一下，如果一副图像中的大多数像素点的像素值都集中在某一个小的灰度值值范围之内会怎样呢？如果一幅图像整体很亮，那所有的像素值的取值个数应该都会很高。所以应该把它的直方图做一个横向拉伸（如下图），就可以扩大图像像素值的分布范围，提高图像的对比度，这就是直方图均衡化要做的事情。"><a href="#想象一下，如果一副图像中的大多数像素点的像素值都集中在某一个小的灰度值值范围之内会怎样呢？如果一幅图像整体很亮，那所有的像素值的取值个数应该都会很高。所以应该把它的直方图做一个横向拉伸（如下图），就可以扩大图像像素值的分布范围，提高图像的对比度，这就是直方图均衡化要做的事情。" class="headerlink" title="想象一下，如果一副图像中的大多数像素点的像素值都集中在某一个小的灰度值值范围之内会怎样呢？如果一幅图像整体很亮，那所有的像素值的取值个数应该都会很高。所以应该把它的直方图做一个横向拉伸（如下图），就可以扩大图像像素值的分布范围，提高图像的对比度，这就是直方图均衡化要做的事情。"></a>想象一下，如果一副图像中的大多数像素点的像素值都集中在某一个小的灰度值值范围之内会怎样呢？如果一幅图像整体很亮，那所有的像素值的取值个数应该都会很高。所以应该把它的直方图做一个横向拉伸（如下图），就可以扩大图像像素值的分布范围，提高图像的对比度，这就是直方图均衡化要做的事情。</h6><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376615886-e5725fde-fc20-47e8-b547-ea602bbadade.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_12%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=191&amp;id=kxm24&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=191&amp;originWidth=434&amp;originalType=binary∶=1&amp;size=17304&amp;status=done&amp;style=none&amp;width=434" alt="image.png"></p><h6 id="“直方图均衡化”是把原始图像的灰度直方图从比较集中的某个灰度区间变成在更广泛灰度范围内的分布。直方图均衡化就是对图像进行非线性拉伸，重新分配图像像素值，使一定灰度范围内的像素数量大致相同。"><a href="#“直方图均衡化”是把原始图像的灰度直方图从比较集中的某个灰度区间变成在更广泛灰度范围内的分布。直方图均衡化就是对图像进行非线性拉伸，重新分配图像像素值，使一定灰度范围内的像素数量大致相同。" class="headerlink" title="“直方图均衡化”是把原始图像的灰度直方图从比较集中的某个灰度区间变成在更广泛灰度范围内的分布。直方图均衡化就是对图像进行非线性拉伸，重新分配图像像素值，使一定灰度范围内的像素数量大致相同。"></a>“直方图均衡化”是把原始图像的灰度直方图从比较集中的某个灰度区间变成在更广泛灰度范围内的分布。直方图均衡化就是对图像进行非线性拉伸，重新分配图像像素值，使一定灰度范围内的像素数量大致相同。</h6><h6 id="这种方法提高图像整体的对比度，特别是有用数据的像素值分布比较接近时，在-X-光图像中使用广泛，可以提高骨架结构的显示，另外在曝光过度或不足的图像中可以更好的突出细节。"><a href="#这种方法提高图像整体的对比度，特别是有用数据的像素值分布比较接近时，在-X-光图像中使用广泛，可以提高骨架结构的显示，另外在曝光过度或不足的图像中可以更好的突出细节。" class="headerlink" title="这种方法提高图像整体的对比度，特别是有用数据的像素值分布比较接近时，在 X 光图像中使用广泛，可以提高骨架结构的显示，另外在曝光过度或不足的图像中可以更好的突出细节。"></a>这种方法提高图像整体的对比度，特别是有用数据的像素值分布比较接近时，在 X 光图像中使用广泛，可以提高骨架结构的显示，另外在曝光过度或不足的图像中可以更好的突出细节。</h6><p>使用 opencv 进行直方图统计时，使用的是：<br>API：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>equalizeHist<span class="token punctuation">(</span>img<span class="token punctuation">)</span>img<span class="token punctuation">:</span> 灰度图像<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>返回：</p><ul><li>dst : 均衡化后的结果</li></ul><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1. 直接以灰度图的方式读入</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/cat.jpeg'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 2. 均衡化处理</span>dst <span class="token operator">=</span> cv<span class="token punctuation">.</span>equalizeHist<span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment"># 3. 结果展示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"均衡化后结果"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376577195-52b44c01-6629-4c05-962e-02d45e50232f.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=278&amp;id=PTRHR&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=278&amp;originWidth=775&amp;originalType=binary∶=1&amp;size=200145&amp;status=done&amp;style=none&amp;width=775" alt="image.png"></p><h4 id="7-2-2-自适应的直方图均衡化"><a href="#7-2-2-自适应的直方图均衡化" class="headerlink" title="7.2.2 自适应的直方图均衡化"></a>7.2.2 自适应的直方图均衡化</h4><h6 id="上述的直方图均衡，我们考虑的是图像的全局对比度。-的确在进行完直方图均衡化之后，图片背景的对比度被改变了，在猫腿这里太暗，我们丢失了很多信息，所以在许多情况下，这样做的效果并不好。如下图所示，对比下两幅图像中雕像的画面，由于太亮我们丢失了很多信息。"><a href="#上述的直方图均衡，我们考虑的是图像的全局对比度。-的确在进行完直方图均衡化之后，图片背景的对比度被改变了，在猫腿这里太暗，我们丢失了很多信息，所以在许多情况下，这样做的效果并不好。如下图所示，对比下两幅图像中雕像的画面，由于太亮我们丢失了很多信息。" class="headerlink" title="上述的直方图均衡，我们考虑的是图像的全局对比度。 的确在进行完直方图均衡化之后，图片背景的对比度被改变了，在猫腿这里太暗，我们丢失了很多信息，所以在许多情况下，这样做的效果并不好。如下图所示，对比下两幅图像中雕像的画面，由于太亮我们丢失了很多信息。"></a>上述的直方图均衡，我们考虑的是图像的全局对比度。 的确在进行完直方图均衡化之后，图片背景的对比度被改变了，在猫腿这里太暗，我们丢失了很多信息，所以在许多情况下，这样做的效果并不好。如下图所示，对比下两幅图像中雕像的画面，由于太亮我们丢失了很多信息。</h6><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376570455-7142ab38-c36c-4b4b-aeaa-d21ef094c538.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=305&amp;id=bttvo&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=305&amp;originWidth=792&amp;originalType=binary∶=1&amp;size=218015&amp;status=done&amp;style=none&amp;width=792" alt="image.png"><br>为了解决这个问题， 需要使用自适应的直方图均衡化。 此时， 整幅图像会被分成很多小块，这些小块被称为“tiles”（在 OpenCV 中 tiles 的 大小默认是 8x8），然后再对每一个小块分别进行直方图均衡化。 所以在每一个的区域中， 直方图会集中在某一个小的区域中）。如果有噪声的话，噪声会被放大。为了避免这种情况的出现要使用对比度限制。对于每个小块来说，如果直方图中的 bin 超过对比度的上限的话，就把 其中的像素点均匀分散到其他 bins 中，然后在进行直方图均衡化。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376564263-1403744a-7809-4bd2-8d72-a2192772f7e0.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=293&amp;id=PsZ4v&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=293&amp;originWidth=781&amp;originalType=binary∶=1&amp;size=85969&amp;status=done&amp;style=none&amp;width=781" alt="image.png"><br>最后，为了 去除每一个小块之间的边界，再使用双线性差值，对每一小块进行拼接。<br>API：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>createCLAHE<span class="token punctuation">(</span>clipLimit<span class="token punctuation">,</span> tileGridSize<span class="token punctuation">)</span>  clipLimit<span class="token punctuation">:</span> 对比度限制，默认是<span class="token number">40</span>  tileGridSize<span class="token punctuation">:</span> 分块的大小，默认为<span class="token number">8</span><span class="token operator">*</span><span class="token number">88</span>∗<span class="token number">8</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1. 以灰度图形式读取图像</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/cat.jpeg'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 2. 创建一个自适应均衡化的对象，并应用于图像</span>clahe <span class="token operator">=</span> cv<span class="token punctuation">.</span>createCLAHE<span class="token punctuation">(</span>clipLimit<span class="token operator">=</span><span class="token number">2.0</span><span class="token punctuation">,</span> tileGridSize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>cl1 <span class="token operator">=</span> clahe<span class="token punctuation">.</span><span class="token builtin">apply</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token comment"># 3. 图像展示</span>fig<span class="token punctuation">,</span> axes <span class="token operator">=</span> plt<span class="token punctuation">.</span>subplots<span class="token punctuation">(</span>nrows<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> ncols<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"原图"</span><span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>cl1<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span>axes<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>set_title<span class="token punctuation">(</span><span class="token string">"自适应均衡化后的结果"</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376557497-b765bbed-92ea-4484-99ef-b1a7d8434eb0.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=283&amp;id=MgDCO&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=283&amp;originWidth=786&amp;originalType=binary∶=1&amp;size=210889&amp;status=done&amp;style=none&amp;width=786" alt="image.png"></p><h2 id="8-边缘检测"><a href="#8-边缘检测" class="headerlink" title="8. 边缘检测"></a>8. 边缘检测</h2><h3 id="8-1-原理"><a href="#8-1-原理" class="headerlink" title="8.1 原理"></a>8.1 原理</h3><p>边缘检测是图像处理和计算机视觉中的基本问题，边缘检测的目的是标识数字图像中亮度变化明显的点。图像属性中的显著变化通常反映了属性的重要事件和变化。边缘的表现形式如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377190404-c2a71ea9-27b3-4799-aba5-823d631a7e59.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_23%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=533&amp;id=wl1Ga&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=533&amp;originWidth=791&amp;originalType=binary∶=1&amp;size=262569&amp;status=done&amp;style=none&amp;width=791" alt="image.png"></p><h6 id="图像边缘检测大幅度地减少了数据量，并且剔除了可以认为不相关的信息，保留了图像重要的结构属性。有许多方法用于边缘检测，它们的绝大部分可以划分为两类：基于搜索和基于零穿越。"><a href="#图像边缘检测大幅度地减少了数据量，并且剔除了可以认为不相关的信息，保留了图像重要的结构属性。有许多方法用于边缘检测，它们的绝大部分可以划分为两类：基于搜索和基于零穿越。" class="headerlink" title="图像边缘检测大幅度地减少了数据量，并且剔除了可以认为不相关的信息，保留了图像重要的结构属性。有许多方法用于边缘检测，它们的绝大部分可以划分为两类：基于搜索和基于零穿越。"></a>图像边缘检测大幅度地减少了数据量，并且剔除了可以认为不相关的信息，保留了图像重要的结构属性。有许多方法用于边缘检测，它们的绝大部分可以划分为两类：<strong>基于搜索</strong>和<strong>基于零穿越</strong>。</h6><ul><li>基于搜索：通过寻找图像一阶导数中的最大值来检测边界，然后利用计算结果估计边缘的局部方向，通常采用梯度的方向，并利用此方向找到局部梯度模的最大值，代表算法是 Sobel 算子和 Scharr 算子。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377178784-2f2a9212-74cc-4651-997d-ada83b56e57f.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=209&amp;id=TKn3a&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=279&amp;originWidth=738&amp;originalType=binary∶=1&amp;size=179409&amp;status=done&amp;style=none&amp;width=554" alt="image.png"></li><li>基于零穿越：通过寻找图像二阶导数零穿越来寻找边界，代表算法是 Laplacian 算子。<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377171251-7516ea06-812d-4a24-8a3a-21f2e5c845ff.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_18%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=335&amp;id=X22A8&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=447&amp;originWidth=620&amp;originalType=binary∶=1&amp;size=127141&amp;status=done&amp;style=none&amp;width=465" alt="image.png"></li></ul><h3 id="8-2-Sobel-检测算子"><a href="#8-2-Sobel-检测算子" class="headerlink" title="8.2 Sobel 检测算子"></a>8.2 Sobel 检测算子</h3><p>Sobel 边缘检测算法比较简单，实际应用中效率比 canny 边缘检测效率要高，但是边缘不如 Canny 检测的准确，但是很多实际应用的场合，sobel 边缘却是首选，Sobel 算子是高斯平滑与微分操作的结合体，所以其抗噪声能力很强，用途较多。尤其是效率要求较高，而对细纹理不太关心的时候。</p><h4 id="8-2-1-方法"><a href="#8-2-1-方法" class="headerlink" title="8.2.1 方法"></a>8.2.1 方法</h4><p>对于不连续的函数，一阶导数可以写作：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377164280-c85606e8-79fb-47b9-b006-e3e9b8a4c077.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_11%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=53&amp;id=Vj953&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=53&amp;originWidth=250&amp;originalType=binary∶=1&amp;size=2536&amp;status=done&amp;style=none&amp;width=250" alt="image.png"><br>或<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377156190-28c86fd2-22ed-4222-afa5-6994e3381cdd.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_11%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=54&amp;id=lBjLo&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=54&amp;originWidth=236&amp;originalType=binary∶=1&amp;size=2356&amp;status=done&amp;style=none&amp;width=236" alt="image.png"><br>所以有：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377133476-ee259707-0799-4c31-acb2-18082604c5dc.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_13%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=59&amp;id=dxbH9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=59&amp;originWidth=284&amp;originalType=binary∶=1&amp;size=3008&amp;status=done&amp;style=none&amp;width=284" alt="image.png"><br>假设要处理的图像为 I<em>I</em>，在两个方向求导:</p><ul><li><strong>水平变化</strong>: 将图像 I<em>I</em> 与奇数大小的模版进行卷积，结果为 G<em>x_Gx</em>。比如，当模板大小为 3 时, G<em>x_Gx</em>为:</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377114292-a35d555e-6463-41f4-877e-d6acb774b34f.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_11%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=100&amp;id=x1UlD&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=100&amp;originWidth=239&amp;originalType=binary∶=1&amp;size=3487&amp;status=done&amp;style=none&amp;width=239" alt="image.png"></p><ul><li><strong>垂直变化</strong>: 将图像 I<em>I</em>与奇数大小的模板进行卷积，结果为 G<em>y_Gy</em>。比如，当模板大小为 3 时, G<em>y_Gy</em>为:</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377098548-d1bd10e9-df5c-475e-9da1-17dbbe0fd576.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_11%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=94&amp;id=Zhc73&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=94&amp;originWidth=242&amp;originalType=binary∶=1&amp;size=3358&amp;status=done&amp;style=none&amp;width=242" alt="image.png"><br>在图像的每一点，结合以上两个结果求出：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377084686-0be8d4b5-eb61-4787-bff9-d2085b730b9a.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_9%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=53&amp;id=p7MYk&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=53&amp;originWidth=184&amp;originalType=binary∶=1&amp;size=2224&amp;status=done&amp;style=none&amp;width=184" alt="image.png"><br>统计极大值所在的位置，就是图像的边缘。<br><strong>注意</strong>：当内核大小为 3 时, 以上 Sobel 内核可能产生比较明显的误差， 为解决这一问题，我们使用 Scharr 函数，但该函数仅作用于大小为 3 的内核。该函数的运算与 Sobel 函数一样快，但结果却更加精确，其计算方法为:<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377073536-78f87609-40c3-4c42-8332-dc9159c41ac4.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_12%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=186&amp;id=yu7fX&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=186&amp;originWidth=258&amp;originalType=binary∶=1&amp;size=7848&amp;status=done&amp;style=none&amp;width=258" alt="image.png"></p><h4 id="8-2-2-应用"><a href="#8-2-2-应用" class="headerlink" title="8.2.2 应用"></a>8.2.2 应用</h4><p>利用 OpenCV 进行 sobel 边缘检测的 API 是：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">Sobel_x_or_y <span class="token operator">=</span> cv<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>src<span class="token punctuation">,</span> ddepth<span class="token punctuation">,</span> dx<span class="token punctuation">,</span> dy<span class="token punctuation">,</span> dst<span class="token punctuation">,</span> ksize<span class="token punctuation">,</span> scale<span class="token punctuation">,</span> delta<span class="token punctuation">,</span> borderType<span class="token punctuation">)</span>    src：传入的图像    ddepth<span class="token punctuation">:</span> 图像的深度    dx和dy<span class="token punctuation">:</span> 指求导的阶数，<span class="token number">0</span>表示这个方向上没有求导，取值为<span class="token number">0</span>、<span class="token number">1</span>。    ksize<span class="token punctuation">:</span> 是Sobel算子的大小，即卷积核的大小，必须为奇数<span class="token number">1</span>、<span class="token number">3</span>、<span class="token number">5</span>、<span class="token number">7</span>，默认为<span class="token number">3</span>。    注意：如果ksize<span class="token operator">=</span><span class="token operator">-</span><span class="token number">1</span>，就演变成为3x3的Scharr算子。    scale：缩放导数的比例常数，默认情况为没有伸缩系数。    borderType：图像边界的模式，默认值为cv2<span class="token punctuation">.</span>BORDER_DEFAULT。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>Sobel 函数求完导数后会有负值，还有会大于 255 的值。而原图像是 uint8，即 8 位无符号数，所以 Sobel 建立的图像位数不够，会有截断。因此要使用 16 位有符号的数据类型，即 cv2.CV_16S。处理完图像后，再使用 cv2.convertScaleAbs()函数将其转回原来的 uint8 格式，否则图像无法显示。<br>Sobel 算子是在两个方向计算的，最后还需要用 cv2.addWeighted( )函数将其组合起来</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">Scale_abs <span class="token operator">=</span> cv<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># 格式转换函数</span>result <span class="token operator">=</span> cv<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>src1<span class="token punctuation">,</span> alpha<span class="token punctuation">,</span> src2<span class="token punctuation">,</span> beta<span class="token punctuation">)</span> <span class="token comment"># 图像混合</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/horse.jpg'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 2 计算Sobel卷积结果</span>x <span class="token operator">=</span> cv<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_16S<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>y <span class="token operator">=</span> cv<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_16S<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># 3 将数据进行转换</span>Scale_absX <span class="token operator">=</span> cv<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>x<span class="token punctuation">)</span>  <span class="token comment"># convert 转换  scale 缩放</span>Scale_absY <span class="token operator">=</span> cv<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token comment"># 4 结果合成</span>result <span class="token operator">=</span> cv<span class="token punctuation">.</span>addWeighted<span class="token punctuation">(</span>Scale_absX<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> Scale_absY<span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 5 图像显示</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'原图'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>result<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Sobel滤波后结果'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377034799-83b2e7a5-ef7a-4439-8094-ef9db3e81348.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=255&amp;id=jJY7g&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=255&amp;originWidth=788&amp;originalType=binary∶=1&amp;size=155892&amp;status=done&amp;style=none&amp;width=788" alt="image.png"><br>将上述代码中计算 sobel 算子的部分中将 ksize 设为-1，就是利用 Scharr 进行边缘检测。</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">x <span class="token operator">=</span> cv<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_16S<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> ksize <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>y <span class="token operator">=</span> cv<span class="token punctuation">.</span>Sobel<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_16S<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> ksize <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377022361-4ec9ad73-a7a5-4ab2-a779-7c668b5596bf.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=250&amp;id=sBZDB&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=250&amp;originWidth=784&amp;originalType=binary∶=1&amp;size=175827&amp;status=done&amp;style=none&amp;width=784" alt="image.png"></p><h3 id="8-3-Laplacian-算子"><a href="#8-3-Laplacian-算子" class="headerlink" title="8.3 Laplacian 算子"></a>8.3 Laplacian 算子</h3><p>Laplacian 是利用二阶导数来检测边缘 。 因为图像是 “<em>2 维</em>”, 我们需要在两个方向求导，如下式所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377016331-be2787d2-aa58-49ce-9dc0-2c99a91c9b94.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_9%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=75&amp;id=QNtZX&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=75&amp;originWidth=210&amp;originalType=binary∶=1&amp;size=4037&amp;status=done&amp;style=none&amp;width=210" alt="image.png"><br>那不连续函数的二阶导数是：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376999678-19e56a4d-05f8-4c5b-bf8b-86803e956508.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_15%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=52&amp;id=twVw5&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=52&amp;originWidth=510&amp;originalType=binary∶=1&amp;size=4335&amp;status=done&amp;style=none&amp;width=510" alt="image.png"><br>那使用的卷积核是：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376988035-b58adb27-37cd-447e-a4bd-fa7ffacc8a51.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_9%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=78&amp;id=EaF2j&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=104&amp;originWidth=208&amp;originalType=binary∶=1&amp;size=3332&amp;status=done&amp;style=none&amp;width=156" alt="image.png"><br>API：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>Laplacian<span class="token punctuation">(</span>src<span class="token punctuation">,</span> ddepth<span class="token punctuation">[</span><span class="token punctuation">,</span> dst<span class="token punctuation">[</span><span class="token punctuation">,</span> ksize<span class="token punctuation">[</span><span class="token punctuation">,</span> scale<span class="token punctuation">[</span><span class="token punctuation">,</span> delta<span class="token punctuation">[</span><span class="token punctuation">,</span> borderType<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>  Src<span class="token punctuation">:</span> 需要处理的图像  Ddepth<span class="token punctuation">:</span> 图像的深度，<span class="token operator">-</span><span class="token number">1</span>表示采用的是原图像相同的深度，目标图像的深度必须大于等于原图像的深度  ksize：算子的大小，即卷积核的大小，必须为<span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">7</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/horse.jpg'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 2 laplacian转换</span>result <span class="token operator">=</span> cv<span class="token punctuation">.</span>Laplacian<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>CV_16S<span class="token punctuation">)</span>Scale_abs <span class="token operator">=</span> cv<span class="token punctuation">.</span>convertScaleAbs<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment"># 3 图像展示</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'原图'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>Scale_abs<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Laplacian检测后结果'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376952463-e93b42ef-dbe2-47aa-92c9-3bc78bcc64e9.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=259&amp;id=lP7mY&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=259&amp;originWidth=787&amp;originalType=binary∶=1&amp;size=146832&amp;status=done&amp;style=none&amp;width=787" alt="image.png"></p><h3 id="8-4-Canny-边缘检测"><a href="#8-4-Canny-边缘检测" class="headerlink" title="8.4 Canny 边缘检测"></a>8.4 Canny 边缘检测</h3><p>Canny 边缘检测算法是一种非常流行的边缘检测算法，是 John F. Canny 于 1986 年提出的，被认为是最优的边缘检测算法。</p><h4 id="8-4-1-原理"><a href="#8-4-1-原理" class="headerlink" title="8.4.1 原理"></a>8.4.1 原理</h4><p>Canny 边缘检测算法是由 4 步构成，分别介绍如下：</p><ul><li>第一步：噪声去除<br>由于边缘检测很容易受到噪声的影响，所以首先使用$5*5$高斯滤波器去除噪声，在图像平滑那一章节中已经介绍过。</li><li>第二步：计算图像梯度</li></ul><h6 id="对平滑后的图像使用-Sobel-算子计算水平方向和竖直方向的一阶导数（Gx-和-Gy）。根据得到的这两幅梯度图（Gx-和-Gy）找到边界的梯度和方向，公式如下"><a href="#对平滑后的图像使用-Sobel-算子计算水平方向和竖直方向的一阶导数（Gx-和-Gy）。根据得到的这两幅梯度图（Gx-和-Gy）找到边界的梯度和方向，公式如下" class="headerlink" title="对平滑后的图像使用 Sobel 算子计算水平方向和竖直方向的一阶导数（Gx 和 Gy）。根据得到的这两幅梯度图（Gx 和 Gy）找到边界的梯度和方向，公式如下:"></a>对平滑后的图像使用 Sobel 算子计算水平方向和竖直方向的一阶导数（Gx 和 Gy）。根据得到的这两幅梯度图（Gx 和 Gy）找到边界的梯度和方向，公式如下:</h6><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376937104-e4869760-be44-41f0-aac1-fd6550fd872a.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_14%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=83&amp;id=lgSQ9&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=111&amp;originWidth=315&amp;originalType=binary∶=1&amp;size=8382&amp;status=done&amp;style=none&amp;width=236" alt="image.png"></p><h6 id="如果某个像素点是边缘，则其梯度方向总是垂直与边缘垂直。梯度方向被归为四类：垂直，水平，和两个对角线方向。"><a href="#如果某个像素点是边缘，则其梯度方向总是垂直与边缘垂直。梯度方向被归为四类：垂直，水平，和两个对角线方向。" class="headerlink" title="如果某个像素点是边缘，则其梯度方向总是垂直与边缘垂直。梯度方向被归为四类：垂直，水平，和两个对角线方向。"></a>如果某个像素点是边缘，则其梯度方向总是垂直与边缘垂直。梯度方向被归为四类：垂直，水平，和两个对角线方向。</h6><ul><li>第三步：非极大值抑制</li></ul><h6 id="在获得梯度的方向和大小之后，对整幅图像进行扫描，去除那些非边界上的点。对每一个像素进行检查，看这个点的梯度是不是周围具有相同梯度方向的点中最大的。如下图所示："><a href="#在获得梯度的方向和大小之后，对整幅图像进行扫描，去除那些非边界上的点。对每一个像素进行检查，看这个点的梯度是不是周围具有相同梯度方向的点中最大的。如下图所示：" class="headerlink" title="在获得梯度的方向和大小之后，对整幅图像进行扫描，去除那些非边界上的点。对每一个像素进行检查，看这个点的梯度是不是周围具有相同梯度方向的点中最大的。如下图所示："></a>在获得梯度的方向和大小之后，对整幅图像进行扫描，去除那些非边界上的点。对每一个像素进行检查，看这个点的梯度是不是周围具有相同梯度方向的点中最大的。如下图所示：</h6><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376919582-7251825c-727f-477b-b029-eeed0cad0cb1.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_18%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=180&amp;id=KybS7&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=240&amp;originWidth=627&amp;originalType=binary∶=1&amp;size=60198&amp;status=done&amp;style=none&amp;width=470" alt="image.png"></p><h6 id="A-点位于图像的边缘，在其梯度变化方向，选择像素点-B-和-C，用来检验-A-点的梯度是否为极大值，若为极大值，则进行保留，否则-A-点被抑制，最终的结果是具有“细边”的二进制图像。"><a href="#A-点位于图像的边缘，在其梯度变化方向，选择像素点-B-和-C，用来检验-A-点的梯度是否为极大值，若为极大值，则进行保留，否则-A-点被抑制，最终的结果是具有“细边”的二进制图像。" class="headerlink" title="A 点位于图像的边缘，在其梯度变化方向，选择像素点 B 和 C，用来检验 A 点的梯度是否为极大值，若为极大值，则进行保留，否则 A 点被抑制，最终的结果是具有“细边”的二进制图像。"></a>A 点位于图像的边缘，在其梯度变化方向，选择像素点 B 和 C，用来检验 A 点的梯度是否为极大值，若为极大值，则进行保留，否则 A 点被抑制，最终的结果是具有“细边”的二进制图像。</h6><ul><li>第四步：滞后阈值</li></ul><h6 id="现在要确定真正的边界。-我们设置两个阈值：-minVal-和-maxVal。-当图像的灰度梯度高于-maxVal-时被认为是真的边界，-低于-minVal-的边界会被抛弃。如果介于两者之间的话，就要看这个点是否与某个被确定为真正的边界点相连，如果是就认为它也是边界点，如果不是就抛弃。如下图："><a href="#现在要确定真正的边界。-我们设置两个阈值：-minVal-和-maxVal。-当图像的灰度梯度高于-maxVal-时被认为是真的边界，-低于-minVal-的边界会被抛弃。如果介于两者之间的话，就要看这个点是否与某个被确定为真正的边界点相连，如果是就认为它也是边界点，如果不是就抛弃。如下图：" class="headerlink" title="现在要确定真正的边界。 我们设置两个阈值： minVal 和 maxVal。 当图像的灰度梯度高于 maxVal 时被认为是真的边界， 低于 minVal 的边界会被抛弃。如果介于两者之间的话，就要看这个点是否与某个被确定为真正的边界点相连，如果是就认为它也是边界点，如果不是就抛弃。如下图："></a>现在要确定真正的边界。 我们设置两个阈值： minVal 和 maxVal。 当图像的灰度梯度高于 maxVal 时被认为是真的边界， 低于 minVal 的边界会被抛弃。如果介于两者之间的话，就要看这个点是否与某个被确定为真正的边界点相连，如果是就认为它也是边界点，如果不是就抛弃。如下图：</h6><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376911750-bf045179-b69d-4414-ad16-ec8c3e9d1940.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_17%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=279&amp;id=YiEuw&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=372&amp;originWidth=606&amp;originalType=binary∶=1&amp;size=52880&amp;status=done&amp;style=none&amp;width=455" alt="image.png"><br>如上图所示，A 高于阈值 maxVal 所以是真正的边界点，C 虽然低于 maxVal 但高于 minVal 并且与 A 相连，所以也被认为是真正的边界点。而 B 就会被抛弃，因为低于 maxVal 而且不与真正的边界点相连。所以选择合适的 maxVal 和 minVal 对于能否得到好的结果非常重要。</p><h4 id="8-4-2-应用"><a href="#8-4-2-应用" class="headerlink" title="8.4.2 应用"></a>8.4.2 应用</h4><p>在 OpenCV 中要实现 Canny 检测使用的 API:</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">canny <span class="token operator">=</span> cv<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>image<span class="token punctuation">,</span> threshold1<span class="token punctuation">,</span> threshold2<span class="token punctuation">)</span>  image<span class="token punctuation">:</span>灰度图  threshold1<span class="token punctuation">:</span> minval，较小的阈值将间断的边缘连接起来  threshold2<span class="token punctuation">:</span> maxval，较大的阈值检测图像中明显的边缘<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 图像读取</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/horse.jpg'</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 2 Canny边缘检测</span>lowThreshold <span class="token operator">=</span> <span class="token number">0</span>max_lowThreshold <span class="token operator">=</span> <span class="token number">100</span>canny <span class="token operator">=</span> cv<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>img<span class="token punctuation">,</span> lowThreshold<span class="token punctuation">,</span> max_lowThreshold<span class="token punctuation">)</span><span class="token comment"># 3 图像展示</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">121</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'原图'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>subplot<span class="token punctuation">(</span><span class="token number">122</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>canny<span class="token punctuation">,</span> cmap<span class="token operator">=</span>plt<span class="token punctuation">.</span>cm<span class="token punctuation">.</span>gray<span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'Canny检测后结果'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617376885925-6f7de64d-2e84-49d4-9b47-bac864590aff.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=252&amp;id=sfqkI&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=252&amp;originWidth=782&amp;originalType=binary∶=1&amp;size=130797&amp;status=done&amp;style=none&amp;width=782" alt="image.png"></p><h2 id="9-模版匹配和霍夫变换"><a href="#9-模版匹配和霍夫变换" class="headerlink" title="9. 模版匹配和霍夫变换"></a>9. 模版匹配和霍夫变换</h2><h3 id="9-1-模板匹配"><a href="#9-1-模板匹配" class="headerlink" title="9.1 模板匹配"></a>9.1 模板匹配</h3><h4 id="9-1-1-原理"><a href="#9-1-1-原理" class="headerlink" title="9.1.1 原理"></a>9.1.1 原理</h4><p>所谓的模板匹配，就是在给定的图片中查找和模板最相似的区域，该算法的输入包括模板和图片，整个任务的思路就是按照滑窗的思路不断的移动模板图片，计算其与图像中对应区域的匹配度，最终将匹配度最高的区域选择为最终的结果。<br><strong>实现流程：</strong></p><ul><li>准备两幅图像： 1.原图像(I)：在这幅图中，找到与模板相匹配的区域 2.模板(T)：与原图像进行比对的图像块<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377677931-6e3c17cf-26c5-4156-a6b0-b819e68aa492.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_12%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=149&amp;id=IFkQw&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=149&amp;originWidth=422&amp;originalType=binary∶=1&amp;size=150362&amp;status=done&amp;style=none&amp;width=422" alt="image.png"></li><li>滑动模板图像和原图像进行比对：</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377673251-4f53ff68-42ab-4e1b-a070-ed608a3e7476.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_14%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=266&amp;id=pfHK1&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=266&amp;originWidth=316&amp;originalType=binary∶=1&amp;size=200155&amp;status=done&amp;style=none&amp;width=316" alt="image.png"><br>将模板块每次移动一个像素 (从左往右，从上往下)，在每一个位置，都计算与模板图像的相似程度。</p><ul><li>对于每一个位置将计算的相似结果保存在结果矩阵（R）中。如果输入图像的大小（WxH）且模板图像的大小(wxh)，则输出矩阵 R 的大小为（W-w + 1,H-h + 1）将 R 显示为图像，如下图所示：</li></ul><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377667733-aa5a1cb9-e1f2-4b3d-8db6-a86c2a4c952c.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_14%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=262&amp;id=ciQtD&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=262&amp;originWidth=317&amp;originalType=binary∶=1&amp;size=89714&amp;status=done&amp;style=none&amp;width=317" alt="image.png"></p><ul><li>获得上述图像后，查找最大值所在的位置，那么该位置对应的区域就被认为是最匹配的。对应的区域就是以该点为顶点，长宽和模板图像一样大小的矩阵。</li></ul><h4 id="9-1-2-实现"><a href="#9-1-2-实现" class="headerlink" title="9.1.2 实现"></a>9.1.2 实现</h4><p>我们使用 OpenCV 中的方法实现模板匹配。<br>API：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">res <span class="token operator">=</span> cv<span class="token punctuation">.</span>matchTemplate<span class="token punctuation">(</span>img<span class="token punctuation">,</span>template<span class="token punctuation">,</span>method<span class="token punctuation">)</span>  img<span class="token punctuation">:</span> 要进行模板匹配的图像  Template ：模板  method：实现模板匹配的算法，主要有：  a<span class="token punctuation">.</span> 平方差匹配<span class="token punctuation">(</span>CV_TM_SQDIFF<span class="token punctuation">)</span>：利用模板与图像之间的平方差进行匹配，最好的匹配是<span class="token number">0</span>，匹配越差，匹配的值越大。  b<span class="token punctuation">.</span> 相关匹配<span class="token punctuation">(</span>CV_TM_CCORR<span class="token punctuation">)</span>：利用模板与图像间的乘法进行匹配，数值越大表示匹配程度较高，越小表示匹配效果差。  c<span class="token punctuation">.</span> 利用相关系数匹配<span class="token punctuation">(</span>CV_TM_CCOEFF<span class="token punctuation">)</span>：利用模板与图像间的相关系数匹配，<span class="token number">1</span>表示完美的匹配，<span class="token operator">-</span><span class="token number">1</span>表示最差的匹配。  完成匹配后，使用cv<span class="token punctuation">.</span>minMaxLoc<span class="token punctuation">(</span><span class="token punctuation">)</span>方法查找最大值所在的位置即可。如果使用平方差作为比较方法，则最小值位置是最佳匹配位置。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>示例：</strong><br>在该案例中，载入要搜索的图像和模板，图像如下所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377637806-0d0ce97a-04d1-4012-b564-d677da0f4e9d.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_16%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=318&amp;id=NoR4I&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=318&amp;originWidth=551&amp;originalType=binary∶=1&amp;size=463751&amp;status=done&amp;style=none&amp;width=551" alt="image.png"><br>模板如下所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377632803-a9d606a9-0035-4d08-8ee9-b0dc630300eb.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_9%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=89&amp;id=V6FHU&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=89&amp;originWidth=75&amp;originalType=binary∶=1&amp;size=14680&amp;status=done&amp;style=none&amp;width=75" alt="image.png"><br>通过 matchTemplate 实现模板匹配，使用 minMaxLoc 定位最匹配的区域，并用矩形标注最匹配的区域。</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">from</span> matplotlib <span class="token keyword">import</span> pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 图像和模板读取</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/wulin2.jpeg'</span><span class="token punctuation">)</span>template <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/wulin.jpeg'</span><span class="token punctuation">)</span>h<span class="token punctuation">,</span> w<span class="token punctuation">,</span> l <span class="token operator">=</span> template<span class="token punctuation">.</span>shape<span class="token comment"># 2 模板匹配</span><span class="token comment"># 2.1 模板匹配</span>res <span class="token operator">=</span> cv<span class="token punctuation">.</span>matchTemplate<span class="token punctuation">(</span>img<span class="token punctuation">,</span> template<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>TM_CCORR<span class="token punctuation">)</span><span class="token comment"># 2.2 返回图像中最匹配的位置，确定左上角的坐标，并将匹配位置绘制在图像上</span>min_val<span class="token punctuation">,</span> max_val<span class="token punctuation">,</span> min_loc<span class="token punctuation">,</span> max_loc <span class="token operator">=</span> cv<span class="token punctuation">.</span>minMaxLoc<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token comment"># 使用平方差时最小值为最佳匹配位置</span><span class="token comment"># top_left = min_loc</span>top_left <span class="token operator">=</span> max_locbottom_right <span class="token operator">=</span> <span class="token punctuation">(</span>top_left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> w<span class="token punctuation">,</span> top_left<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> h<span class="token punctuation">)</span>cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> top_left<span class="token punctuation">,</span> bottom_right<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token comment"># 3 图像显示</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'匹配结果'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377621291-350eab8c-3516-45a7-8001-733004b201e4.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_19%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=392&amp;id=FC7rY&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=392&amp;originWidth=684&amp;originalType=binary∶=1&amp;size=702711&amp;status=done&amp;style=none&amp;width=684" alt="image.png"><br>拓展：模板匹配不适用于尺度变换，视角变换后的图像，这时我们就要使用关键点匹配算法，比较经典的关键点检测算法包括 SIFT 和 SURF 等，主要的思路是首先通过关键点检测算法获取模板和测试图片中的关键点；然后使用关键点匹配算法处理即可，这些关键点可以很好的处理尺度变化、视角变换、旋转变化、光照变化等，具有很好的不变性。</p><h3 id="9-2-霍夫变换"><a href="#9-2-霍夫变换" class="headerlink" title="9.2 霍夫变换"></a>9.2 霍夫变换</h3><p>霍夫变换常用来提取图像中的直线和圆等几何形状，如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377611899-bfd17796-4839-4f21-82de-f28bab27aff3.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=250&amp;id=i61Qh&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=250&amp;originWidth=785&amp;originalType=binary∶=1&amp;size=49710&amp;status=done&amp;style=none&amp;width=785" alt="image.png"></p><h4 id="9-2-1-霍夫线检测"><a href="#9-2-1-霍夫线检测" class="headerlink" title="9.2.1 霍夫线检测"></a>9.2.1 霍夫线检测</h4><p>在 OpenCV 中做霍夫线检测是使用的 API 是：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>HoughLines<span class="token punctuation">(</span>img<span class="token punctuation">,</span> rho<span class="token punctuation">,</span> theta<span class="token punctuation">,</span> threshold<span class="token punctuation">)</span>  img<span class="token punctuation">:</span> 检测的图像，要求是二值化的图像，所以在调用霍夫变换之前首先要进行二值化，或者进行Canny边缘检测  rho、theta<span class="token punctuation">:</span> \rhoρ 和\thetaθ的精确度  threshold<span class="token punctuation">:</span> 阈值，只有累加器中的值高于该阈值时才被认为是直线。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>霍夫线检测的整个流程如下图所示，这是在 stackflow 上一个关于霍夫线变换的解释：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377535308-7771b36c-d3dc-4cfc-94d4-18de2b68287d.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=512&amp;id=lOPvr&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=683&amp;originWidth=733&amp;originalType=binary∶=1&amp;size=518484&amp;status=done&amp;style=none&amp;width=550" alt="image.png"><br><strong>示例：</strong><br>检测下述图像中的直线：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377528808-ae67a32f-4daf-47e9-ac08-fbadc061a003.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_15%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=194&amp;id=cDWUF&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=388&amp;originWidth=512&amp;originalType=binary∶=1&amp;size=101272&amp;status=done&amp;style=none&amp;width=256" alt="image.png"></p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> random<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1.加载图片，转为二值图</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">'./image/rili.jpg'</span><span class="token punctuation">)</span>gray <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>edges <span class="token operator">=</span> cv<span class="token punctuation">.</span>Canny<span class="token punctuation">(</span>gray<span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token comment"># 2.霍夫直线变换</span>lines <span class="token operator">=</span> cv<span class="token punctuation">.</span>HoughLines<span class="token punctuation">(</span>edges<span class="token punctuation">,</span> <span class="token number">0.8</span><span class="token punctuation">,</span> np<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token comment"># 3.将检测的线绘制在图像上（注意是极坐标噢）</span><span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>    rho<span class="token punctuation">,</span> theta <span class="token operator">=</span> line<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    a <span class="token operator">=</span> np<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>theta<span class="token punctuation">)</span>    b <span class="token operator">=</span> np<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>theta<span class="token punctuation">)</span>    x0 <span class="token operator">=</span> a <span class="token operator">*</span> rho    y0 <span class="token operator">=</span> b <span class="token operator">*</span> rho    x1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x0 <span class="token operator">+</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>    y1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>y0 <span class="token operator">+</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>    x2 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>x0 <span class="token operator">-</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token operator">-</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span>    y2 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>y0 <span class="token operator">-</span> <span class="token number">1000</span> <span class="token operator">*</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span>    cv<span class="token punctuation">.</span>line<span class="token punctuation">(</span>img<span class="token punctuation">,</span> <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 4. 图像显示</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>img<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'霍夫变换线检测'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377847178-1e513072-e10b-4e7a-abb1-11fbd68ed1cd.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=267&amp;id=NZ0Bk&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=533&amp;originWidth=707&amp;originalType=binary∶=1&amp;size=238882&amp;status=done&amp;style=none&amp;width=354" alt="image.png"></p><h4 id="9-2-2-霍夫圆检测-了解"><a href="#9-2-2-霍夫圆检测-了解" class="headerlink" title="9.2.2 霍夫圆检测[了解]"></a>9.2.2 霍夫圆检测[了解]</h4><ol><li>原理圆的表示式是：</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377489138-a6315a35-5c2e-47db-8a3e-6cc76a530795.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_10%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=47&amp;id=Yzy9W&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=47&amp;originWidth=231&amp;originalType=binary∶=1&amp;size=2283&amp;status=done&amp;style=none&amp;width=231" alt="image.png"><br>其中 a<em>a</em>和 b<em>b</em>表示圆心坐标，r<em>r</em>表示圆半径，因此标准的霍夫圆检测就是在这三个参数组成的三维空间累加器上进行圆形检测，此时效率就会很低，所以 OpenCV 中使用<strong>霍夫梯度法</strong>进行圆形的检测。霍夫梯度法将霍夫圆检测范围两个阶段，第一阶段检测圆心，第二阶段利用圆心推导出圆半径。</p><ul><li>圆心检测的原理：圆心是圆周法线的交汇处，设置一个阈值，在某点的相交的直线的条数大于这个阈值就认为该交汇点为圆心。</li><li>圆半径确定原理：圆心到圆周上的距离（半径）是相同的，确定一个阈值，只要相同距离的数量大于该阈值，就认为该距离是该圆心的半径。</li></ul><p>原则上霍夫变换可以检测任何形状，但复杂的形状需要的参数就多，霍夫空间的维数就多，因此在程序实现上所需的内存空间以及运行效率上都不利于把标准霍夫变换应用于实际复杂图形的检测中。霍夫梯度法是霍夫变换的改进，它的目的是减小霍夫空间的维度，提高效率。<br>API 在 OpenCV 中检测图像中的圆环使用的是 API 是：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">circles <span class="token operator">=</span> cv<span class="token punctuation">.</span>HoughCircles<span class="token punctuation">(</span>image<span class="token punctuation">,</span> method<span class="token punctuation">,</span> dp<span class="token punctuation">,</span> minDist<span class="token punctuation">,</span> param1<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> param2<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> minRadius<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>maxRadius<span class="token operator">=</span><span class="token number">0</span> <span class="token punctuation">)</span>  image：输入图像，应输入灰度图像  method：使用霍夫变换圆检测的算法，它的参数是CV_HOUGH_GRADIENT  dp：霍夫空间的分辨率，dp<span class="token operator">=</span><span class="token number">1</span>时表示霍夫空间与输入图像空间的大小一致，dp<span class="token operator">=</span><span class="token number">2</span>时霍夫空间是输入图像空间的一半，以此类推  minDist为圆心之间的最小距离，如果检测到的两个圆心之间距离小于该值，则认为它们是同一个圆心  param1：边缘检测时使用Canny算子的高阈值，低阈值是高阈值的一半。  param2：检测圆心和确定半径时所共有的阈值  minRadius和maxRadius为所检测到的圆半径的最小值和最大值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>返回：</p><ul><li>circles：输出圆向量，包括三个浮点型的元素——圆心横坐标，圆心纵坐标和圆半径</li></ul><p>由于霍夫圆检测对噪声比较敏感，所以首先对图像进行中值滤波。</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token comment"># 1 读取图像，并转换为灰度图</span>planets <span class="token operator">=</span> cv<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">"./image/star.jpeg"</span><span class="token punctuation">)</span>gay_img <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>planets<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGRA2GRAY<span class="token punctuation">)</span><span class="token comment"># 2 进行中值模糊，去噪点</span>img <span class="token operator">=</span> cv<span class="token punctuation">.</span>medianBlur<span class="token punctuation">(</span>gay_img<span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">)</span><span class="token comment"># 3 霍夫圆检测</span>circles <span class="token operator">=</span> cv<span class="token punctuation">.</span>HoughCircles<span class="token punctuation">(</span>img<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>HOUGH_GRADIENT<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> param1<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">,</span> param2<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> minRadius<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> maxRadius<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token comment"># 4 将检测结果绘制在图像上</span><span class="token keyword">for</span> i <span class="token keyword">in</span> circles<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># 遍历矩阵每一行的数据</span>    <span class="token comment"># 绘制圆形</span>    cv<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>planets<span class="token punctuation">,</span> <span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token comment"># 绘制圆心</span>    cv<span class="token punctuation">.</span>circle<span class="token punctuation">(</span>planets<span class="token punctuation">,</span> <span class="token punctuation">(</span>i<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token comment"># 5 图像显示</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dpi<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span>planets<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>title<span class="token punctuation">(</span><span class="token string">'霍夫变换圆检测'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617377436506-2c5f0412-f673-47ec-9648-ba6b65b2383c.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_21%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=363&amp;id=CwBdw&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=725&amp;originWidth=726&amp;originalType=binary∶=1&amp;size=534221&amp;status=done&amp;style=none&amp;width=363" alt="image.png"></p><h2 id="10-视频操作"><a href="#10-视频操作" class="headerlink" title="10. 视频操作"></a>10. 视频操作</h2><h3 id="10-1-视频读写"><a href="#10-1-视频读写" class="headerlink" title="10.1 视频读写"></a>10.1 视频读写</h3><h4 id="10-1-1-从文件中读取视频并播放"><a href="#10-1-1-从文件中读取视频并播放" class="headerlink" title="10.1.1 从文件中读取视频并播放"></a>10.1.1 从文件中读取视频并播放</h4><p>在 OpenCV 中我们要获取一个视频，需要创建一个 VideoCapture 对象，指定你要读取的视频文件：</p><ol><li>创建读取视频的对象</li></ol><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cap <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span>filepath<span class="token punctuation">)</span>    filepath<span class="token punctuation">:</span> 视频文件路径<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>视频的属性信息 2.1. 获取视频的某些属性，</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">retval <span class="token operator">=</span> cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span>propId<span class="token punctuation">)</span>  propId<span class="token punctuation">:</span> 从<span class="token number">0</span>到<span class="token number">18</span>的数字，每个数字表示视频的属性<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>常用属性有：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617378066912-406b06cc-fbac-4afd-8bdb-ef88de756e78.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_20%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=323&amp;id=knXba&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=323&amp;originWidth=706&amp;originalType=binary∶=1&amp;size=160539&amp;status=done&amp;style=none&amp;width=706" alt="image.png"><br>修改视频的属性信息</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cap<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span>propId，value<span class="token punctuation">)</span>  proid<span class="token punctuation">:</span> 属性的索引，与上面的表格相对应  value<span class="token punctuation">:</span> 修改后的属性值<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>判断图像是否读取成功</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">isornot &#x3D; cap.isOpened()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><ul><li>若读取成功则返回 true，否则返回 False</li></ul><p>获取视频的一帧图像</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>  ret<span class="token punctuation">:</span> 若获取成功返回<span class="token boolean">True</span>，获取失败，返回<span class="token boolean">False</span>  Frame<span class="token punctuation">:</span> 获取到的某一帧的图像<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><ol><li>调用 cv.imshow()显示图像，在显示图像时使用 cv.waitkey()设置适当的持续时间，如果太低视频会播放的非常快，如果太高就会播放的非常慢，通常情况下我们设置 25ms 就可以了。</li><li>最后，调用 cap.realease()将视频释放掉</li></ol><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment"># 1.获取视频对象</span>cap <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">'./image/DOG.wmv'</span><span class="token punctuation">)</span><span class="token comment"># 2.判断是否读取成功</span><span class="token keyword">while</span> <span class="token punctuation">(</span>cap<span class="token punctuation">.</span>isOpened<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 3.获取每一帧图像</span>    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 4. 获取成功显示图像</span>    <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'frame'</span><span class="token punctuation">,</span> frame<span class="token punctuation">)</span>    <span class="token comment"># 5.每一帧间隔为25ms</span>    <span class="token keyword">if</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token comment"># 6.释放视频对象</span>cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>destoryAllwindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617378222014-ef2ddd85-a472-4d8f-bac1-ed9bfed8aff7.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_13%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=520&amp;id=YWr3J&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=520&amp;originWidth=461&amp;originalType=binary∶=1&amp;size=225182&amp;status=done&amp;style=none&amp;width=461" alt="image.png"><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617378212777-e0aeb963-b707-44bc-adae-137d0573dc2e.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_13%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=520&amp;id=ufbnT&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=520&amp;originWidth=461&amp;originalType=binary∶=1&amp;size=240454&amp;status=done&amp;style=none&amp;width=461" alt="image.png"></p><h4 id="10-1-2-保存视频"><a href="#10-1-2-保存视频" class="headerlink" title="10.1.2 保存视频"></a>10.1.2 保存视频</h4><p>在 OpenCV 中我们保存视频使用的是 VedioWriter 对象，在其中指定输出文件的名称，如下所示：</p><ol><li>创建视频写入的对象</li></ol><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">out <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span>filename<span class="token punctuation">,</span>fourcc<span class="token punctuation">,</span> fps<span class="token punctuation">,</span> frameSize<span class="token punctuation">)</span>    filename：视频保存的位置    fourcc：指定视频编解码器的<span class="token number">4</span>字节代码    fps：帧率    frameSize：帧大小<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>设置视频的编解码器，如下所示，</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">retval <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span> c1<span class="token punctuation">,</span> c2<span class="token punctuation">,</span> c3<span class="token punctuation">,</span> c4 <span class="token punctuation">)</span>  c1<span class="token punctuation">,</span>c2<span class="token punctuation">,</span>c3<span class="token punctuation">,</span>c4<span class="token punctuation">:</span> 是视频编解码器的<span class="token number">4</span>字节代码，在fourcc<span class="token punctuation">.</span>org中找到可用代码列表，与平台紧密相关，常用的有：  在Windows中：DIVX（<span class="token punctuation">.</span>avi）  在OS中：MJPG（<span class="token punctuation">.</span>mp4），DIVX（<span class="token punctuation">.</span>avi），X264（<span class="token punctuation">.</span>mkv）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><ul><li>利用 cap.read()获取视频中的每一帧图像，并使用 out.write()将某一帧图像写入视频中。</li><li>使用 cap.release()和 out.release()释放资源。</li></ul><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token comment"># 1. 读取视频</span>cap <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">"./image/DOG.wmv"</span><span class="token punctuation">)</span><span class="token comment"># 2. 获取图像的属性（宽和高，）,并将其转换为整数</span>frame_width <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>frame_height <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>cap<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># 3. 创建保存视频的对象，设置编码格式，帧率，图像的宽高等</span>out <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoWriter<span class="token punctuation">(</span><span class="token string">'outpy.avi'</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>VideoWriter_fourcc<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">,</span> <span class="token string">'J'</span><span class="token punctuation">,</span> <span class="token string">'P'</span><span class="token punctuation">,</span> <span class="token string">'G'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>frame_width<span class="token punctuation">,</span> frame_height<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 4.获取视频中的每一帧图像</span>    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token comment"># 5.将每一帧图像写入到输出文件中</span>        out<span class="token punctuation">.</span>write<span class="token punctuation">(</span>frame<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span>    <span class="token comment"># 6.释放资源</span>cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>out<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="10-2-视频追踪"><a href="#10-2-视频追踪" class="headerlink" title="10.2 视频追踪"></a>10.2 视频追踪</h3><h4 id="10-2-1-meanshift"><a href="#10-2-1-meanshift" class="headerlink" title="10.2.1.meanshift"></a>10.2.1.meanshift</h4><p>原理<br>meanshift 算法的原理很简单。假设你有一堆点集，还有一个小的窗口，这个窗口可能是圆形的，现在你可能要移动这个窗口到点集密度最大的区域当中。<br>如下图：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617378507131-8a1f983c-1458-451b-8692-dc52ee0e1748.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_13%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=255&amp;id=cqrRi&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=340&amp;originWidth=473&amp;originalType=binary∶=1&amp;size=135786&amp;status=done&amp;style=none&amp;width=355" alt="image.png"><br>最开始的窗口是蓝色圆环的区域，命名为 C1。蓝色圆环的圆心用一个蓝色的矩形标注，命名为 C1_o。<br>而窗口中所有点的点集构成的质心在蓝色圆形点 C1_r 处，显然圆环的形心和质心并不重合。所以，移动蓝色的窗口，使得形心与之前得到的质心重合。在新移动后的圆环的区域当中再次寻找圆环当中所包围点集的质心，然后再次移动，通常情况下，形心和质心是不重合的。不断执行上面的移动过程，直到形心和质心大致重合结束。 这样，最后圆形的窗口会落到像素分布最大的地方，也就是图中的绿色圈，命名为 C2。<br>meanshift 算法除了应用在视频追踪当中，在聚类，平滑等等各种涉及到数据以及非监督学习的场合当中均有重要应用，是一个应用广泛的算法。<br>图像是一个矩阵信息，如何在一个视频当中使用 meanshift 算法来追踪一个运动的物体呢？ 大致流程如下：</p><ol><li>首先在图像上选定一个目标区域</li><li>计算选定区域的直方图分布，一般是 HSV 色彩空间的直方图。</li><li>对下一帧图像 b 同样计算直方图分布。</li><li>计算图像 b 当中与选定区域直方图分布最为相似的区域，使用 meanshift 算法将选定区域沿着最为相似的部分进行移动，直到找到最相似的区域，便完成了在图像 b 中的目标追踪。</li><li>重复 3 到 4 的过程，就完成整个视频目标追踪。<br>通常情况下我们使用直方图反向投影得到的图像和第一帧目标对象的起始位置，当目标对象的移动会反映到直方图反向投影图中，meanshift 算法就把我们的窗口移动到反向投影图像中灰度密度最大的区域了。如下图所示：</li></ol><p><img src="https://cdn.nlark.com/yuque/0/2021/gif/448115/1617378497427-d75bfef1-ef0a-4ae0-a1cd-5d5384e25270.gif#height=283&amp;id=ZkoqE&amp;margin=%5Bobject%20Object%5D&amp;name=image2-0785334.gif&amp;originHeight=283&amp;originWidth=212&amp;originalType=binary∶=1&amp;size=180533&amp;status=done&amp;style=none&amp;width=212" alt="image2-0785334.gif"><br>直方图反向投影的流程是：<br>假设我们有一张 100x100 的输入图像，有一张 10x10 的模板图像，查找的过程是这样的：</p><ol><li>从输入图像的左上角(0,0)开始，切割一块(0,0)至(10,10)的临时图像；</li><li>生成临时图像的直方图；</li><li>用临时图像的直方图和模板图像的直方图对比，对比结果记为 c；</li><li>直方图对比结果 c，就是结果图像(0,0)处的像素值；</li><li>切割输入图像从(0,1)至(10,11)的临时图像，对比直方图，并记录到结果图像；</li><li>重复 1 ～ 5 步直到输入图像的右下角，就形成了直方图的反向投影。</li></ol><p><strong>实现</strong><br>在 OpenCV 中实现 Meanshift 的 API 是：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python">cv<span class="token punctuation">.</span>meanShift<span class="token punctuation">(</span>probImage<span class="token punctuation">,</span> window<span class="token punctuation">,</span> criteria<span class="token punctuation">)</span>  probImage<span class="token punctuation">:</span> ROI区域，即目标的直方图的反向投影  window： 初始搜索窗口，就是定义ROI的rect  criteria<span class="token punctuation">:</span> 确定窗口搜索停止的准则，主要有迭代次数达到设置的最大值，窗口中心的漂移值大于某个设定的限值等。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>实现 Meanshift 的主要流程是：</p><ol><li>读取视频文件：cv.videoCapture()</li><li>感兴趣区域设置：获取第一帧图像，并设置目标区域，即感兴趣区域</li><li>计算直方图：计算感兴趣区域的 HSV 直方图，并进行归一化</li><li>目标追踪：设置窗口搜索停止条件，直方图反向投影，进行目标追踪，并在目标位置绘制矩形框。</li></ol><p>示例：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> cv2 <span class="token keyword">as</span> cv<span class="token comment"># 1.获取图像</span>cap <span class="token operator">=</span> cv<span class="token punctuation">.</span>VideoCapture<span class="token punctuation">(</span><span class="token string">'./image/DOG.wmv'</span><span class="token punctuation">)</span><span class="token comment"># 2.获取第一帧图像，并指定目标位置</span>ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 2.1 目标位置（行，高，列，宽）</span>r<span class="token punctuation">,</span> h<span class="token punctuation">,</span> c<span class="token punctuation">,</span> w <span class="token operator">=</span> <span class="token number">197</span><span class="token punctuation">,</span> <span class="token number">141</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">208</span>track_window <span class="token operator">=</span> <span class="token punctuation">(</span>c<span class="token punctuation">,</span> r<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">)</span><span class="token comment"># 2.2 指定目标的感兴趣区域</span>roi <span class="token operator">=</span> frame<span class="token punctuation">[</span>r<span class="token punctuation">:</span>r <span class="token operator">+</span> h<span class="token punctuation">,</span> c<span class="token punctuation">:</span>c <span class="token operator">+</span> w<span class="token punctuation">]</span><span class="token comment"># 3. 计算直方图</span><span class="token comment"># 3.1 转换色彩空间（HSV）</span>hsv_roi <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>roi<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2HSV<span class="token punctuation">)</span><span class="token comment"># 3.2 去除低亮度的值</span><span class="token comment"># mask = cv.inRange(hsv_roi, np.array((0., 60.,32.)), np.array((180.,255.,255.)))</span><span class="token comment"># 3.3 计算直方图</span>roi_hist <span class="token operator">=</span> cv<span class="token punctuation">.</span>calcHist<span class="token punctuation">(</span><span class="token punctuation">[</span>hsv_roi<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">180</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># 3.4 归一化</span>cv<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>roi_hist<span class="token punctuation">,</span> roi_hist<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> cv<span class="token punctuation">.</span>NORM_MINMAX<span class="token punctuation">)</span><span class="token comment"># 4. 目标追踪</span><span class="token comment"># 4.1 设置窗口搜索终止条件：最大迭代次数，窗口中心漂移最小值</span>term_crit <span class="token operator">=</span> <span class="token punctuation">(</span>cv<span class="token punctuation">.</span>TERM_CRITERIA_EPS <span class="token operator">|</span> cv<span class="token punctuation">.</span>TERM_CRITERIA_COUNT<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 4.2 获取每一帧图像</span>    ret<span class="token punctuation">,</span> frame <span class="token operator">=</span> cap<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> ret <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        <span class="token comment"># 4.3 计算直方图的反向投影</span>        hsv <span class="token operator">=</span> cv<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> cv<span class="token punctuation">.</span>COLOR_BGR2HSV<span class="token punctuation">)</span>        dst <span class="token operator">=</span> cv<span class="token punctuation">.</span>calcBackProject<span class="token punctuation">(</span><span class="token punctuation">[</span>hsv<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> roi_hist<span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">180</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>        <span class="token comment"># 4.4 进行meanshift追踪</span>        ret<span class="token punctuation">,</span> track_window <span class="token operator">=</span> cv<span class="token punctuation">.</span>meanShift<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> track_window<span class="token punctuation">,</span> term_crit<span class="token punctuation">)</span>        <span class="token comment"># 4.5 将追踪的位置绘制在视频上，并进行显示</span>        x<span class="token punctuation">,</span> y<span class="token punctuation">,</span> w<span class="token punctuation">,</span> h <span class="token operator">=</span> track_window        img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x <span class="token operator">+</span> w<span class="token punctuation">,</span> y <span class="token operator">+</span> h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>        cv<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">'frame'</span><span class="token punctuation">,</span> img2<span class="token punctuation">)</span>        <span class="token keyword">if</span> cv<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span> <span class="token operator">==</span> <span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'q'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">break</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token comment"># 5. 资源释放</span>cap<span class="token punctuation">.</span>release<span class="token punctuation">(</span><span class="token punctuation">)</span>cv<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>下面是三帧图像的跟踪结果：<br><img src="https://cdn.nlark.com/yuque/0/2021/png/448115/1617378449987-8566d6e0-96f1-40c4-9ec0-e5bebea8a60d.png?x-oss-process=image%2Fwatermark%2Ctype_d3F5LW1pY3JvaGVp%2Csize_22%2Ctext_6YKj5bCR5bm05ZKM54uX44CB8J-Nig%3D%3D%2Ccolor_FFFFFF%2Cshadow_50%2Ct_80%2Cg_se%2Cx_10%2Cy_10#height=289&amp;id=dgCtY&amp;margin=%5Bobject%20Object%5D&amp;name=image.png&amp;originHeight=289&amp;originWidth=765&amp;originalType=binary∶=1&amp;size=378819&amp;status=done&amp;style=none&amp;width=765" alt="image.png"></p><h4 id="10-2-2-Camshift"><a href="#10-2-2-Camshift" class="headerlink" title="10.2.2 Camshift"></a>10.2.2 Camshift</h4><p>大家认真看下上面的结果，有一个问题，就是检测的窗口的大小是固定的，而狗狗由近及远是一个逐渐变小的过程，固定的窗口是不合适的。所以我们需要根据目标的大小和角度来对窗口的大小和角度进行修正。CamShift 可以帮我们解决这个问题。<br>CamShift 算法全称是“Continuously Adaptive Mean-Shift”（连续自适应 MeanShift 算法），是对 MeanShift 算法的改进算法，可随着跟踪目标的大小变化实时调整搜索窗口的大小，具有较好的跟踪效果。<br>Camshift 算法首先应用 meanshift，一旦 meanshift 收敛，它就会更新窗口的大小，还计算最佳拟合椭圆的方向，从而根据目标的位置和大小更新搜索窗口。如下图所示：<br><img src="https://cdn.nlark.com/yuque/0/2021/gif/448115/1617378432441-480ada39-1949-42f4-abf3-6fc6561f96b5.gif#height=510&amp;id=okHSy&amp;margin=%5Bobject%20Object%5D&amp;name=image4.gif&amp;originHeight=510&amp;originWidth=340&amp;originalType=binary∶=1&amp;size=253144&amp;status=done&amp;style=none&amp;width=340" alt="image4.gif"><br>Camshift 在 OpenCV 中实现时，只需将上述的 meanshift 函数改为 Camshift 函数即可：<br>将 Camshift 中的：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 4.4 进行meanshift追踪</span>        ret<span class="token punctuation">,</span> track_window <span class="token operator">=</span> cv<span class="token punctuation">.</span>meanShift<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> track_window<span class="token punctuation">,</span> term_crit<span class="token punctuation">)</span>        <span class="token comment"># 4.5 将追踪的位置绘制在视频上，并进行显示</span>        x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>w<span class="token punctuation">,</span>h <span class="token operator">=</span> track_window        img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>x<span class="token operator">+</span>w<span class="token punctuation">,</span>y<span class="token operator">+</span>h<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>改为：</p><div class="code-wrapper"><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#进行camshift追踪</span>    ret<span class="token punctuation">,</span> track_window <span class="token operator">=</span> cv<span class="token punctuation">.</span>CamShift<span class="token punctuation">(</span>dst<span class="token punctuation">,</span> track_window<span class="token punctuation">,</span> term_crit<span class="token punctuation">)</span>        <span class="token comment"># 绘制追踪结果</span>        pts <span class="token operator">=</span> cv<span class="token punctuation">.</span>boxPoints<span class="token punctuation">(</span>ret<span class="token punctuation">)</span>        pts <span class="token operator">=</span> np<span class="token punctuation">.</span>int0<span class="token punctuation">(</span>pts<span class="token punctuation">)</span>        img2 <span class="token operator">=</span> cv<span class="token punctuation">.</span>polylines<span class="token punctuation">(</span>frame<span class="token punctuation">,</span><span class="token punctuation">[</span>pts<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token boolean">True</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="10-2-3-算法总结"><a href="#10-2-3-算法总结" class="headerlink" title="10.2.3 算法总结"></a>10.2.3 算法总结</h4><p>Meanshift 和 camshift 算法都各有优势，自然也有劣势：</p><ul><li>Meanshift 算法：简单，迭代次数少，但无法解决目标的遮挡问题并且不能适应运动目标的的形状和大小变化。</li><li><p>camshift 算法：可适应运动目标的大小形状的改变，具有较好的跟踪效果，但当背景色和目标颜色接近时，容易使目标的区域变大，最终有可能导致目标跟踪丢失。</p></li><li><p>官方文档：<a href="https://docs.opencv.org/3.0-beta/modules/imgproc/doc/miscellaneous_transformations.html?highlight=adaptivethreshold#cv2.adaptiveThreshold">https://docs.opencv.org/3.0-beta/modules/imgproc/doc/miscellaneous_transformations.html?highlight=adaptivethreshold#cv2.adaptiveThreshold</a></p></li><li>Tutorial：<a href="https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_gui/py_trackbar/py_trackbar.html#trackbar">https://opencv-python-tutroals.readthedocs.io/en/latest/py_tutorials/py_gui/py_trackbar/py_trackbar.html#trackbar</a></li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Test yuque</title>
    <link href="/yuque/Test%20yuque/"/>
    <url>/yuque/Test%20yuque/</url>
    
    <content type="html"><![CDATA[<h3 id="MY-FIRST-POST"><a href="#MY-FIRST-POST" class="headerlink" title="MY FIRST POST"></a>MY FIRST POST</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>AliyunDriver_to_Windows</title>
    <link href="/AliyunDriver-to-Windows/"/>
    <url>/AliyunDriver-to-Windows/</url>
    
    <content type="html"><![CDATA[<h2 id="阿里云盘WebDAV挂载至系统"><a href="#阿里云盘WebDAV挂载至系统" class="headerlink" title="阿里云盘WebDAV挂载至系统"></a>阿里云盘WebDAV挂载至系统</h2><span id="more"></span><p>项目地址：<a href="https://github.com/zxbu/webdav-aliyundriver">阿里云盘的webdav协议开源实现</a></p><h3 id="安装Docker-for-Windows"><a href="#安装Docker-for-Windows" class="headerlink" title="安装Docker for Windows"></a>安装Docker for Windows</h3><ul><li><p><strong>下载地址</strong>：<a href="https://hub.docker.com/editions/community/docker-ce-desktop-windows">Docker Desktop for Windows by Docker | Docker Hub</a></p></li><li><p><strong>前置需求</strong>：</p><p>启用Hyper-V功能：在控制面板中打开程序与功能，启用或关闭Windows功能中开启Hyper-V</p><p>安装wsl2：<a href="https://docs.microsoft.com/zh-cn/windows/wsl/setup/environment">设置 WSL 2 开发环境最佳做法 | Microsoft Docs</a></p></li><li><p><strong>安装Docker for Windows</strong>：按照程序指引安装，完成后需要log out windows</p></li><li><p><strong>测试Docker</strong>：启动Docker，在dashboard上确定Docker成功运行，打开 PowerShell 并运行<code>docker run hello-world</code>命令检测是否运行成功</p></li></ul><h3 id="运行并配置webdav-aliyundriver"><a href="#运行并配置webdav-aliyundriver" class="headerlink" title="运行并配置webdav-aliyundriver"></a>运行并配置webdav-aliyundriver</h3><ul><li><p><strong>获取refresh token</strong>：先通过浏览器打开阿里云盘官网并登录网页版：<a href="https://www.aliyundrive.com/drive/，登录成功后，按">https://www.aliyundrive.com/drive/，登录成功后，按</a> F12 打开开发者工具，点击 Application，点击 Local Storage，点击 Local Storage 下的 <a href="https://www.aliyundrive.com/，点击右边的">https://www.aliyundrive.com/，点击右边的</a> token，此时可以看到里面的数据，其中就有 refresh_token，把其值复制出来即可。</p></li><li><p><strong>创建Docker配置文件</strong>：在用户文件夹下创建<code>docker-compose.yml</code></p></li><li><p><strong>运行webdav</strong>：粘贴如下配置文件至<code>docker-compose.yml</code>并运行<code>docker-compose up</code></p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">version: &quot;3.0&quot;services:  webdav-aliyundriver:    image: zx5253&#x2F;webdav-aliyundriver    container_name: aliyundriver    environment:      - TZ&#x3D;Asia&#x2F;Shanghai      - ALIYUNDRIVE_REFRESH_TOKEN&#x3D;your_token      - ALIYUNDRIVE_AUTH_USER-NAME&#x3D;your_name      - ALIYUNDRIVE_AUTH_PASSWORD&#x3D;your_password      - JAVA_OPTS&#x3D;-Xmx1g    volumes:      - &#x2F;etc&#x2F;aliyun-driver&#x2F;:&#x2F;etc&#x2F;aliyun-driver&#x2F;    ports:      - 8080:8080    restart: always<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h3 id="安装RaiDrive"><a href="#安装RaiDrive" class="headerlink" title="安装RaiDrive"></a>安装RaiDrive</h3><ul><li><strong>下载地址</strong>：<a href="https://www.raidrive.com/download">01 Download (raidrive.com)</a>   <a href="https://www.aliyundrive.com/s/nng3EL7eQHG">02 阿里云盘🚀</a></li><li><strong>安装RaiDrive</strong>：按照程序指引安装</li><li><strong>挂载阿里云盘</strong>：点击添加 ☛ NAS ☛ WebDAV  ☛ 配置挂载位置、地址和账户（地址需要取消勾选前边的方框取消使用https协议） ☛ 点击确定，完成挂载</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>The Missing Semester of Your CS Education</title>
    <link href="/The-Missing-Semester-of-Your-CS-Education/"/>
    <url>/The-Missing-Semester-of-Your-CS-Education/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机教育中缺失的一课"><a href="#计算机教育中缺失的一课" class="headerlink" title="计算机教育中缺失的一课"></a>计算机教育中缺失的一课</h1><h1 id="The-Missing-Semester-of-Your-CS-Education-中文版"><a href="#The-Missing-Semester-of-Your-CS-Education-中文版" class="headerlink" title="The Missing Semester of Your CS Education 中文版"></a>The Missing Semester of Your CS Education 中文版</h1><span id="more"></span><p>From <a href="https://missing-semester-cn.github.io/">https://missing-semester-cn.github.io/</a></p><p>大学里的计算机课程通常专注于讲授从操作系统到机器学习这些学院派的课程或主题，而对于如何精通工具这一主题则往往会留给学生自行探索。在这个系列课程中，我们讲授命令行、强大的文本编辑器的使用、使用版本控制系统提供的多种特性等等。学生在他们受教育阶段就会和这些工具朝夕相处（在他们的职业生涯中更是这样）。 因此，花时间打磨使用这些工具的能力并能够最终熟练地、流畅地使用它们是非常有必要的。</p><p>精通这些工具不仅可以帮助您更快的使用工具完成任务，并且可以帮助您解决在之前看来似乎无比复杂的问题。</p><p>关于<a href="https://missing-semester-cn.github.io/about/">开设此课程的动机</a>.</p><h1 id="日程"><a href="#日程" class="headerlink" title="日程"></a>日程</h1><ul><li><strong>1/13</strong>: <a href="https://missing-semester-cn.github.io/2020/course-shell/">课程概览与 shell</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/14</strong>: <a href="https://missing-semester-cn.github.io/2020/shell-tools/">Shell 工具和脚本</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/15</strong>: <a href="https://missing-semester-cn.github.io/2020/editors/">编辑器 (Vim)</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/16</strong>: <a href="https://missing-semester-cn.github.io/2020/data-wrangling/">数据整理</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/21</strong>: <a href="https://missing-semester-cn.github.io/2020/command-line/">命令行环境</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/22</strong>: <a href="https://missing-semester-cn.github.io/2020/version-control/">版本控制(Git)</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/23</strong>: <a href="https://missing-semester-cn.github.io/2020/debugging-profiling/">调试及性能分析</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/27</strong>: <a href="https://missing-semester-cn.github.io/2020/metaprogramming/">元编程</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/28</strong>: <a href="https://missing-semester-cn.github.io/2020/security/">安全和密码学</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/29</strong>: <a href="https://missing-semester-cn.github.io/2020/potpourri/">大杂烩</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li><li><strong>1/30</strong>: <a href="https://missing-semester-cn.github.io/2020/qa/">提问&amp;回答</a><img src="https://img.shields.io/badge/Chinese-%E2%9C%94-green" alt="img"></li></ul><p>讲座视频可以在 <a href="https://www.youtube.com/playlist?list=PLyzOVJj3bHQuloKGG59rS43e29ro7I57J">YouTube</a>上找到。</p><h1 id="关于本课程"><a href="#关于本课程" class="headerlink" title="关于本课程"></a>关于本课程</h1><p><strong>教员</strong>: 本课程由 <a href="https://www.anishathalye.com/">Anish</a>、 <a href="https://thesquareplanet.com/">Jon</a> 和 <a href="http://josejg.com/">Jose</a> 讲授。</p><p><strong>问题</strong>: 请通过 <a href="mailto:missing-semester@mit.edu">missing-semester@mit.edu</a>联系我们。</p><h1 id="在-MIT-之外"><a href="#在-MIT-之外" class="headerlink" title="在 MIT 之外"></a>在 MIT 之外</h1><p>我们也将本课程分享到了 MIT 之外，希望其他人也能受益于这些资源。您可以在下面这些地方找到相关文章和讨论。</p><ul><li><a href="https://news.ycombinator.com/item?id=22226380">Hacker News</a></li><li><a href="https://lobste.rs/s/ti1k98/missing_semester_your_cs_education_mit">Lobsters</a></li><li><a href="https://www.reddit.com/r/learnprogramming/comments/eyagda/the_missing_semester_of_your_cs_education_mit/">/r/learnprogramming</a></li><li><a href="https://www.reddit.com/r/programming/comments/eyagcd/the_missing_semester_of_your_cs_education_mit/">/r/programming</a></li><li><a href="https://twitter.com/jonhoo/status/1224383452591509507">Twitter</a></li><li><a href="https://www.youtube.com/playlist?list=PLyzOVJj3bHQuloKGG59rS43e29ro7I57J">YouTube</a></li></ul><h1 id="译文"><a href="#译文" class="headerlink" title="译文"></a>译文</h1><ul><li><a href="https://missing-semester-zh-hant.github.io/">繁体中文</a></li><li><a href="https://missing-semester-kr.github.io/">Korean</a></li><li><a href="https://missing-semester-esp.github.io/">Spanish</a></li><li><a href="https://missing-semester-tr.github.io/">Turkish</a></li></ul><p>注意: 上述连接为社区翻译，我们并未验证其内容</p><h2 id="致谢"><a href="#致谢" class="headerlink" title="致谢"></a>致谢</h2><p>感谢 Elaine Mello, Jim Cain 以及 <a href="https://openlearning.mit.edu/">MIT Open Learning</a> 帮助我们录制讲座视频。</p><p>感谢 Anthony Zolnik 和 <a href="https://aeroastro.mit.edu/">MIT AeroAstro</a> 提供 A/V 设备。</p><p>感谢 Brandi Adams 和 <a href="https://www.eecs.mit.edu/">MIT EECS</a> 对本课程的支持。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Slurm_note</title>
    <link href="/Slurm-note/"/>
    <url>/Slurm-note/</url>
    
    <content type="html"><![CDATA[<p>Slurm使用帮助</p><span id="more"></span><p>From <a href="https://zhuanlan.zhihu.com/p/356415669">https://zhuanlan.zhihu.com/p/356415669</a></p><h2 id="1-Slurm-命令"><a href="#1-Slurm-命令" class="headerlink" title="1. Slurm 命令"></a>1. Slurm 命令</h2><div class="table-container"><table><thead><tr><th>Slurm命令</th><th>功能</th></tr></thead><tbody><tr><td>sinfo</td><td>查看集群分区状态</td></tr><tr><td>squeue</td><td>查看作业队列</td></tr><tr><td>srun, salloc</td><td>交互式运行作业</td></tr><tr><td>sbatch</td><td>提交作业</td></tr><tr><td>scancel</td><td>取消作业</td></tr><tr><td>scontrol</td><td>查看和修改作业参数</td></tr><tr><td>sacct</td><td>查看已完成作业</td></tr></tbody></table></div><h2 id="2-Sinfo"><a href="#2-Sinfo" class="headerlink" title="2. Sinfo"></a>2. Sinfo</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sinfo               <span class="token comment">#查看所有分区状态</span>sinfo -a            <span class="token comment">#查看所有分区状态</span>sinfo -N            <span class="token comment">#查看节点状态</span>sinfo -n node-name  <span class="token comment">#查看指定节点状态</span>sinfo --help        <span class="token comment">#查看sinfo的说明</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-1-节点状态"><a href="#2-1-节点状态" class="headerlink" title="2.1 节点状态"></a>2.1 节点状态</h3><div class="table-container"><table><thead><tr><th>alloc</th><th>idle</th><th>mix</th><th>down</th><th>drain</th></tr></thead><tbody><tr><td>节点在用</td><td>节点可用</td><td>部分占用</td><td>节点下线</td><td>节点故障</td></tr></tbody></table></div><h2 id="3-Squeue"><a href="#3-Squeue" class="headerlink" title="3. Squeue"></a>3. Squeue</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">squeue              <span class="token comment">#查看运行中的作业列表</span>squeue -l           <span class="token comment">#查看列表细节信息</span>squene -j job-id    <span class="token comment">#查看运行中作业信息</span>squeue -u username  <span class="token comment">#查看user所有运行中的作业</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="3-1-作业状态"><a href="#3-1-作业状态" class="headerlink" title="3.1 作业状态"></a>3.1 作业状态</h3><div class="table-container"><table><thead><tr><th>R</th><th>PD</th><th>CG</th><th>CD</th></tr></thead><tbody><tr><td>正在运行</td><td>正在排队</td><td>即将完成</td><td>已完成</td></tr></tbody></table></div><h2 id="4-提交作业"><a href="#4-提交作业" class="headerlink" title="4. 提交作业"></a>4. 提交作业</h2><p>Slurm提交作业有3种模式，分别为交互模式，批处理模式，分配模式，这三种方式只是用户使用方式的区别，在管理，调度，记账时同等对待。</p><h3 id="4-1-参数说明"><a href="#4-1-参数说明" class="headerlink" title="4.1 参数说明"></a>4.1 参数说明</h3><p>以下所有参数在 <code>srun, sbatch, salloc</code> 中均可以使用。更多参数见<code>srun --help</code>, <code>sbatch --help</code>, <code>salloc --help</code>。</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">-c, --cpu-per-task<span class="token operator">=</span>NCPUs        <span class="token comment">#指定每个进程使用核数，不指定默认为1</span>-e, --error<span class="token operator">=</span>error_filename      <span class="token comment">#指定错误文件输出</span>-J, --job-name<span class="token operator">=</span>JOBNAME          <span class="token comment">#指定作业名称</span>--mail-type<span class="token operator">=</span>END/FAIL/ALL        <span class="token comment">#邮件提醒，可选:END,FAIL,ALL</span>--mail-user<span class="token operator">=</span>mail_address        <span class="token comment">#通知邮箱地址</span>-n, --ntask<span class="token operator">=</span>NTASKs <span class="token comment">#指定总进程数；不使用cpus-per-task，可理解为进程数即为核数 </span>--ntask-per-node<span class="token operator">=</span>N <span class="token comment">#指定每个节点进程数/核数，使用-n参数后变为每个节点最多运行的进程数</span>-N, --nodes<span class="token operator">=</span>N                   <span class="token comment">#指定节点数量</span>-o, --output<span class="token operator">=</span>out_filename       <span class="token comment">#指定输出文件输出</span>-p, --partion<span class="token operator">=</span>debug             <span class="token comment">#指定分区</span>-t, --time<span class="token operator">=</span>dd-hh:mm:ss          <span class="token comment">#作业最大运行时间</span>-w, --nodelist<span class="token operator">=</span>node<span class="token punctuation">[</span><span class="token number">1,2</span><span class="token punctuation">]</span>        <span class="token comment">#指定优先使用节点，不可与避免节点冲突</span>-x, --exclude<span class="token operator">=</span>node<span class="token punctuation">[</span><span class="token number">3,5</span>-6<span class="token punctuation">]</span>       <span class="token comment">#指定避免使用节点，不可与优先节点冲突</span>--mem-per-cpu<span class="token operator">=</span>MB                <span class="token comment">#指定计算cpu最大占用内存大小</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="4-2-交互模式-Srun"><a href="#4-2-交互模式-Srun" class="headerlink" title="4.2 交互模式 Srun"></a>4.2 交互模式 Srun</h3><p>交互式作业提交，提交命令后，等待作业执行完成之后返回命令行窗口。</p><h3 id="Demo-of-srun"><a href="#Demo-of-srun" class="headerlink" title="Demo of srun"></a>Demo of srun</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">srun -J JOBNAME -p debug -N <span class="token number">2</span> -c <span class="token number">1</span> -n <span class="token number">32</span> --ntasks-per-node<span class="token operator">=</span><span class="token number">16</span> -w node<span class="token punctuation">[</span><span class="token number">3,4</span><span class="token punctuation">]</span> -x node<span class="token punctuation">[</span><span class="token number">1,5</span>-6<span class="token punctuation">]</span> --time<span class="token operator">=</span>dd-hh:mm:ss --output<span class="token operator">=</span>file_name --error<span class="token operator">=</span>file_name --mail-user<span class="token operator">=</span>address --mail-type<span class="token operator">=</span>ALL mpirun -n <span class="token number">64</span> ./iPic3D ./inputfile/test.inp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>同 <strong>Demo of sbatch</strong></p><h3 id="4-3-批处理模式-Sbatch"><a href="#4-3-批处理模式-Sbatch" class="headerlink" title="4.3 批处理模式 Sbatch"></a>4.3 批处理模式 Sbatch</h3><p>批处理作业是指用户编写作业脚本，指定资源需求约束，提交后台执行作业。提交批处理作业的命令为 sbatch，用户提交命令即返回命令行窗口，但此时作业在进入调度状态，在资源满足要求时，分配完计算结点之后，系统将在所分配的第一个计算结点（而不是登录结点）上加载执行用户的作业脚本。批处理作业的脚本为一个文本文件，脚本第一行以 “#!” 字符开头，并制定脚本文件的解释程序，如 sh，bash。</p><p>运行 <code>sbatch filename</code> 来提交任务；计算开始后，工作目录中会生成以 slurm 开头的.out 文件为输出文件（不指定输出的话）。</p><h3 id="Demo-of-sbatch"><a href="#Demo-of-sbatch" class="headerlink" title="Demo of sbatch"></a>Demo of sbatch</h3><p>保存在运行程序目录下即可，文件名随意（可以无后缀，内容文本格式即可）；作业提交命令<code>sbatch filename</code></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash </span><span class="token comment">#提交单个作业</span><span class="token comment">#SBATCH --job-name=JOBNAME      %指定作业名称</span><span class="token comment">#SBATCH --partition=debug       %指定分区</span><span class="token comment">#SBATCH --nodes=2               %指定节点数量</span><span class="token comment">#SBATCH --cpus-per-task=1       %指定每个进程使用核数，不指定默认为1</span><span class="token comment">#SBATCH -n 32       %指定总进程数；不使用cpus-per-task，可理解为进程数即为核数</span><span class="token comment">#SBATCH --ntasks-per-node=16    %指定每个节点进程数/核数,使用-n参数（优先级更高），变为每个节点最多运行的任务数</span><span class="token comment">#SBATCH --nodelist=node[3,4]    %指定优先使用节点</span><span class="token comment">#SBATCH --exclude=node[1,5-6]   %指定避免使用节点</span><span class="token comment">#SBATCH --time=dd-hh:mm:ss      %作业最大运行时长，参考格式填写</span><span class="token comment">#SBATCH --output=file_name      %指定输出文件输出</span><span class="token comment">#SBATCH --error=file_name       %指定错误文件输出</span><span class="token comment">#SBATCH --mail-type=ALL         %邮件提醒,可选:END,FAIL,ALL</span><span class="token comment">#SBATCH --mail-user=address     %通知邮箱地址</span><span class="token builtin class-name">source</span> /public/home/user/.bashrc   <span class="token comment">#导入环境变量文件</span>mpirun -n <span class="token number">32</span> ./iPic3D ./inputfiles/test.inp <span class="token comment">#运行命令</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>同 <strong>Demo of srun</strong></p><h3 id="4-4-分配模式-Salloc"><a href="#4-4-分配模式-Salloc" class="headerlink" title="4.4 分配模式 Salloc"></a>4.4 分配模式 Salloc</h3><p>结点资源抢占命令。该命令支持用户在提交作业前，抢占所需计算资源（此时开始计算所用机时）。需请求资源，然后在获取节点后登录到计算节点。目前作者使用设备可直接登录计算节点，暂未使用。 <code>sacct</code> 命令也未启用，暂无说明，有需要可在文末参考网页查看。</p><h2 id="5-Scontrol"><a href="#5-Scontrol" class="headerlink" title="5. Scontrol"></a>5. Scontrol</h2><h3 id="5-1-信息查看"><a href="#5-1-信息查看" class="headerlink" title="5.1 信息查看"></a>5.1 信息查看</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">scontrol show job JOBID         <span class="token comment">#查看作业的详细信息</span>scontrol show node              <span class="token comment">#查看所有节点详细信息</span>scontrol show node node-name    <span class="token comment">#查看指定节点详细信息</span>scontrol show node <span class="token operator">|</span> <span class="token function">grep</span> CPU   <span class="token comment">#查看各节点cpu状态</span>scontrol show node node-name <span class="token operator">|</span> <span class="token function">grep</span> CPU <span class="token comment">#查看指定节点cpu状态</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="5-2-更新作业"><a href="#5-2-更新作业" class="headerlink" title="5.2 更新作业"></a>5.2 更新作业</h3><p>在任务开始前却发现作业的属性写错了（例如提交错了分区，修改名字），取消了重新排队似乎很不划算。如果作业恰好 <strong>没在运行</strong>，我们是可以通过 <code>scontrol</code> 命令来更新作业的属性</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">scontrol update <span class="token assign-left variable">jobid</span><span class="token operator">=</span>JOBID <span class="token punctuation">..</span>. <span class="token comment">#...为下面参数</span><span class="token assign-left variable">reqnodelist</span><span class="token operator">=</span><span class="token operator">&lt;</span>nodes<span class="token operator">></span><span class="token assign-left variable">reqcores</span><span class="token operator">=</span><span class="token operator">&lt;</span>count<span class="token operator">></span><span class="token assign-left variable">name</span><span class="token operator">=</span><span class="token operator">&lt;</span>name<span class="token operator">></span><span class="token assign-left variable">nodelist</span><span class="token operator">=</span><span class="token operator">&lt;</span>nodes<span class="token operator">></span><span class="token assign-left variable">excnodelist</span><span class="token operator">=</span><span class="token operator">&lt;</span>nodes<span class="token operator">></span><span class="token assign-left variable">numcpus</span><span class="token operator">=</span><span class="token operator">&lt;</span>min_count-max_count<span class="token operator">></span><span class="token assign-left variable">numnodes</span><span class="token operator">=</span><span class="token operator">&lt;</span>min_count-max_count<span class="token operator">></span><span class="token assign-left variable">numtasks</span><span class="token operator">=</span><span class="token operator">&lt;</span>count<span class="token operator">></span><span class="token assign-left variable">starttime</span><span class="token operator">=</span>yyyy-mm-dd<span class="token assign-left variable">partition</span><span class="token operator">=</span><span class="token operator">&lt;</span>name<span class="token operator">></span><span class="token assign-left variable">timelimit</span><span class="token operator">=</span>d-h:m:s<span class="token assign-left variable">mincpusnode</span><span class="token operator">=</span><span class="token operator">&lt;</span>count<span class="token operator">></span><span class="token assign-left variable">minmemorycpu</span><span class="token operator">=</span><span class="token operator">&lt;</span>megabytes<span class="token operator">></span><span class="token assign-left variable">minmemorynode</span><span class="token operator">=</span><span class="token operator">&lt;</span>megabytes<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol><li><a href="https://link.zhihu.com/?target=https%3A//hpc.pku.edu.cn/_book/guide/slurm/slurm.html">作业调度系统 · 北京大学高性能计算使用指南</a></li><li><a href="https://link.zhihu.com/?target=http%3A//bicmr.pku.edu.cn/~wenzw/pages/slurm.html">SLURM 使用参考</a></li><li><a href="https://link.zhihu.com/?target=https%3A//docs.hpc.sjtu.edu.cn/job/slurm.html">Slurm 作业调度系统 — 上海交大超算平台用户手册 文档</a></li><li><a href="https://link.zhihu.com/?target=https%3A//www.hpccube.com/wiki/index.php/SLURM%E4%BD%BF%E7%94%A8%E5%9F%BA%E7%A1%80%E6%95%99%E7%A8%8B">SLURM使用基础教程 - 曙光先进计算</a></li><li><a href="https://link.zhihu.com/?target=https%3A//arc.umich.edu/greatlakes/slurm-user-guide/">Slurm User Guide for Great Lakes | ITS Advanced Research Computing</a></li></ol>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Salome tut 01</title>
    <link href="/Salome-tut-01/"/>
    <url>/Salome-tut-01/</url>
    
    <content type="html"><![CDATA[<h2 id="Primitives-partition-and-meshing-example"><a href="#Primitives-partition-and-meshing-example" class="headerlink" title="Primitives, partition and meshing example"></a>Primitives, partition and meshing example</h2><span id="more"></span><p>This sample is known to work on the latest SALOME release.<br>The compatibility with previous versions of SALOME is not guaranteed, though the sample can work on old versions also.</p><h3 id="Objective"><a href="#Objective" class="headerlink" title="Objective"></a>Objective</h3><p>Geometric Primitives, tetrahedral and hexahedral 3D meshing, Partitions.</p><p><strong>Copyright ©</strong> <strong>EDF R&amp;D 2014.</strong><br>This tutorial is a part of the EDF internal training course; it does not describe a real use case.</p><h3 id="Geometry"><a href="#Geometry" class="headerlink" title="Geometry"></a>Geometry</h3><ul><li>Launch SALOME.</li><li>Create a new study.</li><li>Launch GEOMmodule.</li></ul><h3 id="Modeling-of-2D-object-–-Usage-of-primitives"><a href="#Modeling-of-2D-object-–-Usage-of-primitives" class="headerlink" title="Modeling of 2D object – Usage of primitives"></a>Modeling of 2D object – Usage of primitives</h3><ul><li><p>Modification of  preferences: <em>(</em>menu <em>File/Preferences).</em>Geometry: Origin and base vectors - check <em>Auto create</em>.  Default display mode - <em>Wireframe</em></p></li><li><p>Creation of Sketch_1 : (menu New Entity/Basic/2D Sketch). </p><p>Click Apply after each consecutive line except for the last one:</p><p>Arc First Point (Absolute): (150 ; 0) </p><p>Arc (Direction; Perpendicular): (50 ; 115)</p><p>Arc (Direction; Tangent): (-100 ; 15)</p><p>Line Segment (Direction ; Tangent ; Length) : 150</p><p>Line Segment (Direction ; VX-VY ; Y) : (0 ; -1 ;0)</p><p>Close dialog</p></li><li><p>Creation of <strong>Mirror_1</strong>: <em>(</em>menu <em>Operations/Transformation/Mirror image)</em><br>(2nd Constructor)</p><p><strong>Objects</strong>: Sketch_1</p><p><strong>Axis Mirror</strong>: OX</p><p>Leave <em>“Create a copy”</em> checked.</p></li><li><p>Check the wires: (menu Measures/What is)</p><p>=&gt; 1 Wire, 4 Edges, 5 vertices.</p></li><li><p>Explode into basic elements: <em>(</em>menu <em>New Entity/Explode)</em></p></li><li><p><strong>Explode</strong> Sketch_1 into Edges.</p></li><li><p><strong>Explode</strong> Mirror_1 into Edges.</p><p><img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/screen_1.png/image_preview" alt="img">  <img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/EDF1_screen_2.png/image_preview" alt="img"> </p></li><li><p>Creation of Wire_1: (menu New Entity/Build/Wire)</p><p>Select the group of Edges (previously extracted).</p><p><em>Multiple selection is carried out by holding ctrl in the study tree and shift in the viewer.</em></p></li><li><p>Creation of <strong>Face_1</strong> : <em>(menu New Entity/Build/Face)</em><br>Face with Wire_1.</p></li><li><p>Display the result in <strong>Shading</strong> (popup menu <em>Display Mode/Shading</em>).</p></li><li><p>Save the study (menu <em>File/Save</em>)</p></li></ul><h3 id="Usage-of-curves"><a href="#Usage-of-curves" class="headerlink" title="Usage of curves"></a>Usage of curves</h3><p>Explode into sub-elements: <em>(menu New Entity/Explode)</em></p><ul><li><p>Explode 2 vertices from <strong>Face_1</strong> by selection (<em>Select Sub Shapes</em> Vertex)</p><p><em>Selection of a sub-shape is possible only in the OCC Viewer.</em></p></li><li><p>Rename the 2 vertices in PB and PA.</p></li></ul><p>Creation of Vertices for the curve : ( <em>New Entity/Basic/Point )</em></p><ul><li><em>Vertex_1 (-150, 0, 0),   Vertex_2 (-140, 20, 0),</em></li><li><em>Vertex_3 (-150, 30, 0),  Vertex_4 (-140, 40, 0)</em></li><li><em>Vertex_5 (-140, -20, 0), Vertex_6 (-150, -30, 0),</em></li><li><em>Vertex_7 (-140, -40, 0)</em></li></ul><p>Creation of <strong>Curve_1</strong>: <em>(</em>menu <em>New Entity/Basic/Curve)</em></p><ul><li>Interpolation with the selection of previously created vertexes (3rd Constructor).</li><li>Select just created vertexes in the next order: Vertex_4, Vertex_3, Vertex_2, Vertex_1, Vertex_5, Vertex_6, Vertex_7</li></ul><p>Creation of vectors:<em>(</em>menu <em>New Entity/Basic/Vector)</em></p><ul><li>Vector by 2 vertices (PA and Vertex_4) and (PB and Vertex_7).</li></ul><p>Creation of Face_2: (menu New Entity/Build/Face)</p><ul><li>from Curve_1, Vector_1, Vector_2, Edge_1 and Edge_5.</li></ul><p>Extrusion: <em>(</em>menu <em>New Entity/Generation/Extrusion)</em></p><ul><li><p><strong>Extrusion_1</strong> with Face_1 along OZ (Height: 10).</p></li><li><p><strong>Extrusion _2</strong> with Face_2 along OZ (Height: 10).</p></li></ul><p>Boolean Operation: <em>(</em>menu <em>Operations/Boolean/Fuse)</em></p><ul><li><strong>Fuse_1</strong> with Extrusion_1 and Extrusion_2.</li></ul><p>Creation of 3D Fillet on Fuse_1 : <em>(menu Operations/ Fillet 3D)</em></p><ul><li>(2nd Constructor) (Just two edges)</li><li>Fillet by selection of edges.</li><li><p>Radius = 25.</p><p><img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/EDF1_screen3.png/image_preview" alt="img">  <img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/EDF1_screen7.png/image_preview" alt="EDF1_screen6">  <img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/EDF1_screen5.png/image_preview" alt="img"> </p></li></ul><h3 id="Mesh"><a href="#Mesh" class="headerlink" title="Mesh"></a>Mesh</h3><ul><li>Launch module SMESH</li></ul><h3 id="Creation-of-a-simple-Tetrahedral-mesh"><a href="#Creation-of-a-simple-Tetrahedral-mesh" class="headerlink" title="Creation of a simple Tetrahedral mesh"></a>Creation of a simple Tetrahedral mesh</h3><ul><li>Creation of <strong>Mesh_Fillet_1</strong> : <em>(</em>menu <em>Mesh/Create Mesh)</em></li><li><p>Geometry: Fillet_1</p></li><li><p><em>Assign a set of hypotheses</em> -&gt; Automatic Tetrahedralization</p></li><li><p>Max. Length hypothesis opened, click “Cancel”.</p></li><li><p>Click 1D Tab, Add “Automatic Length” hypothesis with</p></li><li><p>Fitness: 0.2</p></li><li><p>Click OK for validation.</p></li><li><p>Compute (<em>right-click on</em> Mesh_Fillet_1)</p></li></ul><h3 id="Geometry-Partition"><a href="#Geometry-Partition" class="headerlink" title="Geometry (Partition)"></a><strong>Geometry (Partition)</strong></h3><p>Launch GEOM module</p><h3 id="Partition"><a href="#Partition" class="headerlink" title="Partition"></a>Partition</h3><p>Explode <strong>Fillet_1</strong> into reference elements: <em>(</em>menu <em>New Entity/Explode)</em></p><ul><li>Explode into 5 Vertices by selection.</li></ul><p>Create 5 <strong>Planes</strong>: <em>(</em>menu <em>New Entity/Basic/Plane)</em> (1st constructor)</p><ul><li><p>4 planes along vector OX passing through each of 4 first left vertices.</p></li><li><p>1 plane along vector OY passing through the right vertex.</p></li></ul><p>Creation of the <strong>Partition_1</strong>:<em>(</em>menu <em>Operation/Partition)</em> (1st constructor)</p><p>Partition of Fillet_1 (<em>Objects</em>) with 5 Planes (<em>Tool Object</em>).</p><p>Visualize the result in <strong>Shading</strong> mode with 40% <strong>transparency</strong> (<em>popup menu</em>).</p><h3 id="Meshing-Partition"><a href="#Meshing-Partition" class="headerlink" title="Meshing (Partition)"></a><strong>Meshing (Partition)</strong></h3><p>Launch SMESH module</p><h3 id="Creation-of-a-Tetrahedral-mesh-from-a-partition"><a href="#Creation-of-a-Tetrahedral-mesh-from-a-partition" class="headerlink" title="Creation of a Tetrahedral mesh from a partition"></a>Creation of a Tetrahedral mesh from a partition</h3><p>Creation of <strong>Mesh_Partition_Tetra</strong>: <em>(</em>menu <em>Mesh/Create Mesh)</em></p><ul><li><p>Geometry: Partition_1</p></li><li><p>Automatic Tetrahedralization (<em>Assign a set of hypotheses</em>)</p></li><li><p>“Max Length” opened, click Cancel</p></li><li><p>1D, hypothesis “Automatic Length”, Finesse: 0,2</p></li><li><p>Compute.</p></li></ul><p><strong>Creation of Hexahedral mesh</strong></p><p>Creation of <strong>Mesh_Partition_Hexa</strong>: <em>(</em>menu <em>Mesh/Create Mesh)</em></p><ul><li><p>Automatic Hexadralization (Assign a set of hypotheses)</p></li><li><p>Geometry: Partition_1</p></li><li><p>Number of Segments: 10, Type: Equidistant distribution.</p></li><li><p>Apply &amp; Close.</p></li></ul><p><strong>Exploding the Edge of Thickness</strong></p><p>Activate Geom Module.</p><p>Explode one Edge of Thickness</p><p>New Entity -&gt; Explode -&gt; Main Object : Partition_1 -&gt; Shape Type : Edge</p><p>Activate “Select Subshape” check box and select sub-shape from the viewer.</p><p>return to the Mesh Module.</p><p><strong>Creation of</strong> <strong>SubMesh</strong>: <em>(</em>menu <em>Mesh/Create Sub-Mesh)</em></p><ul><li><p>Mesh: Mesh_Partion_Hexa</p></li><li><p>Geometry : The edge of thickness.</p></li><li><p>Algo: Wire Discretisation</p></li><li><p>Hypothesis: Nb Segment (1, Equidistant distribution)</p></li><li><p>Add Hyp.: Propagation of 1D Hyp. on opposite edges</p></li><li><p>Compute.</p><p><img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/EDF1_screen9.png/image_preview" alt="EDF1_screen8">  <img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/EDF1_screen6.png/image_preview" alt="img">  <img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/EDF1_screen8.png/image_preview" alt="EDF1_screen7">  <img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/copy_of_EDF1_screen9.png/image_preview" alt="EDF1_screen9">  <img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/thickness.png/image_preview" alt="EDF1_thickness">  <img src="https://www.salome-platform.org/user-section/salome-tutorials/edf-exercise-1/EDF1_screen10.png/image_preview" alt="EDF1_screen9"> </p></li></ul><p>​                                                                                                                            </p><p>My final mesh</p><p><img src="..\img\mesh01.png" alt="mesh01"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>ffmpeg Denoise</title>
    <link href="/ffmpeg_denoise/"/>
    <url>/ffmpeg_denoise/</url>
    
    <content type="html"><![CDATA[<p>ffmpeg+sox 音频降噪处理</p><span id="more"></span><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/bash</span><span class="token assign-left variable">s</span><span class="token operator">=</span><span class="token string">'source.mp4'</span><span class="token assign-left variable">n</span><span class="token operator">=</span><span class="token string">'new.mp4'</span><span class="token assign-left variable">d</span><span class="token operator">=</span><span class="token string">'db.mp4'</span><span class="token comment"># 音频视频分离</span>ffmpeg -i <span class="token variable">$s</span> -vcodec copy -an ts.mp4ffmpeg -i <span class="token variable">$s</span> -acodec pcm_s16le -ar 128k -vn tm.wav <span class="token comment"># 噪音特征提取</span>ffmpeg -i tm.mp4 -vn -ss 00:00:00 -t 00:00:01 noise.wavsox noise.wav -n noiseprof noise.prof<span class="token comment"># 噪音去除 最后取值在0.2～0.3 一般来说0.21即可</span>sox tm.wav newtm.wav noisered noise.prof <span class="token number">0.21</span><span class="token comment"># 合并音频视频</span>ffmpeg -i newtm.wav -i ts.mp4 <span class="token variable">$n</span><span class="token comment"># 声音调整</span><span class="token comment"># ffmpeg -i $n -vcodec copy -af "volume=50dB" $d</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h1 id="SoX-音频处理工具使用方法"><a href="#SoX-音频处理工具使用方法" class="headerlink" title="SoX 音频处理工具使用方法"></a>SoX 音频处理工具使用方法</h1><h2 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h2><p>SoX 可以<strong>读取</strong>和<strong>写入</strong>常见格式的音频文件，并在此过程中选择性的加入一些声音效果。它可以组合多个输入源及合成音效，在许多系统上也可以作为<strong>音频播放器</strong>或<strong>多轨录音机使用。</strong></p><p>SoX 工具在大部分 Linux 系统上都可以直接通过软件包管理器安装（如<code>sudo apt-get install sox</code>），Mac 系统上则可以使用 <code>brew install sox</code>命令。</p><p>SoX 处理音频的基本流程如下：<br><code>Input(s) -&gt; Combiner -&gt; Effects -&gt; Output(s)</code></p><p>SoX 工具的所有功能都可以通过一个简单的<code>sox</code>命令及相应的选项实现。但它同时提供了<code>play</code>命令用于播放音频文件，<code>rec</code>命令用于录制音频，以及 <code>soxi</code>命令用于获取音频的文件头中包含的信息。</p><p>上述几个命令的基本格式如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">SYNOPSIS       sox [global-options] [format-options] infile1            [[format-options] infile2] ... [format-options] outfile            [effect [effect-options]] ...                   play [global-options] [format-options] infile1            [[format-options] infile2] ... [format-options]            [effect [effect-options]] ...       rec [global-options] [format-options] outfile            [effect [effect-options]] ...              soxi [-V[level]] [-T] [-t|-r|-c|-s|-d|-D|-b|-B|-p|-e|-a] infile1 ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="二、基本使用"><a href="#二、基本使用" class="headerlink" title="二、基本使用"></a>二、基本使用</h2><h4 id="1-获取音频文件的元数据"><a href="#1-获取音频文件的元数据" class="headerlink" title="1. 获取音频文件的元数据"></a>1. 获取音频文件的元数据</h4><p><code>soxi</code>或 <code>sox --i</code>命令可以通过分析音频文件的文件头，获取其元数据（如<strong>通道数、采样率、编码</strong>等）。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ soxi Faded.wavInput File     : &#39;Faded.wav&#39;Channels       : 2Sample Rate    : 44100Precision      : 16-bitDuration       : 00:03:32.63 &#x3D; 9376836 samples &#x3D; 15947 CDDA sectorsFile Size      : 37.5MBit Rate       : 1.41MSample Encoding: 16-bit Signed Integer PCM <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>soxi 命令跟上某个特定的选项可以只获取该选项对应的信息，如只显示某音频文件 <code>Faded.wav</code>的<strong>比特率</strong>（Bit Rate）：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ soxi -B Faded.wav1.41M<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>soxi 命令支持的所有选项及其含义如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ soxiUsage: soxi [-V[level]] [-T] [-t|-r|-c|-s|-d|-D|-b|-B|-p|-e|-a] infile1 ...-t  Show detected file-type-r  Show sample-rate-c  Show number of channels-s  Show number of samples (0 if unavailable)-d  Show duration in hours, minutes and seconds (0 if unavailable)-D  Show duration in seconds (0 if unavailable)-b  Show number of bits per sample (0 if not applicable)-B  Show the bitrate averaged over the whole file (0 if unavailable)-p  Show estimated sample precision in bits-e  Show the name of the audio encoding-a  Show file comments (annotations) if availableWith no options, as much information as is available is shown foreach given file.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="2-获取音频的统计信息"><a href="#2-获取音频的统计信息" class="headerlink" title="2. 获取音频的统计信息"></a>2. 获取音频的统计信息</h4><p>可以使用 <code>sox &lt;inputfile&gt; -n stat</code>命令获取某音频文件的统计信息。示例如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$  sox Faded.wav -n statSamples read:          18753672Length (seconds):    212.626667Scaled by:         2147483647.0Maximum amplitude:     0.977417Minimum amplitude:    -0.977478Midline amplitude:    -0.000031Mean    norm:          0.229415Mean    amplitude:    -0.000006RMS     amplitude:     0.302594Maximum delta:         1.765564Minimum delta:         0.000000Mean    delta:         0.202369RMS     delta:         0.273320Rough   frequency:         6339Volume adjustment:        1.023 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="3-播放与录制"><a href="#3-播放与录制" class="headerlink" title="3. 播放与录制"></a>3. 播放与录制</h4><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">play&#96; 和&#96;rec&#96; 命令提供了最基本的播放和录制功能。播放：&#96;$ play existing-file.wav&#96;录制：&#96;$ rec new-file.wav<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>上述命令等同于 sox 命令的如下形式：<br><code>$ sox existing-file.wav −d</code>（播放）和<code>sox −d new-file.wav</code>（录制）<br>其中<code>-d</code> 选项用于指定播放或录制时使用的音频设备，不指定时则表示使用默认设备。</p><p><strong>可以这样理解：</strong></p><ul><li><code>sox existing-file.wav -d</code> 就是从<code>existing-file.wav</code>文件中读取其包含的音频数据，再输出到<code>-d</code>（默认音频设备，扬声器）进行播放；</li></ul><p>-<code>sox -d new-file.wav</code>就是从<code>-d</code>（默认音频设备，麦克风）中读取音频数据，再输出（录制）到<code>new-file.wav</code>文件中。</p><p>其实都遵循了一个基本的格式，即<code>sox &lt;input&gt; &lt;output&gt;</code>。而其中的<code>&lt;input&gt;</code>和 <code>&lt;output&gt;</code> 根据需要既可以为某个具体的<strong>音频文件</strong>，也可以是某个具体的<strong>音频设备</strong>。</p><p>播放或录制的同时，也可以对音频文件应用指定的编辑操作或效果选项，因此在对音频数据应用某效果前，可以先使用 <strong>play 命令</strong>进行“预览”。</p><p>如 <code>trim</code>效果可以从音频文件中裁剪提取指定的片段到输出文件。<code>play</code>命令通过该效果可以直接播放指定片段：</p><p><script type="math/tex">play foo.wav trim 10.0 5.0`或</script>play foo.wav trim 10.0 =15.0<code>播放</code>foo.wav` 文件中 10-15s 之间的音频片段</p><p>使用 <code>echo</code> 效果播放 <code>Faded.wav</code>文件：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ play Faded.wav echo 0.8 0.88 200.0 0.4Faded.wav: File Size: 37.5M     Bit Rate: 1.41M  Encoding: Signed PCM  Channels: 2 @ 16-bitSamplerate: 44100HzReplaygain: off  Duration: 00:03:32.63In:12.1% 00:00:25.82 [00:03:06.81] Out:1.14M [-&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;-] Hd:2.7 Clip:0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="4-音频格式转换"><a href="#4-音频格式转换" class="headerlink" title="4. 音频格式转换"></a>4. 音频格式转换</h4><p><strong>文件格式类型</strong></p><p>对于音频数据格式的描述，主要通过以下 4 种属性：</p><ul><li>采样率（sample rate）：指声音由模拟信号转换成数字信号的过程中，每秒从连续信号中提取的用于组成离散信号的样本个数。<br>音频CD所用的采样率为 44100 Hz，数字音频磁带和许多计算机系统使用 48000 Hz，专业级音频系统通常使用 96000 Hz。</li><li>采样大小（sample size 或 Precision）：音频采样时用于存储每个样本的数据位数（bits）。如今 16 bit 的采样大小已被广泛使用，24 bit 主要用于专业音频领域。</li><li>编码格式（data encoding）：即每个音频样本的表示（即“编码”）方式。常用的编码类型包括 floating-point、μ-law、ADPCM、singed-integer PCM、MP3 和 FLAC 等。</li><li>通道（channel）：即文件中包含的音频通道的数量。其中单声道（mono）和双声道（stereo）是最常见的两种，“环绕声”音频（Surround sound）通常包含六个或更多声道。</li></ul><p>此外，音频文件还使用<strong>比特率</strong>（Bit Rate）表示一个单位时间内编码音频信号占用的存储空间大小， 它的数值一般取决于所有的上述四个参数。<br>MP3 编码的立体声音乐通常具有 128-196kbps 的比特率， FLAC 编码的立体声音乐通常具有 550-760kbps 的比特率。</p><p><strong>格式转换</strong></p><p>形式最简单的 sox 命令即使用两个文件名作为参数，如：<br><code>$ sox Faded.wav Faded.mp3</code>：将 <code>Faded.wav</code>文件的格式由 <strong>wav</strong> 转为 <strong>mp3</strong></p><p>上述命令执行时，SoX 会先从<code>Faded.wav</code>文件中读取音频数据，再将其输出到 <code>Faded.mp3</code>文件中。而 SoX 程序会根据参数中文件名的后缀推断出相应的格式，并在复制音频数据的过程中自动进行转码。</p><p>SoX 可以处理 <strong>self-describing</strong> 和 <strong>raw</strong> 格式的音频文件。<br><strong>self-describing</strong> 格式（如 WAV、FLAC、MP3）的文件包含一个用于描述信号和编码属性的<strong>文件头</strong>，而 <strong>raw</strong> 或 <strong>headless</strong> 格式的音频则不包含这些信息。</p><p>所以当 <strong>raw</strong> 格式的音频作为输入文件时，需要在 sox 命令的格式选项里指定其信号和编码属性。<br>常用的音频格式选项：</p><div class="table-container"><table><thead><tr><th>选项</th><th>描述</th></tr></thead><tbody><tr><td>-b, —bits BITS</td><td>每个编码样本占用的数据位数</td></tr><tr><td>-c, —channels CHANNELS</td><td>音频文件包含的通道数</td></tr><tr><td>-e, —encoding ENCODING</td><td>音频文件的编码类型</td></tr><tr><td>-r, —rate RATE</td><td>音频文件的采样率</td></tr><tr><td>-t, —type FILE-TYP</td><td>E音频文件的文件类型</td></tr></tbody></table></div><p>上述选项适用于输入或输出文件，主要用于说明 <strong>raw</strong>（或 <strong>headless</strong>）文件作为输入时的格式信息，或格式转换时指定输出文件的具体参数。</p><p><code>$ sox −r 48k −e float −b 32 −c 2 input.raw output.wav</code><br>将某个特定的 raw 格式的音频文件转换为 wav 格式</p><p><code>$ sox Faded.wav Faded.raw</code><br>将音频文件 Faded.wav 转为 raw 格式</p><p><code>$ play -r 44800 -b 16 -e signed-integer -c 2 Faded.raw</code><br>播放 raw 格式的音频文件</p><p><code>$ sox Faded.wav -c 1 Faded-mono.wav</code><br>将 Faded.wav 文件转换成单声道（-c 1）后输出</p><h2 id="三、音频效果"><a href="#三、音频效果" class="headerlink" title="三、音频效果"></a>三、音频效果</h2><p>SoX 工具可以在音频处理的过程中，对输入的音频数据应用众多的效果。<br>可以使用如下命令查看所有效果的帮助信息：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ sox --help-effect all | lesssox:      SoX vEffect usage:allpass frequency width[h|k|q|o]band [-n] center [width[h|k|q|o]]bandpass [-c] frequency width[h|k|q|o]bandreject frequency width[h|k|q|o]bass gain [frequency(100) [width[s|h|k|q|o]](0.5s)]bend [-f frame-rate(25)] [-o over-sample(16)] &#123;start,cents,end&#125;:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>也可以直接查看具体某个音频效果的使用方法：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$  sox --help-effect echosox:      SoX vEffect usage:echo gain-in gain-out delay decay [ delay decay ... ]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>以下是一些简单的应用场景。</p><h4 id="1-更改声道数"><a href="#1-更改声道数" class="headerlink" title="1. 更改声道数"></a>1. 更改声道数</h4><p>sox 命令可以更改音频文件中声道的数目，如将单声道音频转换成双声道：<br><code>$ sox foo.wav foostereo.wav channels 2</code> 或 <code>$ sox foo.wav -c 2 foostereo.wav</code></p><p>但是上述命令并没有创建一个“真实”的双声道音频，而是将单声道音频复制成完全一致的两个声道再合并到输出文件中。</p><p>可以通过 sox 命令的 -M 选项将左右两个声道的单声道音频合并成一个双声道文件：<br><code>$ sox -M left.wav right.wav stereo.wav</code></p><p>当然，也可以通过对双声道文件中两个声道的均一化处理，将其输出为单声道音频：<br><code>$ sox original.wav mono.wav channels 1</code> 或<code>$ sox original.wav -c 1 mono.wav</code><br><strong>remix</strong></p><p>通过 sox 命令的 remix 效果也可以完成对声道数据的提取或融合。</p><p><strong>提取</strong>双声道音频文件中单个声道的数据并作为单声道音频输出：<br><code>$ sox stereo.wav left.wav remix 1</code>（提取左声道音频）<br><code>$ sox stereo.wav right.wav remix 2</code>（提取右声道音频）</p><p><strong>融合</strong>双声道文件中两个声道的音频数据并作为单声道音频输出：<br><code>$ sox stereo.wav mono.wav remix 1,2</code> 或<br><code>$ sox stereo.wav mono.wav remix 1-2</code></p><p>此外，<code>remix</code> 还可以将输入文件中的多个声道数据分别进行融合。<br>如使用 <code>-M</code>选项将两个双声道音频合并，再通过 <code>remix</code> 将合并得到的四个声道两两融合，生成一个只包含两个声道的输出文件。<br><code>$ sox -M stereo1.wav stereo2.wav output.wav remix 1,3 2,4</code></p><h4 id="2-改变音量"><a href="#2-改变音量" class="headerlink" title="2. 改变音量"></a>2. 改变音量</h4><p><code>sox</code>命令的<code>-v</code>选项可以用来（成倍地）改变音量的大小：<br><code>$ sox -v 0.5 foo.wav bar.wav</code><br>上述命令将<code>foo.wav</code>音频放大 0.5 倍音量后输出至<code>bar.wav</code>文件</p><p>可以将音量放大功能与 <code>stat</code>效果结合。<br>以 <code>sox foo.wav -n stat -v</code>命令返回的数字作为放大倍数，将最大化 <code>foo.wav</code>的音量而不至于出现<strong>削波</strong>：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ sox foo.wav -n stat -v 2&gt; vc$ sox -v &#96;cat vc&#96; foo.wav foo-maxed.wav<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>此外，还有一个选项 <code>--norm</code> 用来<strong>归一化</strong>音频响度。为了最大化音频的声音强度，可以在处理输入音频时将该选项设置为 -1：<br><code>sox --norm=-1 &lt;inputfile&gt; &lt;outputfile&gt;</code></p><h4 id="3-提取文件的某个部分"><a href="#3-提取文件的某个部分" class="headerlink" title="3. 提取文件的某个部分"></a>3. 提取文件的某个部分</h4><p>sox 命令的 <code>trim</code>效果可以将输入音频的某一段裁剪出来并提取到输出文件中。</p><p><code>trim</code> 接收两个参数，一个作为裁剪片段的起始位置，另一个作为该片段持续的时间。<br>可以使用整数<code>+s</code>格式的参数以样本个数作为计量单位，也可以直接使用 <code>((hh:)mm:)ss(.fs)</code>形式的时间参数。当参数为纯整数时，单位为秒。</p><p><code>$ sox Input.wav Half1.wav trim 0 30:00</code> 截取输入文件中前 30 分钟的音频<br><code>$ sox Input.wav Half2.wav trim 30:00 30:00</code> 截取输入文件中从第 30 分钟开始到第 60 分钟的音频</p><h4 id="4-拼接文件"><a href="#4-拼接文件" class="headerlink" title="4. 拼接文件"></a>4. 拼接文件</h4><p>与前面裁剪提取的操作相反，sox 命令还可以实现对两个或多个音频文件的拼接。</p><p><code>$ sox Half1.wav Half2.wav Full.wav</code><br>将 <code>Half1.wav</code> 和<code>Half2.wav</code>合并至<code>Full.wav</code> 文件。注意合并前的音频文件需保持一致的类型和采样率等。</p><h4 id="5-合成音频"><a href="#5-合成音频" class="headerlink" title="5. 合成音频"></a>5. 合成音频</h4><p>sox 命令可以通过<code>synth</code>效果合成许多标准波形和噪声类型。</p><p><code>$ sox -n sine.wav synth 1.0 sine 1000.0</code><br>合成频率为 1000 Hz 长度为 1 秒的正弦波，保存至 <code>sine.wav</code> 文件中。</p><p><code>synth</code> 支持合成的声音类型包括 <strong>sine、square、triangle、sawtooth、trapetz (trapezoidal)、exp (exponential)、whitenoise、pinknoise 和 brownnoise</strong>。</p><h4 id="6-静音效果"><a href="#6-静音效果" class="headerlink" title="6. 静音效果"></a>6. 静音效果</h4><p>sox 命令可以创建静音状态的音频片段，使用<code>-n</code>选项表示没有输入，通过<code>trim</code>效果指定需要静音的片段。</p><p><code>$ sox -n -r 48000 silence.wav trim 0.0 0.250</code><br>在 <code>slience.wav</code>文件中创建一段长度为 250ms 采样率为 48000Hz 的静音片段。</p><h4 id="7-混合音频"><a href="#7-混合音频" class="headerlink" title="7. 混合音频"></a>7. 混合音频</h4><p>sox 命令的 <code>-m</code>选项可以将两个音频文件混合以后生成输出文件。</p><p><code>$ sox -m sine100.wav sine250.wav sine100-250.wav</code><br>将<code>sine100.wav</code> 和 <code>sine250.wav</code> 两个音频文件融合以后作为<code>sine100-250.wav</code>文件的音频数据。</p><p><code>$ sox -m -v0.5 music.mp3 -v2 speech.wav presentation.wav</code><br>将背景音乐（<code>music.mp3</code>）音量降低一半后与放大 2 倍音量的人声数据（<code>speech.wav</code>）融合。<br>如果不确定融合效果，可以先通过 play 命令使用相同的参数对结果进行“预览”：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">$ play -m -v0.5 music.mp3 -v2 speech.wav<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>PS：</strong></p><p>与前面的<code>-M</code> 选项不同，<code>-m</code>选项倾向于对<strong>声道数据</strong>的混合，即两个单声道文件通过 <code>-m</code>混合以后输出仍是单声道数据。输出文件中的单个声道包含了输入的两个声道的特征。</p><p>而 <code>-M</code> 选项更倾向于对音频文件的合并，默认不对声道数据进行混合。所以两个单声道文件通过 <code>-M</code> 合并以后默认输出双声道音频。输出文件中的两个声道分别对应于输入的两个声道（数据没有混合）。除非通过<code>-c</code>选项手动指定输出文件的声道数量。</p><h4 id="8-改变播放速度"><a href="#8-改变播放速度" class="headerlink" title="8. 改变播放速度"></a>8. 改变播放速度</h4><p>可以通过 stretch 效果改变音频文件的播放速度，同时不会导致音高的变化。</p><p>如以 2x 倍速播放 <code>Faded.wav</code>文件：<br><code>$ play Faded.wav stretch 0.5</code></p><p>也可以通过<code>speed</code>效果调节播放速度（相应地音高也会发生变化）：<br><code>$ play Faded.wav speed 2</code></p><p>此外，可以使用 <code>pitch</code> 效果调节音频片段的音高，以<strong>音分</strong>（cents）为单位。</p><p><code>$ play Faded.wav pitch 200</code><br>将 <code>Faded.wav</code> 文件中的音频提高 200 音分，即提高 2 个半音的音程（每一个半音的音程等于 100 音分）。</p><p>本文转载自：<a href="https://blog.csdn.net/qq_39516859/article/details/87980189">https://blog.csdn.net/qq_39516859/article/details/87980189</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>fvSchemes</title>
    <link href="/OpenFOAM/fvSchemes/"/>
    <url>/OpenFOAM/fvSchemes/</url>
    
    <content type="html"><![CDATA[<p>Some usage for fvSchemes.</p><span id="more"></span><h1 id="1-实例"><a href="#1-实例" class="headerlink" title="1. 实例"></a>1. 实例</h1><p>下面是<code>fvSchemes</code> 文件的一个典型例子，其内容（略去文件头部注释）：</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;文件说明FoamFile&#123;    version     2.0;                &#x2F;&#x2F;版本号    format      ascii;              &#x2F;&#x2F;文本格式    class       dictionary;         &#x2F;&#x2F;类型为字典文件    location    &quot;system&quot;;           &#x2F;&#x2F;所在目录    object      fvSchemes;          &#x2F;&#x2F;对象名&#125;&#x2F;&#x2F;时间一阶导项(非定常项)格式ddtSchemes&#123;    default         Euler;&#125;&#x2F;&#x2F;梯度项格式gradSchemes&#123;    default         Gauss linear;    grad(T)         Gauss linear;&#125;&#x2F;&#x2F;散度项格式divSchemes&#123;    default         none;&#125;&#x2F;&#x2F;拉普拉斯项格式laplacianSchemes&#123;    default         none;    laplacian(DT,T) Gauss linear corrected;&#125;&#x2F;&#x2F;插值格式interpolationSchemes&#123;    default         linear;&#125;&#x2F;&#x2F;面法向梯度格式snGradSchemes&#123;    default         corrected;&#125;&#x2F;&#x2F;需要用来计算通量的场fluxRequired&#123;    default         no;    T;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h1 id="2-fvSchemes-文件简介"><a href="#2-fvSchemes-文件简介" class="headerlink" title="2. fvSchemes 文件简介"></a>2. fvSchemes 文件简介</h1><p><code>system</code>目录下的<code>fvSchemes</code>文件用来设置 <strong>离散格式</strong>， 凡是求解器里面出现的方程，都需要在这里面进行离散格式设置。<code>fvSchemes</code>中需要指定的信息主要分为<code>7</code>类：</p><div class="table-container"><table><thead><tr><th style="text-align:center">子字典关键字</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>interpolationSchemes</code></td><td style="text-align:center">插值格式</td></tr><tr><td style="text-align:center"><code>snGradSchemes</code></td><td style="text-align:center">面法向梯度格式</td></tr><tr><td style="text-align:center"><code>timeScheme</code></td><td style="text-align:center">时间导数项,格式</td></tr><tr><td style="text-align:center"><code>divSchemes</code></td><td style="text-align:center">散度项格式</td></tr><tr><td style="text-align:center"><code>gradSchemes</code></td><td style="text-align:center">梯度项格式</td></tr><tr><td style="text-align:center"><code>laplacianSchemes</code></td><td style="text-align:center">拉普拉斯项格式</td></tr><tr><td style="text-align:center"><code>fluxRequired</code></td><td style="text-align:center">需要计算通量的场</td></tr></tbody></table></div><hr><h1 id="3-插值格式-interpolationSchemes"><a href="#3-插值格式-interpolationSchemes" class="headerlink" title="3. 插值格式 interpolationSchemes"></a>3. 插值格式 interpolationSchemes</h1><p>插值格式在子字典<code>interpolationSchemes</code>下设置，通常用来指定从相邻两个 <strong>体单元</strong> 计算公共 <strong>面单元</strong> 处变量值的计算方法。<code>OpenFOAM</code>中可用的插值格式可以分为四类：</p><div class="table-container"><table><thead><tr><th style="text-align:center">类别</th><th style="text-align:center">插值格式</th><th style="text-align:center">用途</th></tr></thead><tbody><tr><td style="text-align:center">一类</td><td style="text-align:center">中心格式</td><td style="text-align:center">应用于普通场插值</td></tr><tr><td style="text-align:center">二类</td><td style="text-align:center">迎风格式</td><td style="text-align:center">主要应用于对流项</td></tr><tr><td style="text-align:center">三类</td><td style="text-align:center">TVD家族</td><td style="text-align:center">主要应用于对流项</td></tr><tr><td style="text-align:center">四类</td><td style="text-align:center">NVD家族</td><td style="text-align:center">主要应用于对流项</td></tr></tbody></table></div><h2 id="3-1-中心格式"><a href="#3-1-中心格式" class="headerlink" title="3.1 中心格式"></a>3.1 中心格式</h2><p>中心格式包括：</p><div class="table-container"><table><thead><tr><th style="text-align:center">中心格式</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>linear</code></td><td style="text-align:center">线性插值(中心差分)格式</td></tr><tr><td style="text-align:center"><code>cubicCorrection</code></td><td style="text-align:center">立方正交格式</td></tr><tr><td style="text-align:center"><code>midPoint</code></td><td style="text-align:center">对称加权线性插值格式</td></tr></tbody></table></div><p>中心格式的指定方式为：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">default linear;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="3-2-应用于对流项的插值格式"><a href="#3-2-应用于对流项的插值格式" class="headerlink" title="3.2 应用于对流项的插值格式"></a>3.2 应用于对流项的插值格式</h2><p>迎风格式包括：</p><div class="table-container"><table><thead><tr><th style="text-align:center">迎风格式</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>upwind</code></td><td style="text-align:center">一阶迎风格式</td></tr><tr><td style="text-align:center"><code>linearUpwind</code></td><td style="text-align:center">线性迎风格式</td></tr><tr><td style="text-align:center"><code>skewLinear</code></td><td style="text-align:center">带畸变修正线性迎风格式</td></tr><tr><td style="text-align:center"><code>filteredLinear2</code></td><td style="text-align:center">高频波过滤线性迎风格式</td></tr></tbody></table></div><p>TVD家族包括：</p><div class="table-container"><table><thead><tr><th style="text-align:center">TVD家族</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>limitedLinear</code></td><td style="text-align:center">有界线性格式</td></tr><tr><td style="text-align:center"><code>vanLeer</code></td><td style="text-align:center">van Leer有界格式</td></tr><tr><td style="text-align:center"><code>MUSCL</code></td><td style="text-align:center">MUSCL有界格式</td></tr><tr><td style="text-align:center"><code>limitedCubic</code></td><td style="text-align:center">立方正交有界格式</td></tr></tbody></table></div><p>NVD家族包括：</p><div class="table-container"><table><thead><tr><th style="text-align:center">NVD家族</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>SFCD</code></td><td style="text-align:center">自过滤中心格式</td></tr><tr><td style="text-align:center"><code>Gamma</code></td><td style="text-align:center">Gamma差分格式</td></tr></tbody></table></div><p>针对对流项的插值格式需要在通量的基础上计算插值，因此这些格式的指定需要提供通量场的名称。在<code>OpenFOAM</code>标准求解器中，体积通量名称一般为<code>phi</code>，类型<code>surfaceScalarField</code>（面心标量场），因此针对对流项的插值格式指定方式（以<code>upwind</code>格式为例）为：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">default upwind phi;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>一些基于TVD或NVD的格式需要系数，介于<code>0</code>和<code>1</code>之间，（建议值）对应标准TVD格式，能够达到最快的收敛速度，对应最高精度，例如：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">default limitedLinear phi 1.0;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="3-3-严格有界标量格式"><a href="#3-3-严格有界标量格式" class="headerlink" title="3.3 严格有界标量格式"></a>3.3 严格有界标量格式</h2><p>某些标量场是严格有界的（<strong>有界性</strong>），例如VOF模型中的流体体积分数场（也有文献将其定义为），其值严格介于<code>0</code>和<code>1</code>之间，因此，才会出现一些带有限制器的增强版格式（除<code>SFCD</code>格式外，所有的TVD家族和NVD家族都具有带限制器的增强版本）。用户如果想要指定有界场的上下限，需要在格式名称前加上前缀<code>limited</code>。例如，将<code>vanLeer</code>格式上下限设置为：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">default limitedVanLeer -2.0 3.0;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>需要注意的是，<code>OpenFOAM</code>遵循<a href="https://zh.wikipedia.org/wiki/駝峰式大小寫">小驼峰式命名法</a>，<code>limitedVanLeer</code>中的<code>V</code>是大写的，注意与<code>vanLeer</code>的区分。特别地，对类似于流体体积分数场，上下限严格为，可以添加后缀<code>01</code>，如：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">default vanLeer01;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>以下格式具有带限制器的增强版本:<code>limitedLinear</code>，<code>vanLeer</code>，<code>Gamma</code>，<code>limitedCubic</code>，<code>MUSCL</code>和<code>SuperBee</code>。</p><h2 id="3-4-矢量场专用格式"><a href="#3-4-矢量场专用格式" class="headerlink" title="3.4 矢量场专用格式"></a>3.4 矢量场专用格式</h2><p>针对矢量场的 <strong>有向性</strong>，一些带有限制器的格式具有矢量场的专用版本，使用方法为添加后缀<code>V</code>，如：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">default limitedLinearV;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>以下格式具有矢量场专用版本：<code>limitedLinearV</code>，<code>vanLeerV</code>，<code>GammaV</code>，<code>limitedCubicV</code>和<code>SFCDV</code>。</p><hr><h1 id="4-面法向梯度格式-snGradSchemes"><a href="#4-面法向梯度格式-snGradSchemes" class="headerlink" title="4. 面法向梯度格式 snGradSchemes"></a>4. 面法向梯度格式 snGradSchemes</h1><p>面法向梯度指的是变量场梯度在面处的法向分量，一般需要在单独计算面法向梯度或者指定拉普拉斯项离散格式时指定面法向梯度格式。面法向梯度格式在子字典<code>snGradSchemes</code>下设置，支持的标准格式有：</p><div class="table-container"><table><thead><tr><th style="text-align:center">snGradSchemes</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>corrected</code></td><td style="text-align:center">显式非正交修正格式</td></tr><tr><td style="text-align:center"><code>uncorrected</code></td><td style="text-align:center">无非正交修正格式</td></tr><tr><td style="text-align:center"><code>limited</code></td><td style="text-align:center">非完全正交修正格式</td></tr><tr><td style="text-align:center"><code>bounded</code></td><td style="text-align:center">对正值标量的有界修正格式</td></tr><tr><td style="text-align:center"><code>fourth</code></td><td style="text-align:center">四阶格式（不详）</td></tr></tbody></table></div><p>特别地，非完全正交修正格式<code>limited</code>需要指定系数，其值介于<code>0</code>和<code>1</code>之间：</p><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>0</code></td><td style="text-align:center">无非正交修正</td></tr><tr><td style="text-align:center"><code>0.333</code></td><td style="text-align:center">限制非正交修正部分不超过正交部分的一半</td></tr><tr><td style="text-align:center"><code>0.5</code></td><td style="text-align:center">限制非正交修正部分不超过正交部分</td></tr><tr><td style="text-align:center"><code>1</code></td><td style="text-align:center">不限制非正交修正部分，等同于<code>corrected</code>格式</td></tr></tbody></table></div><p><code>limited</code>格式使用如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">default limited 0.5;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>有关非正交修正的具体内容，请阅读<a href="http://link.springer.com/book/10.1007/978-3-319-16874-6">文献</a>第<code>8.6</code>节。</p><hr><h1 id="5-时间一阶导项-格式-ddtSchemes"><a href="#5-时间一阶导项-格式-ddtSchemes" class="headerlink" title="5. 时间一阶导项 格式 ddtSchemes"></a>5. 时间一阶导项 格式 ddtSchemes</h1><p>时间一阶导项格式在子字典<code>ddtSchemes</code>下设置，支持的标准格式有：</p><div class="table-container"><table><thead><tr><th style="text-align:center">ddtSchemes</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>Euler</code></td><td style="text-align:center">一阶精度，有界，隐式</td></tr><tr><td style="text-align:center"><code>localEuler</code></td><td style="text-align:center">局部时间步，一阶精度，有界，隐式</td></tr><tr><td style="text-align:center"><code>CrankNicolson</code></td><td style="text-align:center">二阶精度，有界，隐式</td></tr><tr><td style="text-align:center"><code>backward</code></td><td style="text-align:center">二阶精度，隐式</td></tr><tr><td style="text-align:center"><code>steadyState</code></td><td style="text-align:center">定常，忽略时间导数项</td></tr></tbody></table></div><p>其中，<code>CrankNicolson</code>格式中的系数介于<code>0</code>和<code>1</code>之间，时为纯Crank-Nicolson格式，时为纯Euler格式。</p><hr><h1 id="6-时间二阶导项-格式-d2dt2Schemes"><a href="#6-时间二阶导项-格式-d2dt2Schemes" class="headerlink" title="6. 时间二阶导项 格式 d2dt2Schemes"></a>6. 时间二阶导项 格式 d2dt2Schemes</h1><p>时间二阶导项格式在子字典<code>d2dt2Schemes</code>下设置，只支持<code>Euler</code>格式。</p><hr><h1 id="7-梯度项-格式-gradSchemes"><a href="#7-梯度项-格式-gradSchemes" class="headerlink" title="7. 梯度项 格式 gradSchemes"></a>7. 梯度项 格式 gradSchemes</h1><p>梯度 格式在子字典<code>gradSchemes</code>下设置，支持的标准格式有：</p><div class="table-container"><table><thead><tr><th style="text-align:center">gradSchemes</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>Gauss &lt;interpolationScheme&gt;</code></td><td style="text-align:center">高斯积分，<code>&lt;interpolationScheme&gt;</code>设置插值格式，二阶精度</td></tr><tr><td style="text-align:center"><code>leastSquares</code></td><td style="text-align:center">最小二乘法，二阶精度</td></tr><tr><td style="text-align:center"><code>fourth</code></td><td style="text-align:center">最小二乘法，四阶精度</td></tr><tr><td style="text-align:center"><code>cellLimited &lt;gradScheme&gt;</code></td><td style="text-align:center">上述格式的体单元有界版本</td></tr><tr><td style="text-align:center"><code>faceLimited &lt;gradScheme&gt;</code></td><td style="text-align:center">上述格式的面单元有界版本</td></tr></tbody></table></div><hr><h1 id="8-散度项-格式-divSchemes"><a href="#8-散度项-格式-divSchemes" class="headerlink" title="8. 散度项 格式 divSchemes"></a>8. 散度项 格式 divSchemes</h1><p>此项一般只出现在涉及流体流动的数值模拟中，例如（标量形式）或（矢量形式）。以动量方程中的对流项为例，基于有限体积积分有：</p><p>其中，表示面处的质量通量，即。也因此其在<code>OpenFOAM</code>求解器中出现方式为<code>div(phi, U)</code>。</p><p>散度项 格式在子字典<code>divSchemes</code>下设置，只支持<code>Gauss &lt;interpolationScheme&gt;</code>格式。为线化此非线性项，在对对流项进行离散的过程中，是作为已知量参与计算的，一般使用上一时间步的速度场计算得到，即</p><p>其中，的数值通过Rhie-Chow动量插值计算得到，具体参考<a href="http://link.springer.com/book/10.1007/978-3-319-16874-6">文献</a>第<code>15.4</code>节。因此，这里的插值格式<code>&lt;interpolationScheme&gt;</code>只针对上式中的，其数学特性如下：</p><div class="table-container"><table><thead><tr><th style="text-align:center"><code>&lt;interpolationScheme&gt;</code></th><th style="text-align:center">数学特性</th></tr></thead><tbody><tr><td style="text-align:center"><code>linear</code></td><td style="text-align:center">二阶，无界</td></tr><tr><td style="text-align:center"><code>skewLinear</code></td><td style="text-align:center">二阶，带skewness修正，无界</td></tr><tr><td style="text-align:center"><code>cubicCorrected</code></td><td style="text-align:center">四阶，无界</td></tr><tr><td style="text-align:center"><code>upwind</code></td><td style="text-align:center">一阶，有界</td></tr><tr><td style="text-align:center"><code>linearUpwind</code></td><td style="text-align:center">一/二阶，有界</td></tr><tr><td style="text-align:center"><code>QUICK</code></td><td style="text-align:center">一/二阶，有界</td></tr><tr><td style="text-align:center">TVD schemes</td><td style="text-align:center">一/二阶，有界</td></tr><tr><td style="text-align:center"><code>SFCD</code></td><td style="text-align:center">二阶，有界</td></tr><tr><td style="text-align:center">NVD schemes</td><td style="text-align:center">一/二阶，有界</td></tr></tbody></table></div><hr><h1 id="9-拉普拉斯项-格式-laplacianSchemes"><a href="#9-拉普拉斯项-格式-laplacianSchemes" class="headerlink" title="9. 拉普拉斯项 格式 laplacianSchemes"></a>9. 拉普拉斯项 格式 laplacianSchemes</h1><p>在流体流动的动量方程中，拉普拉斯项一般为（在<code>OpenFOAM</code>求解器中出现方式为<code>laplacian(nu, U)</code>），基于有限体积积分有：</p><p>因此，需要指定的插值格式，同时也要指定面法向梯度的离散格式。拉普拉斯项 格式子字典<code>laplacianSchemes</code>下设置，只支持<code>Gauss &lt;interpolationScheme&gt; &lt;snGradScheme&gt;</code>格式，其中，<code>&lt;interpolationScheme&gt;</code>用于指定的插值格式，<code>&lt;snGradScheme&gt;</code>用于指定面法向梯度的离散格式：</p><div class="table-container"><table><thead><tr><th style="text-align:center"><code>&lt;snGradScheme&gt;</code></th><th style="text-align:center">数学特性</th></tr></thead><tbody><tr><td style="text-align:center"><code>corrected</code></td><td style="text-align:center">无界，二阶，守恒</td></tr><tr><td style="text-align:center"><code>uncorrected</code></td><td style="text-align:center">有界，一阶，非守恒</td></tr><tr><td style="text-align:center"><code>limited</code></td><td style="text-align:center"><code>corrected</code>和<code>uncorrected</code>的混合格式</td></tr><tr><td style="text-align:center"><code>bounded</code></td><td style="text-align:center">有界，一阶</td></tr><tr><td style="text-align:center"><code>fourth</code></td><td style="text-align:center">无界，四阶，守恒</td></tr></tbody></table></div><hr><h1 id="10-需要计算通量的场-fluxRequired"><a href="#10-需要计算通量的场-fluxRequired" class="headerlink" title="10. 需要计算通量的场 fluxRequired"></a>10. 需要计算通量的场 fluxRequired</h1><p><code>fluxRequired</code>子字典列举了数值模拟过程中需要计算通量的场。例如流体流动模拟中，在求解压力<code>p</code>的方程后需要计算通量，这可以通过在<code>fluxRequired</code>子字典中简单地指定：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">fluxRequired &#123;     p; &#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><hr>]]></content>
    
    
    
    <tags>
      
      <tag>OpenFOAM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fvSolution</title>
    <link href="/OpenFOAM/fvSolution/"/>
    <url>/OpenFOAM/fvSolution/</url>
    
    <content type="html"><![CDATA[<p>Some usage for fvSolution.</p><span id="more"></span><h1 id="1-实例"><a href="#1-实例" class="headerlink" title="1. 实例"></a>1. 实例</h1><p>下面是<code>fvSolution</code> 文件的一个典型例子（应用于<code>icoFoam</code>求解器），其内容（略去文件头部注释）：</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;文件说明FoamFile&#123;    version     2.0;                &#x2F;&#x2F;版本号    format      ascii;              &#x2F;&#x2F;文本格式    class       dictionary;         &#x2F;&#x2F;类型为字典文件    location    &quot;system&quot;;           &#x2F;&#x2F;所在目录    object      fvSolution;         &#x2F;&#x2F;对象名&#125;&#x2F;&#x2F;代数方程组求解设置solvers&#123;    &#x2F;&#x2F;压力场p    p    &#123;        solver          PCG;        &#x2F;&#x2F;求解器        preconditioner  DIC;        &#x2F;&#x2F;预处理器        tolerance       1e-06;      &#x2F;&#x2F;预定残值        relTol          0;          &#x2F;&#x2F;预定相对残值    &#125;    &#x2F;&#x2F;速度场U    U    &#123;        solver          smoothSolver;       &#x2F;&#x2F;光滑求解器        smoother        symGaussSeidel;     &#x2F;&#x2F;光滑器        tolerance       1e-05;              &#x2F;&#x2F;预定残值        relTol          0;                  &#x2F;&#x2F;预定相对残值    &#125;&#125;&#x2F;&#x2F;PISO算法设置PISO&#123;    nCorrectors     2;                  &#x2F;&#x2F;PISO修正次数    nNonOrthogonalCorrectors 0;         &#x2F;&#x2F;非正交修正次数    pRefCell        0;                  &#x2F;&#x2F;压力参考单元    pRefValue       0;                  &#x2F;&#x2F;压力参考值&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><h1 id="2-fvSolution-文件分析"><a href="#2-fvSolution-文件分析" class="headerlink" title="2. fvSolution 文件分析"></a>2. fvSolution 文件分析</h1><p><code>system</code>目录下的<code>fvSolution</code>文件用来设置涉及代数方程组求解和速度-压力耦合相关算法的参数，主要包括 <strong>代数方程组求解</strong>，<strong>耦合算法</strong> 和 <strong>欠松弛处理</strong> 三个部分，分别通过<code>solvers</code>，<code>PISO</code>或<code>SIMPLE</code>和<code>relaxationFactors</code>等子字典设置。</p><hr><h1 id="3-代数方程组求解"><a href="#3-代数方程组求解" class="headerlink" title="3. 代数方程组求解"></a>3. 代数方程组求解</h1><p>在子字典<code>solvers</code>中，每个求解变量均要独立在以变量名命名的子字典（<code>p</code>，<code>U</code>）中设置求解相关信息。这些信息包括代数方程组求解器<code>solver</code>，预处理器<code>preconditioner</code>，光滑器<code>smoother</code>，残值<code>tolerance</code>和相对残值<code>relTol</code>。</p><h2 id="3-1-solver-代数方程组求解器"><a href="#3-1-solver-代数方程组求解器" class="headerlink" title="3.1 solver 代数方程组求解器"></a>3.1 solver 代数方程组求解器</h2><p><code>OpenFOAM</code>中的代数方程组求解器均为迭代求解器：</p><div class="table-container"><table><thead><tr><th style="text-align:center">solver</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>PCG/PBiCG</code></td><td style="text-align:center">预处理共轭梯度（对称）/稳定双共轭梯度（非对称）求解器</td></tr><tr><td style="text-align:center"><code>smoothSolver</code></td><td style="text-align:center">光滑求解器</td></tr><tr><td style="text-align:center"><code>GAMG</code></td><td style="text-align:center">几何-代数多重网格求解器</td></tr><tr><td style="text-align:center"><code>diagonal</code></td><td style="text-align:center">对角求解器（显式离散）</td></tr></tbody></table></div><h2 id="3-2-preconditioner-预处理器"><a href="#3-2-preconditioner-预处理器" class="headerlink" title="3.2 preconditioner 预处理器"></a>3.2 preconditioner 预处理器</h2><p>预处理器本质上为一个改变原先系数矩阵条件数的左乘矩阵，<code>PCG/PBiCG</code>求解器可以使用的预处理器有：</p><div class="table-container"><table><thead><tr><th style="text-align:center">preconditioner</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>DIC</code></td><td style="text-align:center">不完全的对角Cholesky预处理器（对称矩阵）</td></tr><tr><td style="text-align:center"><code>FDIC</code></td><td style="text-align:center">不完全的快速对角Cholesky预处理器（带缓存的<code>DIC</code>）</td></tr><tr><td style="text-align:center"><code>DILU</code></td><td style="text-align:center">对角不完全LU预处理器（非对称）</td></tr><tr><td style="text-align:center"><code>diagonal</code></td><td style="text-align:center">对角预处理器</td></tr><tr><td style="text-align:center"><code>GAMG</code></td><td style="text-align:center">几何-代数多重网格预处理器</td></tr><tr><td style="text-align:center"><code>none</code></td><td style="text-align:center">不进行预处理</td></tr></tbody></table></div><h2 id="3-3-smoothSolver-光滑求解器"><a href="#3-3-smoothSolver-光滑求解器" class="headerlink" title="3.3 smoothSolver 光滑求解器"></a>3.3 smoothSolver 光滑求解器</h2><p>使用光滑求解器<code>smoothSolver</code>需要指定所使用的光滑器<code>smoother</code>，可用的<code>smoother</code>有：</p><div class="table-container"><table><thead><tr><th style="text-align:center">preconditioner</th><th style="text-align:center">说明</th></tr></thead><tbody><tr><td style="text-align:center"><code>GaussSeidel</code></td><td style="text-align:center">高斯赛德尔光顺器</td></tr><tr><td style="text-align:center"><code>DIC</code></td><td style="text-align:center">不完全的对角Cholesky光顺器（对称矩阵）</td></tr><tr><td style="text-align:center"><code>DICGaussSeidel</code></td><td style="text-align:center">不完全的对角Cholesky-高斯赛德尔光顺器（对称矩阵）</td></tr></tbody></table></div><p>一般情况下<code>GaussSeidel</code>是最可靠的选择，但对于有些条件数不好的矩阵，<code>DIC</code>的收敛性可能更好。另外，在某些情况下，使用<code>GaussSeidel</code>进行光顺强化是非常有效的，例如<code>DICGaussSeidel</code>。此外，在重新计算残值之前需要通过为关键字<code>nSweeps</code>来指定<code>sweep</code>数。</p><h2 id="3-4-收敛准则"><a href="#3-4-收敛准则" class="headerlink" title="3.4 收敛准则"></a>3.4 收敛准则</h2><p><code>OpenFOAM</code>中的代数方程组求解器在达到下列三个条件中的 <strong>任何</strong> 一个后即停止迭代：</p><ul><li>残值达到预定值<code>tolerance</code>；</li><li>相对残值（当前残值与初始残值之比）达到预定值<code>relTol</code>；</li><li>迭代次数达到最大迭代次数<code>maxIter</code>。</li></ul><hr><h1 id="4-耦合算法"><a href="#4-耦合算法" class="headerlink" title="4. 耦合算法"></a>4. 耦合算法</h1><p>耦合算法用于处理<code>速度-压力</code>的耦合问题。大多数<code>OpenFOAM</code>的CFD求解器使用<code>PISO</code>或者<code>SIMPLE</code>算法。这些算法采用迭代技术来求解速度和压力场。<code>PISO</code>算法用来处理非稳态问题，<code>SIMPLE</code>算法用来处理稳态问题。</p><hr><h1 id="5-欠松弛处理"><a href="#5-欠松弛处理" class="headerlink" title="5. 欠松弛处理"></a>5. 欠松弛处理</h1><p>欠松弛处理主要有两种不同的使用方式：</p><ul><li>在迭代之前提高系数矩阵主对角元素数值，并且降低源项来保证系数矩阵对角占优，比如速度场<code>U</code>；</li><li>限制变量在迭代后改变的大小，比如压力场<code>p</code>。</li></ul><p>欠松弛因子介于<code>0</code>和<code>1</code>之间，越接近<code>0</code>求解越稳定，但同时也会降低求解效率；提高的数值会提高求解效率，但同时也会降低稳定性。</p><p>欠松弛因子在子字典<code>relaxationFactors</code>下指定，通过子字典名<code>equations</code>和<code>fields</code>来设置不同的欠松弛方式，例如：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">relaxationFactors&#123;    fields    &#123;        p 0.3;    &#125;    equations    &#123;        U 0.7;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><hr>]]></content>
    
    
    
    <tags>
      
      <tag>OpenFOAM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenFOAM Tips</title>
    <link href="/OpenFOAM/OpenFOAM-Tips/"/>
    <url>/OpenFOAM/OpenFOAM-Tips/</url>
    
    <content type="html"><![CDATA[<p>My OpenFOAM Tips</p> <span id="more"></span><h2 id="OpenFOAM"><a href="#OpenFOAM" class="headerlink" title="OpenFOAM"></a>OpenFOAM</h2><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++"># Calculation in filesmass            #calc &quot;$rhoSolid*$Lx*$Ly*$Lz&quot;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># Generate UserGuide</span><span class="token function">ls</span> -A1 <span class="token variable">$WM_PROJECT_DIR</span>/doc/Guides*/*UserGuide*.pdf<span class="token comment"># Calculate Reynolds stress</span>simpleFoam -postProcess -func R -latestTime<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">foamDictionary -entry <span class="token string">"numberOfSubdomains"</span> -set <span class="token variable">$thread_num</span> system/decomposeParDict<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h2 id="Paraview"><a href="#Paraview" class="headerlink" title="Paraview"></a>Paraview</h2><blockquote><p>Extract Ux</p><p><code>Ctrl+Space</code>  using Extract Component</p><p>Stream line</p><p>Add <code>Tube</code></p></blockquote>]]></content>
    
    
    
    <tags>
      
      <tag>OpenFOAM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenFOAM Coding Style</title>
    <link href="/OpenFOAM/OpenFOAM-Coding-Style/"/>
    <url>/OpenFOAM/OpenFOAM-Coding-Style/</url>
    
    <content type="html"><![CDATA[<h1 id="OpenFOAM-Coding-Style-Guide"><a href="#OpenFOAM-Coding-Style-Guide" class="headerlink" title="OpenFOAM Coding Style Guide"></a>OpenFOAM Coding Style Guide</h1><span id="more"></span><h2 id="1-Code"><a href="#1-Code" class="headerlink" title="1 Code"></a>1 Code</h2><h3 id="1-1-General"><a href="#1-1-General" class="headerlink" title="1.1 General"></a>1.1 General</h3><ul><li><p>80 character lines max</p></li><li><p>The normal indentation is 4 spaces per logical level.</p></li><li><p>Use spaces for indentation, not tab characters.</p></li><li><p>Avoid trailing whitespace.</p></li><li><p>The body of control statements (eg, <code>if</code>, <code>else</code>, <code>while</code>, <em>etc.</em>). is always delineated with braces. A possible exception can be<br>made in conjunction with <code>break</code> or <code>continue</code> as part of a control structure.</p></li><li><p>The body of <code>case</code> statements is usually delineated with braces.</p></li><li><p>Stream output</p><ul><li><p>&lt;&lt;   is always four characters after the start of the stream, so that the &lt;&lt; symbols align, i.e.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Info&lt;&lt; ...os  &lt;&lt; ...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>so</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">WarningInFunction    &lt;&lt; &quot;Warning message&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><strong>not</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">WarningInFunction&lt;&lt; &quot;Warning message&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li></ul></li><li><p>Remove unnecessary class section headers, i.e. remove</p></li></ul><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F; * * * * * * * * * * * * * Private Member Functions  * * * * * * * * * * * &#x2F;&#x2F;    &#x2F;&#x2F; Check    &#x2F;&#x2F; Edit    &#x2F;&#x2F; Write<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>if they contain nothing, even if planned for ‘future use’</p><ul><li>Class titles should be centred</li></ul><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;*---------------------------------------------------------------------------*\                        Class exampleClass Declaration\*---------------------------------------------------------------------------*&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p><strong>not</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;*---------------------------------------------------------------------------*\                Class exampleClass Declaration\*---------------------------------------------------------------------------*&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="1-2-The-H-Header-Files"><a href="#1-2-The-H-Header-Files" class="headerlink" title="1.2 The .H Header Files"></a>1.2 The <em>.H</em> Header Files</h3><ul><li><p>Header file spacing</p><ul><li>Leave two empty lines between sections (as per functions in the <em>.C</em> file <em>etc.</em>)</li></ul></li><li><p>Use //- Comment comments in header file to add descriptions to class data and functions do be included in the Doxygen documentation:</p><ul><li><p>Text on the line starting with <code>//-</code> becomes the Doxygen brief description;</p></li><li><p>Text on subsequent lines becomes the Doxygen detailed description</p><p>e.g.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;- A function which returns a thing  &#x2F;&#x2F;  This is a detailed description of the function&#x2F;&#x2F;  which processes stuff and returns other stuff  &#x2F;&#x2F;  depending on things.  thing function(stuff1, stuff2);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>List entries start with - or -# for numbered lists but cannot start on the line immediately below the brief description so</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;- Compare triFaces  &#x2F;&#x2F;  Returns:&#x2F;&#x2F;  -  0: different  &#x2F;&#x2F;  - +1: identical  &#x2F;&#x2F;  - -1: same face, but different orientation  static inline int compare(const triFace&amp;, const triFace&amp;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>or</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;- Compare triFaces returning 0, +1 or -1  &#x2F;&#x2F;&#x2F;&#x2F;  -  0: different  &#x2F;&#x2F;  - +1: identical  &#x2F;&#x2F;  - -1: same face, but different orientation  static inline int compare(const triFace&amp;, const triFace&amp;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>not</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;- Compare triFaces returning 0, +1 or -1  &#x2F;&#x2F;  -  0: different&#x2F;&#x2F;  - +1: identical  &#x2F;&#x2F;  - -1: same face, but different orientation  static inline int compare(const triFace&amp;, const triFace&amp;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>List can be nested for example</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;- Search for \em name  &#x2F;&#x2F;  in the following hierarchy:&#x2F;&#x2F;  -# personal settings:  &#x2F;&#x2F;    - ~&#x2F;.OpenFOAM&#x2F;\&lt;VERSION\&gt;&#x2F;  &#x2F;&#x2F;      &lt;em&gt;for version-specific files&lt;&#x2F;em&gt;  &#x2F;&#x2F;    - ~&#x2F;.OpenFOAM&#x2F;  &#x2F;&#x2F;      &lt;em&gt;for version-independent files&lt;&#x2F;em&gt;  &#x2F;&#x2F;  -# site-wide settings:  &#x2F;&#x2F;    - $WM_PROJECT_INST_DIR&#x2F;site&#x2F;\&lt;VERSION\&gt;  &#x2F;&#x2F;      &lt;em&gt;for version-specific files&lt;&#x2F;em&gt;  &#x2F;&#x2F;    - $WM_PROJECT_INST_DIR&#x2F;site&#x2F;  &#x2F;&#x2F;      &lt;em&gt;for version-independent files&lt;&#x2F;em&gt;  &#x2F;&#x2F;  -# shipped settings:  &#x2F;&#x2F;    - $WM_PROJECT_DIR&#x2F;etc&#x2F;  &#x2F;&#x2F;  &#x2F;&#x2F;  \return the full path name or fileName() if the name cannot be found  &#x2F;&#x2F;  Optionally abort if the file cannot be found  fileName findEtcFile(const fileName&amp;, bool mandatory&#x3D;false);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>For more details see the Doxygen documentation.</p></li></ul></li><li><p>Destructor</p><ul><li><p>When adding a comment to the destructor use //- and code as a normal function:</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">&#x2F;&#x2F;- Destructor~className();<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li></ul></li><li><p>Inline functions</p><ul><li>Use inline functions where appropriate in a separate <em>classNameI.H</em> file. Avoid cluttering the header file with function bodies.</li></ul></li></ul><h3 id="1-3-The-C-Source-Files"><a href="#1-3-The-C-Source-Files" class="headerlink" title="1.3 The .C Source Files"></a>1.3 The <em>.C</em> Source Files</h3><ul><li><p>Do not open/close namespaces in a .C file</p><ul><li><p>Fully scope the function name, i.e.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Foam::returnType Foam::className::functionName()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>not</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">namespace Foam&#123;    ...    returnType className::functionName()  ...&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>Exception</strong><br>When there are multiple levels of namespace, they may be used in the <em>.C</em> file to avoid excessive clutter, i.e.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">namespace Foam&#123;namespace compressible&#123;namespace RASModels&#123;    ...&#125; &#x2F;&#x2F; End namespace RASModels&#125; &#x2F;&#x2F; End namespace compressible&#125; &#x2F;&#x2F; End namespace Foam<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul></li><li>Use two empty lines between functions</li></ul><h3 id="1-4-Coding-Practice"><a href="#1-4-Coding-Practice" class="headerlink" title="1.4 Coding Practice"></a>1.4 Coding Practice</h3><ul><li><p>Passing data as arguments or return values:</p><ul><li>Pass bool, label, scalar and other primitive types as copy, anything larger by reference.</li></ul></li><li><p>const</p></li><li><p>Use everywhere it is applicable.</p></li><li><p>Variable initialisation using</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">const className&amp; variableName &#x3D; otherClass.data();<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>not</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">const className&amp; variableName(otherClass.data());<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>Virtual functions</p><ul><li>If a class is virtual, make all derived classes virtual.</li></ul></li></ul><h3 id="1-5-Conditional-Statements"><a href="#1-5-Conditional-Statements" class="headerlink" title="1.5 Conditional Statements"></a>1.5 Conditional Statements</h3><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">if (condition)&#123;    code;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>OR</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">if(   long condition)&#123;    code;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>not</strong> (no space between <code>if</code> and <code>(</code> used)</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">if(condition)&#123;    code;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="1-6-for-and-while-Loops"><a href="#1-6-for-and-while-Loops" class="headerlink" title="1.6 for and while Loops"></a>1.6 <code>for</code> and <code>while</code> Loops</h3><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">for (i &#x3D; 0; i &lt; maxI; i++)&#123;    code;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>OR</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">for(    i &#x3D; 0;    i &lt; maxI;    i++)&#123;    code;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>not</strong> this (no space between <code>for</code> and <code>(</code> used)</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">for(i &#x3D; 0; i &lt; maxI; i++)&#123;    code;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>Note that when indexing through iterators, it is often slightly more efficient to use the pre-increment form. Eg, <code>++iter</code> instead of <code>iter++</code></p><h3 id="1-7-forAll-forAllIter-forAllConstIter-etc-loops"><a href="#1-7-forAll-forAllIter-forAllConstIter-etc-loops" class="headerlink" title="1.7 forAll, forAllIter, forAllConstIter, etc. loops"></a>1.7 <code>forAll</code>, <code>forAllIter</code>, <code>forAllConstIter</code>, <em>etc.</em> loops</h3><p>Like <code>for</code> loops, but</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">forAll(<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p><strong>not</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">forAll (<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>Using the <code>forAllIter</code> and <code>forAllConstIter</code> macros is generally advantageous – less typing, easier to find later. However, since<br>they are macros, they will fail if the iterated object contains any commas <em>e.g.</em> following will FAIL!:</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">forAllIter(HashTable&lt;labelPair, edge, Hash&lt;edge&gt;&gt;, foo, iter)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>These convenience macros are also generally avoided in other container classes and OpenFOAM primitive classes.</p><h3 id="1-8-Splitting-Over-Multiple-Lines"><a href="#1-8-Splitting-Over-Multiple-Lines" class="headerlink" title="1.8 Splitting Over Multiple Lines"></a>1.8 Splitting Over Multiple Lines</h3><h4 id="1-8-1-Splitting-return-type-and-function-name"><a href="#1-8-1-Splitting-return-type-and-function-name" class="headerlink" title="1.8.1 Splitting return type and function name"></a>1.8.1 Splitting return type and function name</h4><ul><li><p>Split initially after the function return type and left align</p></li><li><p>Do not put const onto its own line – use a split to keep it with the function name and arguments.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">const Foam::longReturnTypeName&amp;Foam::longClassName::longFunctionName const<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><strong>not</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">const Foam::longReturnTypeName&amp;    Foam::longClassName::longFunctionName const<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><strong>nor</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">const Foam::longReturnTypeName&amp; Foam::longClassName::longFunctionNameconst<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><strong>nor</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">const Foam::longReturnTypeName&amp; Foam::longClassName::longFunctionName const<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>If it needs to be split again, split at the function name (leaving behind the preceding scoping =::=s), and again, left align, i.e.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">const Foam::longReturnTypeName&amp;Foam::veryveryveryverylongClassName::veryveryveryverylongFunctionName const<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li></ul><h4 id="1-8-2-Splitting-long-lines-at-an-“-”"><a href="#1-8-2-Splitting-long-lines-at-an-“-”" class="headerlink" title="1.8.2 Splitting long lines at an “=”"></a>1.8.2 Splitting long lines at an “=”</h4><p>Indent after split</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">variableName &#x3D;    longClassName.longFunctionName(longArgument);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>OR (where necessary)</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">variableName &#x3D;    longClassName.longFunctionName    (        longArgument1,        longArgument2    );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><strong>not</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">variableName &#x3D;longClassName.longFunctionName(longArgument);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p><strong>nor</strong></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">variableName &#x3D; longClassName.longFunctionName(    longArgument1,    longArgument2);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="1-9-Maths-and-Logic"><a href="#1-9-Maths-and-Logic" class="headerlink" title="1.9 Maths and Logic"></a>1.9 Maths and Logic</h3><ul><li><p>Operator spacing</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">a + b, a - ba*b, a&#x2F;ba &amp; b, a ^ ba &#x3D; b, a !&#x3D; ba &lt; b, a &gt; b, a &gt;&#x3D; b, a &lt;&#x3D; ba || b, a &amp;&amp; b<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>Splitting formulae over several lines: split and indent as per “splitting long lines at an =” with the operator on the lower line. Align operator so that first variable, function or bracket on the next line is 4 spaces indented i.e.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">variableName &#x3D;    a*(a + b)   *exp(c&#x2F;d)   *(k + t);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>This is sometimes more legible when surrounded by extra parentheses:</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">variableName &#x3D;(    a*(a + b)   *exp(c&#x2F;d)   *(k + t));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>Splitting logical tests over several lines: outdent the operator so that the next variable to test is aligned with the four space indentation, i.e.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">if(    a &#x3D;&#x3D; true &amp;&amp; b &#x3D;&#x3D; c)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h2 id="2-Documentation"><a href="#2-Documentation" class="headerlink" title="2 Documentation"></a>2 Documentation</h2><h3 id="2-1-General"><a href="#2-1-General" class="headerlink" title="2.1 General"></a>2.1 General</h3><ul><li><p>For readability in the comment blocks, certain tags are used that are translated by pre-filtering the file before sending it to Doxygen.</p></li><li><p>The tags start in column 1, the contents follow on the next lines and indented by 4 spaces. The filter removes the leading 4 spaces from the following lines until the next tag that starts in column 1.</p></li><li><p>The ‘Class’ and ‘Description’ tags are the most important ones.</p></li><li><p>The first paragraph following the ‘Description’ will be used for the brief description, the remaining paragraphs become the detailed description. For example,</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Class    Foam::myClassDescription    A class for specifying the documentation style.    The class is implemented as a set of recommendations that may    sometimes be useful.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>The class name must be qualified by its namespace, otherwise Doxygen will think you are documenting some other class.</p></li><li><p>If you don’t have anything to say about the class (at the moment), use the namespace-qualified class name for the description. This aids with finding these under-documented classes later.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Class    Foam::myUnderDocumentedClassDescription    Foam::myUnderDocumentedClass<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li><li><p>Use ‘Class’ and ‘Namespace’ tags in the header files. The Description block then applies to documenting the class.</p></li><li><p>Use ‘InClass’ and ‘InNamespace’ in the source files. The Description block then applies to documenting the file itself.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">InClass    Foam::myClassDescription    Implements the read and writing of files.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><h3 id="2-2-Doxygen-Special-Commands"><a href="#2-2-Doxygen-Special-Commands" class="headerlink" title="2.2 Doxygen Special Commands"></a>2.2 Doxygen Special Commands</h3><p>Doxygen has a large number of special commands with a <code>\</code> prefix.</p><p>Since the filtering removes the leading spaces within the blocks, the Doxygen commands can be inserted within the block without problems.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">InClass    Foam::myClassDescription    Implements the read and writing of files.    An example input file:    \verbatim        patchName        &#123;            type        myPatchType;            refValue    100;            value       uniform 1;        &#125;    \endverbatim    Within the implementation, a loop over all patches is done:    \code        forAll(patches, patchI)        &#123;            ...  &#x2F;&#x2F; some operation        &#125;    \endcode<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="2-3-HTML-Special-Commands"><a href="#2-3-HTML-Special-Commands" class="headerlink" title="2.3 HTML Special Commands"></a>2.3 HTML Special Commands</h3><p>Since Doxygen also handles HTML tags to a certain extent, the angle brackets need quoting in the documentation blocks. Non-HTML tags cause Doxygen to complain, but seem to work anyhow. <em>e.g.</em>,</p><ul><li>The template with type <code>&lt;HR&gt;</code> is a bad example.</li><li>The template with type <code>\&lt;HR\&gt;</code> is a better example.</li><li>The template with type <code>&lt;Type&gt;</code> causes Doxygen to complain about an<br>unknown html type, but it seems to work okay anyhow.</li></ul><h3 id="2-4-Documenting-Namespaces"><a href="#2-4-Documenting-Namespaces" class="headerlink" title="2.4 Documenting Namespaces"></a>2.4 Documenting Namespaces</h3><ul><li><p>If namespaces are explicitly declared with the <code>Namespace()</code> macro, they should be documented there.</p></li><li><p>If the namespaces is used to hold sub-models, the namespace can be documented in the same file as the class with the model selector.</p><p>e.g.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">documented namespace &#39;Foam::functionEntries&#39; within theclass &#39;Foam::functionEntry&#39;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>If nothing else helps, find some sensible header.</p><p>e.g.</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">namespace &#39;Foam&#39; is documented in the foamVersion.H file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ul><h3 id="2-5-Documenting-Applications"><a href="#2-5-Documenting-Applications" class="headerlink" title="2.5 Documenting Applications"></a>2.5 Documenting Applications</h3><p>Any number of classes might be defined by a particular application, but these classes will not, however, be available to other parts of OpenFOAM. At the moment, the sole purpose for running Doxygen on the applications is to extract program usage information for the ‘-doc’ option.</p><p>The documentation for a particular application is normally contained within the first comment block in a <em>.C</em> source file. The solution is this to invoke a special filter for the “<em>applications/{solver,utilities}</em>” directories that only allows the initial comment block for the <em>.C</em> files through.</p><p>The layout of the application documentation has not yet been finalized, but foamToVTK shows an initial attempt.</p><h3 id="2-6-Orthography"><a href="#2-6-Orthography" class="headerlink" title="2.6 Orthography"></a>2.6 Orthography</h3><p>Given the origins of OpenFOAM, the British spellings (<em>e.g.</em>, neighbour and not neighbor) are generally favoured.</p><p>Both ‘-ize’ and the ‘-ise’ variant are found in the code comments. If used as a variable or class method name, it is probably better to use ‘-ize’, which is considered the main form by the Oxford University Press. <em>e.g.</em>,</p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">myClass.initialize()<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="2-7-References"><a href="#2-7-References" class="headerlink" title="2.7 References"></a>2.7 References</h3><p>References provided in the <code>Description</code> section of the class header files should be formatted in the <a href="http://www.apastyle.org/">APA (American Psychological Association)</a> style <em>e.g.</em> from <code>kEpsilon.H</code></p><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">Description    Standard k-epsilon turbulence model for incompressible and compressible    flows including rapid distortion theory (RDT) based compression term.    Reference:    \verbatim        Standard model:            Launder, B. E., &amp; Spalding, D. B. (1972).            Lectures in mathematical models of turbulence.            Launder, B. E., &amp; Spalding, D. B. (1974).            The numerical computation of turbulent flows.            Computer methods in applied mechanics and engineering,            3(2), 269-289.        For the RDT-based compression term:            El Tahry, S. H. (1983).            k-epsilon equation for compressible reciprocating engine flows.            Journal of Energy, 7(4), 345-353.    \endverbatim<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>The APA style is a commonly used standard and references are available in this format from many sources including <a href="http://www.citationmachine.net/mla/cite-a-book">Citation Machine</a> and <a href="http://scholar.google.com/">Google Scholar</a>.</p><p>Date: 2011-2016</p><p>Created: 2016-04-20 Wed 10:24</p><p>From : <a href="https://openfoam.org/dev/coding-style-guide/">https://openfoam.org/dev/coding-style-guide/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>OpenFOAM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SemiImplicitSource in fvOptions</title>
    <link href="/OpenFOAM/semiImplicitSource%20in%20fvOptions/"/>
    <url>/OpenFOAM/semiImplicitSource%20in%20fvOptions/</url>
    
    <content type="html"><![CDATA[<p>本篇主要讲述具体的源项类： <code>semiImplicitSource</code> 。<br><span id="more"></span></p><p>先来看看这个源项代码中的关键部分。</p><ul><li><p>SemiImplicitSource.C</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">#include &quot;SemiImplicitSource.H&quot;#include &quot;fvMesh.H&quot;#include &quot;fvMatrices.H&quot;#include &quot;DimensionedField.H&quot;#include &quot;fvmSup.H&quot;template&lt;class Type&gt;const Foam::wordList Foam::fv::SemiImplicitSource&lt;Type&gt;::volumeModeTypeNames_(    IStringStream(&quot;(absolute specific)&quot;)()  &#x2F;&#x2F; 初始化 volumeModeTypeNames_，这里有两种模式， &#96;absolute&#96; 和 &#96;specific&#96; ，具体含义下面会解释。 );template&lt;class Type&gt;typename Foam::fv::SemiImplicitSource&lt;Type&gt;::volumeModeTypeFoam::fv::SemiImplicitSource&lt;Type&gt;::wordToVolumeModeType &#x2F;&#x2F; 将字符串转换成 volumeModeType(    const word&amp; vmtName) const&#123;    forAll(volumeModeTypeNames_, i)    &#123;        if (vmtName &#x3D;&#x3D; volumeModeTypeNames_[i])        &#123;            return volumeModeType(i);        &#125;    &#125;    FatalErrorIn    (        &quot;SemiImplicitSource&lt;Type&gt;::volumeModeType&quot;        &quot;SemiImplicitSource&lt;Type&gt;::wordToVolumeModeType(const word&amp;)&quot;    )   &lt;&lt; &quot;Unknown volumeMode type &quot; &lt;&lt; vmtName        &lt;&lt; &quot;. Valid volumeMode types are:&quot; &lt;&lt; nl &lt;&lt; volumeModeTypeNames_        &lt;&lt; exit(FatalError);    return volumeModeType(0);&#125;template&lt;class Type&gt;Foam::word Foam::fv::SemiImplicitSource&lt;Type&gt;::volumeModeTypeToWord(    const volumeModeType&amp; vmtType) const&#123;    if (vmtType &gt; volumeModeTypeNames_.size())    &#123;        return &quot;UNKNOWN&quot;;    &#125;    else    &#123;        return volumeModeTypeNames_[vmtType];    &#125;&#125;template&lt;class Type&gt;void Foam::fv::SemiImplicitSource&lt;Type&gt;::setFieldData(const dictionary&amp; dict)&#123;    fieldNames_.setSize(dict.toc().size());    injectionRate_.setSize(fieldNames_.size());    applied_.setSize(fieldNames_.size(), false);    label i &#x3D; 0;    forAllConstIter(dictionary, dict, iter)    &#123;        fieldNames_[i] &#x3D; iter().keyword();        dict.lookup(iter().keyword()) &gt;&gt; injectionRate_[i];        i++;    &#125;    &#x2F;&#x2F; Set volume normalisation    if (volumeMode_ &#x3D;&#x3D; vmAbsolute)    &#123;        VDash_ &#x3D; V_;    &#125;&#125;&#x2F;&#x2F; * * * * * * * * * * * * * * * * Constructors  * * * * * * * * * * * * * * &#x2F;&#x2F;template&lt;class Type&gt;Foam::fv::SemiImplicitSource&lt;Type&gt;::SemiImplicitSource(    const word&amp; name,    const word&amp; modelType,    const dictionary&amp; dict,    const fvMesh&amp; mesh):    option(name, modelType, dict, mesh),    volumeMode_(vmAbsolute), volumeMode 初始值为 vmAbsolute，也就是字典里的 absolute    VDash_(1.0), &#x2F;&#x2F; VDash 初始值为 1.0    injectionRate_()&#123;    read(dict);&#125;template&lt;class Type&gt;void Foam::fv::SemiImplicitSource&lt;Type&gt;::addSup &#x2F;&#x2F; 这个是最关键的函数，求解器里的 fvOptions(T)，最终就是转换为调用这个函数。(    fvMatrix&lt;Type&gt;&amp; eqn,    const label fieldI)&#123;    if (debug)    &#123;        Info&lt;&lt; &quot;SemiImplicitSource&lt;&quot; &lt;&lt; pTraits&lt;Type&gt;::typeName            &lt;&lt; &quot;&gt;::addSup for source &quot; &lt;&lt; name_ &lt;&lt; endl;    &#125;    &#x2F;&#x2F; psi 表示方程中的未知量，比如，eqn(fvm::ddt(T))，则psi其实就相当于T，其量纲也与T的量纲一致。    const GeometricField&lt;Type, fvPatchField, volMesh&gt;&amp; psi &#x3D; eqn.psi();&#x2F;&#x2F; 创建一个场 Su，其量纲为方程eqn的量纲除以体积的量纲。注意，经测试，假设eqn为（fvm::ddt(T)），则eqn的量纲为k.m^3&#x2F;s。    DimensionedField&lt;Type, volMesh&gt; Su    (        IOobject        (            name_ + fieldNames_[fieldI] + &quot;Su&quot;,            mesh_.time().timeName(),            mesh_,            IOobject::NO_READ,            IOobject::NO_WRITE        ),        mesh_,        dimensioned&lt;Type&gt;        (            &quot;zero&quot;,            eqn.dimensions()&#x2F;dimVolume,            pTraits&lt;Type&gt;::zero        ),        false    );    &#x2F;&#x2F; 这一句的意思是，将属于cells_这个集合的网格的Su赋值为fvoptions里所设置的第一个参数的值除以体积VDash。这里的VDash,如果模式为absolute，则值为cells_这个集合的网格体积之和，如果模式为specific，则其值为1.     &#x2F;&#x2F; UUIndirectList&lt;Type&gt;(Su, cells_)这一句是利用Su和cells为参数，构建一个UUIndirectList类的临时对象，并调用这个类的重载的“&#x3D;”操作符对Su进行重新赋值。        UIndirectList&lt;Type&gt;(Su, cells_) &#x3D; injectionRate_[fieldI].first()&#x2F;VDash_;    DimensionedField&lt;scalar, volMesh&gt; Sp    (        IOobject        (            name_ + fieldNames_[fieldI] + &quot;Sp&quot;,            mesh_.time().timeName(),            mesh_,            IOobject::NO_READ,            IOobject::NO_WRITE        ),        mesh_,        dimensioned&lt;scalar&gt;        (            &quot;zero&quot;,            Su.dimensions()&#x2F;psi.dimensions(),            0.0        ),        false    );        UIndirectList&lt;scalar&gt;(Sp, cells_) &#x3D; injectionRate_[fieldI].second()&#x2F;VDash_;    &#x2F;&#x2F; fvMatrix&lt;Type&gt; 类中对“+&#x3D;”操作符进行了重载，所以，eqn与Su的相加，相当于eqn+Su*mesh.V()，要不然eqn与Su的量纲不一致。    eqn +&#x3D; Su + fvm::SuSp(Sp, psi);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ul><p>下面用一个例子来说明 <code>semiImplicitSource</code> 的作用。前提到 <code>scalarTransportFoam</code> 是使用 fvOptions 的一个最简单的求解器，这里对该求解器进一步简化，只保留瞬变项，对流和扩散项都删去，来验证 <code>semiImplicitSource</code> 的作用。<br>修改之后的 <code>TEqn</code> 为</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">tmp TEqn(    fvm::ddt(T)  &#x3D;&#x3D; fvOptions(T));<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>然后，<code>fvOptions</code> 词典文件的设置如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">firstHeatSource&#123;    type scalarSemiImplicitSource;    active          true;    selectionMode   cellZone;    cellZone        boxSourceZone;    scalarSemiImplicitSourceCoeffs     &#123;        volumeMode absolute;        injectionRateSuSp         &#123;            T (0.05 0);        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>上述设置，相当于求解如下方程</p><p>∂T∂t=Su+Sp⋅T∂T∂t=Su+Sp⋅T</p><p>其中 Su=0.05,Sp=0Su=0.05,Sp=0 。<br>反观上面对代码的分析，可知对于当前的设置，SuSu 的量纲为 <code>TEqn</code> 的量纲除以体积量纲，SpSp 的量为 SuSu 量纲除以 <code>T</code> 的量纲，这与上面给出的方程是一致的。<br>但是，要注意， <code>SemiImplicitSource</code> 有两个模式：absolute 和 specific，区别在于代码里的 <code>VDash</code> 的取值不一样。对于 absolute 模式，<code>VDash = V</code>，即所选的 cellZone 的体积；对于 specific 模式，<code>VDash = 1.0</code>。而代码里的 <code>Su</code> 和 <code>Sp</code> 的值都是用在<code>fvOptions</code> 词典文件设置的值除以 <code>VDash</code> 。<br>所以，确切地说，求解的应该是如下积分方程：</p><p>∫V∂T∂tdV−∫V∇⋅(DT∇T)dV=∫V(SuVDash+SpVDashT)dV∫V∂T∂tdV−∫V∇⋅(DT∇T)dV=∫V(SuVDash+SpVDashT)dV</p><p>其中 VDashVDash 是选定的 cellZone 的体积。<br>为了验证以上的推演，作了如下两个测试：</p><ul><li><p>源项参数设置为<code>T (0.01 0)</code>，源项作用的区域为一个体积为VDash=0.001VDash=0.001 的 cellZone，为了消除热量传递，设置 DT=0DT=0，初始整个区域的 T 均为0， 模拟时间为1 s。<br>按照上述的推演，如果是 <code>absolute</code> 模式，最终 1 s 时选定的 cellZone 的温度将是 T=t⋅SuVDash=1s⋅0.01k/s0.001=10kT=t⋅SuVDash=1s⋅0.01k/s0.001=10k；如果是 <code>specific</code> 模式，那么最终1 s 时选定的 cellZone 的温度将是 T=1s⋅0.01k/s1.0=0.01kT=1s⋅0.01k/s1.0=0.01k。以上结果在测试算例中得到了证实。</p></li><li><p>源项参数设置为</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">T (1.0 2.0)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>，同样设置</p></li></ul><p>  DT=0DT=0</p><p>  。这种情况下，可以先求微分方程</p><p>  ∂T∂t=x+yT∂T∂t=x+yT</p><p>  的解，经简单计算得到</p><p>  T=eyt⋅eyc−xyT=eyt⋅eyc−xy</p><p>  cc</p><p>  为任意常数。</p><p>  若</p><p>  T|t=0=0kT|t=0=0k</p><p>  ，则可以得到定解为</p><p>  T=eyt⋅x−xyT=eyt⋅x−xy</p><p>  若使用</p>  <div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">specific<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>  模式，则根据当前的设置得到1 s时的解为</p><p>  T=e2⋅1⋅1−12=3.194528kT=e2⋅1⋅1−12=3.194528k</p><p>  算例测试结果为：</p><ul><li><p>时间离散格式:Euler，ΔT=0.001sΔT=0.001s，T=3.20193kT=3.20193k；</p></li><li><p>时间离散格式：Euler，ΔT=0.0001sΔT=0.0001s，T=3.19527kT=3.19527k，可见减小时间步后结果与解析解吻合度提高了很多。</p></li><li><p>时间离散格式：CrankNicolson，ΔT=0.001sΔT=0.001s，T=3.19454kT=3.19454k。可见用高阶的时间离散格式，在同样时间步下能得到误差更小的结果。</p></li></ul><p>同样，如果用<code>absolute</code> 模式，且源项设置为 <code>T (0.001 0.002)</code> ，应该能得到一样的结果，实际上算例测试正是如此。由此可以认为推演得到了证实。</p><p>至此，<code>SemiImplicitSource</code> 这个源项的核心部分就算是明了了。可是，现在测试的是非常简单的情形，如果在求解多个方程，且有多个方程里都加入了源项的情况下，该怎么给不同的方程设置不一样的源项呢？要解决这个问题，需要先理解清楚 <code>fvOptions</code> 的调用过程。</p><h5 id="fvOptions-源项的调用过程"><a href="#fvOptions-源项的调用过程" class="headerlink" title="fvOptions 源项的调用过程"></a>fvOptions 源项的调用过程</h5><p>下面至下而上地来看看 fvOptions 的调用过程。</p><p><code>TEqn</code>里，有一个调用 <code>fvOptions</code> 的语句： <code>fvOptions(T)</code>，上一篇讲过， <code>fvOptions</code> 的定义为</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">fv::IOoptionList fvOptions(mesh);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>这就很明显了：建立一个 <code>IOoptionList</code> 类的对象 <code>fvOptions</code>。由此可知，求解器里的 <code>fvOptions</code> 是一个对象的名字，因此 <code>fvOptions(T)</code> 这种用法也只可能是对象调用类中重载的 <code>()</code> 运算符了。从前面的分析，可知 <code>IOoptionList</code> 本身很简单，仅是作为一个接口来用的，所以 <code>()</code> 与算符的重载要去其父类中去找。 <code>IOoptionList</code> 的作用是，从 “constant”（优先）或者 “system” 目录读取 <code>fvOptions</code> 文件，并作为 <code>IOobject</code> 类的对象传递给父类 <code>optionList</code> （从构造函数的成员初始化列表 <code>optionList(mesh, *this)</code> ）</p><hr><p>接下来，就该进入 <code>optionList</code> 类了。这个类里，所有可能出现在求解器代码里函数都有了，包括 <code>correct</code> ， <code>constrain</code> ， <code>makeRelative</code> ， <code>makeAbsolute</code> ， <code>relative</code> 以及 <code>()</code> 运算符的重载。但是，注意这里并没有具体的代码实现，而是通过类似</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">forAll(*this, i)&#123;   this-&gt;operator[](i).makeAbsolute(phi);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>调用其他地方的函数。 <code>optionList</code> 的一个重要使命是，统计 <code>fvOptions</code> 文件里定义了多少个源项，并将每一个源项都作为一个储存起来，然后再根据词典的内容创建特定的源项。核心在于 <code>reset</code> 函数。为了说明这一点，先从构造函数看起</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">reset(optionsDict(dict));<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>可见构造函数里调用了 <code>reset</code> 函数，并且用 <code>optionsDict</code> 函数的返回值作为 <code>reset</code> 函数的参数。前文讲到， <code>IOoptionList</code> 类将 <code>fvOptions</code> 文件的内容以 <code>IOobject</code> 的形式传递给父类 <code>optionList</code>，所以，这里的参数 <code>dict</code> 可以理解为就是<code>fvOptions</code> 文件的内容。<code>optionsDict</code> 函数的代码如下：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">const Foam::dictionary&amp; Foam::fv::optionList::optionsDict(    const dictionary&amp; dict) const&#123;    if (dict.found(&quot;options&quot;))    &#123;        return dict.subDict(&quot;options&quot;);    &#125;    else    &#123;        return dict;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>可见，这个函数去 <code>fvOptions</code> 文件里查找关键字 <code>options</code>，如果找到，就将 <code>options</code> 关键字对应的 subDict 内容返回，否则直接返回 <code>fvOptions</code> 文件的内容。举例说，形如</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">firstHeatSource&#123;    type scalarSemiImplicitSource;    active          true;    selectionMode   cellZone;    cellZone        boxSourceZone;    scalarSemiImplicitSourceCoeffs     &#123;        volumeMode absolute;        injectionRateSuSp         &#123;            T (0.001 0);        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>的，直接返回，因为这就构成了一个 dictionary；而形如</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">options&#123;    massSource1    &#123;        type            scalarSemiImplicitSource;        $injector1;        scalarSemiImplicitSourceCoeffs        &#123;            volumeMode      absolute;            injectionRateSuSp            &#123;                thermo:rho.air     (1e-3 0); &#x2F;&#x2F; kg&#x2F;s            &#125;        &#125;    &#125;    momentumSource1    &#123;        type            vectorSemiImplicitSource;        $injector1;        vectorSemiImplicitSourceCoeffs        &#123;            volumeMode      absolute;            injectionRateSuSp            &#123;                U.air           ((0 -1e-2 0) 0); &#x2F;&#x2F; kg*m&#x2F;s^2            &#125;        &#125;    &#125;    energySource1    &#123;        type            scalarSemiImplicitSource;        $injector1;        scalarSemiImplicitSourceCoeffs        &#123;            volumeMode      absolute;            injectionRateSuSp            &#123;                e.air      (500 0); &#x2F;&#x2F; kg*m^2&#x2F;s^3            &#125;        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>的，则将options下的每一个 subDict 作为 dictionary 返回。注意，这里的 <code>dictionary</code> 类可以理解为一个容器，每一个</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">xxxxx&#123;    ......&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>都可以作为容器里的一个成员，容器的容量（size）等于总的成员数，每一个成员，其实就对应一个源项。<br>于是，我们知道 <code>optionsDict</code> 返回了一个有一定数目成员的容器。再来看 <code>reset</code> 函数</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">void Foam::fv::optionList::reset(const dictionary&amp; dict)&#123;    &#x2F;&#x2F; Count number of active fvOptions    label count &#x3D; 0;        &#x2F;&#x2F; 遍历 dict 容器，确定其成员的数目，即确定定义了几个源项。    forAllConstIter(dictionary, dict, iter)     &#123;        if (iter().isDict())        &#123;            count++;        &#125;    &#125;    this-&gt;setSize(count); &#x2F;&#x2F; setSize 是 PtrList 类的成员，顾名思义，PtrList 是一个 List。PtrList&lt;option&gt; 类的成员是 options 类的对象。        label i &#x3D; 0;    &#x2F;&#x2F; 遍历 dict 容器，根据每一个 dict 容器的成员来建立对应的 option 类的对象，这通过调用 option 类的 New 函数来实现。这是使用 RuntimeSelection 机制的类的很常规的做法。    forAllConstIter(dictionary, dict, iter)    &#123;        if (iter().isDict())        &#123;            const word&amp; name &#x3D; iter().keyword(); &#x2F;&#x2F; keyword 返回的是类似 energySource1 这样的，是这个源项的一个名字            const dictionary&amp; sourceDict &#x3D; iter().dict();            this-&gt;set &#x2F;&#x2F; set 函数，肯定毫无疑问也是从 PtrList 类中继承而来的            (                i++,                option::New(name, sourceDict, mesh_) &#x2F;&#x2F; 调用 option 类的 New 函数            );        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>注意，最重要的是， <code>reset</code> 里实现了对父类 <code>PtrList&lt;option&gt;</code> 的初始化。<br>理解了这些，再来看 <code>correct</code> 以及 <code>()</code> 操作符重载中的代码，就好理解了：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#x2F;&#x2F; 本来 *this 应该是 optionList 类的指针，这里先作个隐式转换，转成 PtrList&lt;option&gt; 类的指针。前面reset函数已经对 PtrList&lt;option&gt; 进行了初始化，使其读入了每一个源项。所以，这里的循环就是对每一个源项进行循环，然后调用对应的函数。operator[]肯定也是在PtrList类中定义的，i 指的是 PtrList 类的第 i 个成员，这里 PtrList 的每一个成员都是一个 option 类的对象，所以，makeAbsolute 函数是定义在 option 类中的函数。forAll(*this, i)&#123;   this-&gt;operator[](i).makeAbsolute(phi);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>根据上面的理解，一个很自然的推论是，定义在 <code>fvOptions</code> 文件中的源项，其作用是叠加的。也就是说，上述的 <code>fvOptions(T)</code>，对定义在 <code>fvOptions</code> 文件中的每一个源项，都会调用一次。经测试，</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"> firstHeatSource&#123;    type scalarSemiImplicitSource;    active          true;    selectionMode   cellZone;    cellZone        boxSourceZone;    scalarSemiImplicitSourceCoeffs     &#123;        volumeMode absolute;        injectionRateSuSp         &#123;            T (0.001 0);        &#125;    &#125;&#125;        secondHeatSource&#123;    type scalarSemiImplicitSource;    active          true;    selectionMode   cellZone;    cellZone        boxSourceZone;    scalarSemiImplicitSourceCoeffs     &#123;        volumeMode absolute;        injectionRateSuSp         &#123;            T (0.0 0.002);        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>与</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">secondHeatSource&#123;    type scalarSemiImplicitSource;    active          true;    selectionMode   cellZone;    cellZone        boxSourceZone;    scalarSemiImplicitSourceCoeffs     &#123;        volumeMode absolute;        injectionRateSuSp         &#123;            T (0.0001 0.002);        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>的作用是一样的，这证实了源项的作用确实是叠加的。<br>此外，还要注意一点，那就是 <code>optionList</code> 类中重载的 <code>()</code> 运算符，其实是在调用 option 类中的 <code>addSup</code> 函数，并且其返回值是 fvMatrix 类的对象。</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">template&lt;class Type&gt;Foam::tmp&lt;Foam::fvMatrix&lt;Type&gt; &gt; Foam::fv::optionList::operator()(    GeometricField&lt;Type, fvPatchField, volMesh&gt;&amp; fld,    const word&amp; fieldName)&#123;    checkApplied();    const dimensionSet ds &#x3D; fld.dimensions()&#x2F;dimTime*dimVolume;    tmp&lt;fvMatrix&lt;Type&gt; &gt; tmtx(new fvMatrix&lt;Type&gt;(fld, ds));    fvMatrix&lt;Type&gt;&amp; mtx &#x3D; tmtx();    forAll(*this, i)    &#123;        option&amp; source &#x3D; this-&gt;operator[](i);        label fieldI &#x3D; source.applyToField(fieldName);        if (fieldI !&#x3D; -1)        &#123;            source.setApplied(fieldI);            if (source.isActive())            &#123;                if (debug)                &#123;                    Info&lt;&lt; &quot;Applying source &quot; &lt;&lt; source.name() &lt;&lt; &quot; to field &quot;                        &lt;&lt; fieldName &lt;&lt; endl;                &#125;                source.addSup(mtx, fieldI);            &#125;        &#125;    &#125;    return tmtx;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><p>理解了以上这些，就可以进入 <code>option</code> 类了。<br>option 类是所有具体的源项类的基类，这个类里处理了所有源项都需要处理的部分，比如确定起始时间，选择源项作用的区域，这些都是在构造函数里完成的，主要是通过调用 <code>setSelection</code> 和 <code>setCellSet</code> 两个函数。这里需要注意的是数据成员 <code>cells_</code>， <code>V_</code> 以及 <code>fieldNames_</code>，分别定义源项作用区域的网格id （这里源项的作用区域是以 cell 为基础来指定的，即便是 points 模式，实际上源项作用的区域仍然是 points 所在的 cell。）， 选定区域的体积以及需要开启源项作用的场名（有时候，求解器的多个 Eqn 里有fvOptions，但是实际算例中只想针对特定的场开启源项，这可以通过指定 fieldNames_ 来实现）。</p><p>注意 fieldNames 在 <code>option</code> 类中并没有初始化，需要在具体的源项类中指定。此外，<code>makeRelative</code> 等在求解器中实际调用的函数，在 <code>option</code> 类中也并没有进行具体的实现（但不是声明为纯虚函数，仅仅是函数体为空的而已，这里的结果不适合用纯虚函数）</p><p>以 <code>SemiImplicitSource</code> 为例，主要去看 <code>addSup</code> 函数，这个函数，关键的一个参数是<code>fieldI</code>，这个参数，指的是 <code>fieldName_</code> 这个List的 <code>applyToField</code> 函数的返回值，用来判断一个 field 是否要启用源项。<code>fieldName_</code> 这个List，是在 <code>SemiImplicitSource</code> 类的 <code>setFieldData</code> 函数中赋值的，通过读取 <code>SemiImplicitSourceCoeffs</code> 中的参数来决定。但是这个 <code>fieldName_</code> 的确定方法根据不同的类有不同的做法，要具体分析。<br>到此，<code>fvOpptions</code> 源项的调用途径就打通了，接下来可以继续具体分析特定的源项了。</p>]]></content>
    
    
    
    <tags>
      
      <tag>OpenFOAM</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Tiaozhanbei share</title>
    <link href="/Personal_summary/Tiaozhanbei-share/"/>
    <url>/Personal_summary/Tiaozhanbei-share/</url>
    
    <content type="html"><![CDATA[<p>挑战杯参赛经验分享</p><span id="more"></span><h1 id="挑战杯参赛经验"><a href="#挑战杯参赛经验" class="headerlink" title="挑战杯参赛经验"></a>挑战杯参赛经验</h1><p>最近有学弟学妹咨询挑战杯的相关问题，想着之后会比较忙，趁着还有些空闲时间写写挑战杯参赛的时间线、需要注意的问题。鉴于网上基本找不到全面的挑战杯参赛文章，本文会写的比较详细，目测文章会很长，前边一部分是挑战杯整体参赛的概况，中间一部分是挑战杯参赛作品、POST、Slides及答辩细节，最后一部分是挑战杯参赛过程中的点点滴滴。（本文所有涉及项目、学校、老师的部分都作隐去处理，本篇文章将会发布在个人相关账号，未经许可请勿转载。）</p><p>“挑战杯”分为“挑战杯”全国大学生课外学术科技作品竞赛和“挑战杯”中国大学生创业计划竞赛，两者简称“大挑”和“小挑”。大学期间有幸参与了“小挑”，然后自己一个人参加了“大挑”，最后入围国赛终审答辩，作为参赛类别中唯一一个个人项目，唯一一个没有见刊论文的项目，能拿到国挑二等奖也很满足了，本文主要介绍大挑的参赛经验。</p><center><font face="华文新魏" color=black size=6>第一部分</font></center><h2 id="什么是挑战杯？"><a href="#什么是挑战杯？" class="headerlink" title="什么是挑战杯？"></a>什么是挑战杯？</h2><p> 挑战杯是“挑战杯”全国大学生系列科技学术竞赛的简称，是由共青团中央、中国科协、教育部和全国学联共同主办的全国性的大学生课外学术实践竞赛，竞赛官方网站为www.tiaozhanbei.net 。 “挑战杯”竞赛在中国共有两个并列项目，一个是“挑战杯”中国大学生创业计划竞赛，另一个则是“挑战杯”全国大学生课外学术科技作品竞赛。这两个项目的全国竞赛交叉轮流开展，每个项目每两年举办一届。</p><p>“挑战杯”全国大学生课外学术科技作品竞赛（以下简称“‘挑战杯’竞赛”）是由共青团中央、中国科协、教育部、全国学联和地方政府共同主办，国内著名大学、新闻媒体联合发起的一项具有导向性、示范性和群众性的全国竞赛活动。自1989年首届竞赛举办以来，“挑战杯”竞赛始终坚持“崇尚科学、追求真知、勤奋学习、锐意创新、迎接挑战”的宗旨，在促进青年创新人才成长、深化高校素质教育、推动经济社会发展等方面发挥了积极作用，在广大高校乃至社会上产生了广泛而良好的影响，被誉为当代大学生科技创新的“奥林匹克”盛会。</p><h2 id="挑战杯时间线"><a href="#挑战杯时间线" class="headerlink" title="挑战杯时间线"></a>挑战杯时间线</h2><blockquote><p><strong>挑战杯参赛历程分为：校赛、省（区、市）赛、国赛。</strong></p></blockquote><p>挑战杯组委会一般会在11月左右，下达组织“挑战杯”竞赛的通知，高校一般会在11月中下旬发布校赛的相关规程。</p><p>校赛作品一般在12月左右提交，校赛初审一般在第二学期开学之前出结果，初审入围之后在3~4月左右进行校赛答辩。</p><p>省（区、市）赛一般在5~6月举行，5月左右需要在系统提交报名表，需要注意的是：一般校赛和省赛间隔时间较短，校赛之后修改完成的稿件一般就直接会申报省赛了，省赛的报名材料是国赛的申请的基础，如果有望入围国赛，在此阶段务必确认最终的参赛人员。</p><p>最终是否入围国赛，一般在6月左右能得到结果，挑战杯国赛的申报在6月底至7月初，10月份之前会得到是否入围终审答辩的结果（2019年国赛三等以下大多数项目是不用终审答辩的），最后11月份就是挑战杯国赛的终审答辩。</p><p><img src="/img/image-20200713211455483.png" alt="image-20200713211455483"></p><h2 id="挑战杯参赛概述"><a href="#挑战杯参赛概述" class="headerlink" title="挑战杯参赛概述"></a>挑战杯参赛概述</h2><h3 id="参加挑战杯之前的忠告："><a href="#参加挑战杯之前的忠告：" class="headerlink" title="参加挑战杯之前的忠告："></a><strong>参加挑战杯之前的忠告：</strong></h3><p>如果目标是国赛，挑战杯比赛并不是一两个月就能得到比赛结果的比赛，单从比赛时间上来看，整个比赛周期接近一年，从项目开始到结束，可能是一年以上的辛勤付出，所以参赛需要慎重，如果说只是参加到校赛阶段，基本上所有的国家级大创都可以试试，随着比赛的推进，时间与精力的投入会越来越多。同时，在参加挑战杯的过程中千万要兼顾学业，不能说参加挑战杯之后课内就放任不管，大学阶段课内成绩在今后保研、出国甚至考研也是相当重要的。</p><h3 id="挑战杯参赛项目都是些什么项目："><a href="#挑战杯参赛项目都是些什么项目：" class="headerlink" title="挑战杯参赛项目都是些什么项目："></a><strong>挑战杯参赛项目都是些什么项目：</strong></h3><p>挑战杯项目类别分为：自然科学类学术论文、哲学社会科学类社会调查报告和学术论文、科技发明制作A类及科技发明制作B类三个大类共四个类别，涉及生命科学、智能制造、5G技术以及乡村振兴等科技 、社会热点问题。</p><h3 id="参加挑战杯的好处："><a href="#参加挑战杯的好处：" class="headerlink" title="参加挑战杯的好处："></a><strong>参加挑战杯的好处：</strong></h3><p>首先，由于比赛进程的推进，项目中的不足需要迅速完善，专家们提出的问题需要不断改进，参赛过程也是项目一步步优化的过程；其次，随着比赛的推进，你将会对项目有进一步的理解与认识，在解决问题的过程中，思维与能力都会得到全面的锻炼；最后，挑战杯是一个看成果的比赛，比赛带来的压力有助于项目成果迅速产出。</p><h3 id="在项目实施和比赛过程中需要注意的事项："><a href="#在项目实施和比赛过程中需要注意的事项：" class="headerlink" title="在项目实施和比赛过程中需要注意的事项："></a><strong>在项目实施和比赛过程中需要注意的事项：</strong></h3><p>第一，在进行科研项目之前之前了解学术规范与学术道德，科研过程中养成正确的学术习惯、遵守学术道德规范是极为重要的。</p><p>第二，在项目实施之前，针对本专业或导师研究领域进行思考，在文献调研之后与导师、研究团队讨论选题，确定选题之后，再次进行更精细的文献调研，拟定研究方案。</p><p>第三，在项目实施之前至项目实施过程中，学习相关专业知识、仪器操作以及软件使用方法，学习文献数据库的建立、学术论文的写作方法，实验过程中养成记录实验过程的习惯，建立良好的资料收集整理习惯。（具体文献管理软件、实验记录方法、资料收集整理方法在网上都能方便地找到）</p><p>第四，项目实施过程中，积极与导师、研究团队交流沟通，对存疑的地方进行深入研究，对无法解决的问题进行头脑风暴，尽量自主、独立地完成创新性的研究工作。</p><p>第五，比赛之前，需要对论文初稿定稿，如有已发表的论文（论文一作需为团队主要贡献人员），基于已发表论文及新的研究成果撰写新文稿。</p><p>第六，明确比赛的每个时间节点，按时完成比赛所需要提交的材料，提前准备答辩PPT、讲稿及材料。</p><center><font face="华文新魏" color=black size=6>第二部分</font></center><h2 id="参赛项目的准备"><a href="#参赛项目的准备" class="headerlink" title="参赛项目的准备"></a>参赛项目的准备</h2><h3 id="有没有必要写开题报告？"><a href="#有没有必要写开题报告？" class="headerlink" title="有没有必要写开题报告？"></a><strong>有没有必要写开题报告？</strong></h3><p>在时间充足的情况下，撰写开题报告有助于理清项目思路，进一步细化项目推进方案，全面了解现阶段当前领域的研究现状，同时也可以作为市赛、省赛、国赛的项目申报的前期准备。开题报告主要从以下几个部分展开：</p><ol><li>确定项目的科学问题，明确选题的背景与意义</li><li>对国内外相关研究进行文献综述，进一步论证项目</li><li>确定研究思路与研究方法，制定切实可行的研究方案</li><li>分析当前已有的研究条件与技能，列出目前的技术难点与解决方案，确定项目执行计划与预算</li><li>点明创新点与项目特色</li></ol><h3 id="有没有必要定期汇报？"><a href="#有没有必要定期汇报？" class="headerlink" title="有没有必要定期汇报？"></a><strong>有没有必要定期汇报？</strong></h3><p>有人认为去开组会听看似和自己毫不相关的报告是浪费时间，其实不然，每一次组会汇报，都可以当作是一次提升自我的锻炼，在开组会听报告的过程当中，你可以获得别人已经消化过的知识，虽然看似毫不相关，但是如果之后有需要这方面知识的时候你能快速上手；你可以仔细学习别人的讲述优点与缺点，以此改进自己的演讲水平；你可以观察别人PPT中的呈现方式，进一步提升PPT制作水准。同时，组会也是一个提出问题与发现问题的有效解决方案，项目是要呈现给别人的，在最终展示前听取更多人的意见与建议，可以明确听众感兴趣的点，提高报告的听感。</p><h3 id="应该养成的研究习惯"><a href="#应该养成的研究习惯" class="headerlink" title="应该养成的研究习惯"></a><strong>应该养成的研究习惯</strong></h3><ol><li>每周保持一定量的文献阅读，保证能够及时获取相关研究信息</li><li>做好文献阅读笔记与管理，方便在写作及需要时及时查找</li><li>做好实验笔记，在实验有问题时能及时溯源，同时保证了实验的可重复性</li><li>及时与团队以及导师沟通交流，尽早修正项目中的问题</li><li>学习制作PPT与论文写作的要点，并在有机会时不断锻炼与提升</li></ol><h2 id="路演与答辩"><a href="#路演与答辩" class="headerlink" title="路演与答辩"></a>路演与答辩</h2><p>本来以为这一部分会写很多，想了想用书面的语言表达起来太耗费时间了，之后做一期视频讲一下我的参赛经验吧！</p><center><font face="华文新魏" color=black size=4>一路走来，得到了很多老师、同学的关心与帮助。<br>感谢一直以来关心和指导我的老师、师兄师姐和同学们，一直陪伴我的家人和朋友们。<br>未来之路虽艰辛漫长，庆幸一路有你们陪伴。<br></font></center><p><img src="/img/qrcode_for_gh_e2f36301650e_430.jpg" alt="" style="zoom:40%;" /></p><p><center><font face="华文新魏" color=black size=4>关注微信公众号Veen分享获取后期信息</font></p><p align="right"> <font face="华文新魏" color=black size=4>—— Veen 2020/12/11</font></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Projection Methods</title>
    <link href="/Projection-Methods/"/>
    <url>/Projection-Methods/</url>
    
    <content type="html"><![CDATA[<p>This post is for projection methods in CFD.</p><span id="more"></span><h3 id="PISO-Algorithm"><a href="#PISO-Algorithm" class="headerlink" title="PISO Algorithm"></a>PISO Algorithm</h3><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// Pressure-velocity PISO corrector</span><span class="token punctuation">&#123;</span>    <span class="token comment">// Solve the Momentum equation</span>    MRF<span class="token punctuation">.</span><span class="token function">correctBoundaryVelocity</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span><span class="token punctuation">;</span>    fvVectorMatrix <span class="token function">UEqn</span>        <span class="token punctuation">(</span>        fvm<span class="token operator">::</span><span class="token function">ddt</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span> <span class="token operator">+</span> fvm<span class="token operator">::</span><span class="token function">div</span><span class="token punctuation">(</span>phi<span class="token punctuation">,</span> U<span class="token punctuation">)</span>        <span class="token operator">+</span> MRF<span class="token punctuation">.</span><span class="token function">DDt</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span>        <span class="token operator">+</span> turbulence<span class="token operator">-></span><span class="token function">divDevSigma</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span>        <span class="token operator">==</span>        <span class="token function">fvOptions</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span>    <span class="token punctuation">)</span><span class="token punctuation">;</span>    UEqn<span class="token punctuation">.</span><span class="token function">relax</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    fvOptions<span class="token punctuation">.</span><span class="token function">constrain</span><span class="token punctuation">(</span>UEqn<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>piso<span class="token punctuation">.</span><span class="token function">momentumPredictor</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">solve</span><span class="token punctuation">(</span>UEqn <span class="token operator">==</span> <span class="token operator">-</span>fvc<span class="token operator">::</span><span class="token function">grad</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fvOptions<span class="token punctuation">.</span><span class="token function">correct</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// --- PISO loop</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>piso<span class="token punctuation">.</span><span class="token function">correct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        volScalarField <span class="token function">rAU</span><span class="token punctuation">(</span><span class="token number">1.0</span><span class="token operator">/</span>UEqn<span class="token punctuation">.</span><span class="token function">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        volVectorField <span class="token function">HbyA</span><span class="token punctuation">(</span><span class="token function">constrainHbyA</span><span class="token punctuation">(</span>rAU<span class="token operator">*</span>UEqn<span class="token punctuation">.</span><span class="token function">H</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> U<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        surfaceScalarField <span class="token function">phiHbyA</span>            <span class="token punctuation">(</span>            <span class="token string">"phiHbyA"</span><span class="token punctuation">,</span>            fvc<span class="token operator">::</span><span class="token function">flux</span><span class="token punctuation">(</span>HbyA<span class="token punctuation">)</span>            <span class="token operator">+</span> MRF<span class="token punctuation">.</span><span class="token function">zeroFilter</span><span class="token punctuation">(</span>fvc<span class="token operator">::</span><span class="token function">interpolate</span><span class="token punctuation">(</span>rAU<span class="token punctuation">)</span><span class="token operator">*</span>fvc<span class="token operator">::</span><span class="token function">ddtCorr</span><span class="token punctuation">(</span>U<span class="token punctuation">,</span> phi<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">)</span><span class="token punctuation">;</span>        MRF<span class="token punctuation">.</span><span class="token function">makeRelative</span><span class="token punctuation">(</span>phiHbyA<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">adjustPhi</span><span class="token punctuation">(</span>phiHbyA<span class="token punctuation">,</span> U<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Update the pressure BCs to ensure flux consistency</span>        <span class="token function">constrainPressure</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> U<span class="token punctuation">,</span> phiHbyA<span class="token punctuation">,</span> rAU<span class="token punctuation">,</span> MRF<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// Non-orthogonal pressure corrector loop</span>        <span class="token keyword">while</span> <span class="token punctuation">(</span>piso<span class="token punctuation">.</span><span class="token function">correctNonOrthogonal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token comment">// Pressure corrector</span>            fvScalarMatrix <span class="token function">pEqn</span>            <span class="token punctuation">(</span>                fvm<span class="token operator">::</span><span class="token function">laplacian</span><span class="token punctuation">(</span>rAU<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">==</span> fvc<span class="token operator">::</span><span class="token function">div</span><span class="token punctuation">(</span>phiHbyA<span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>            pEqn<span class="token punctuation">.</span><span class="token function">setReference</span><span class="token punctuation">(</span>pRefCell<span class="token punctuation">,</span> pRefValue<span class="token punctuation">)</span><span class="token punctuation">;</span>            pEqn<span class="token punctuation">.</span><span class="token function">solve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>piso<span class="token punctuation">.</span><span class="token function">finalNonOrthogonalIter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                phi <span class="token operator">=</span> phiHbyA <span class="token operator">-</span> pEqn<span class="token punctuation">.</span><span class="token function">flux</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"continuityErrs.H"</span></span>        U <span class="token operator">=</span> HbyA <span class="token operator">-</span> rAU<span class="token operator">*</span>fvc<span class="token operator">::</span><span class="token function">grad</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>        U<span class="token punctuation">.</span><span class="token function">correctBoundaryConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        fvOptions<span class="token punctuation">.</span><span class="token function">correct</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="PIMPLE-Algorithm"><a href="#PIMPLE-Algorithm" class="headerlink" title="PIMPLE Algorithm"></a>PIMPLE Algorithm</h2><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">while (pimple.run(runTime))&#123;    #include &quot;readDyMControls.H&quot;    if (LTS)    &#123;        #include &quot;setRDeltaT.H&quot;    &#125;    else    &#123;        #include &quot;CourantNo.H&quot;        #include &quot;setDeltaT.H&quot;    &#125;    runTime++;    Info&lt;&lt; &quot;Time &#x3D; &quot; &lt;&lt; runTime.timeName() &lt;&lt; nl &lt;&lt; endl;    &#x2F;&#x2F; --- Pressure-velocity PIMPLE corrector loop    while (pimple.loop())    &#123;        if (pimple.firstPimpleIter() || moveMeshOuterCorrectors)        &#123;            mesh.update();            if (mesh.changing())            &#123;                MRF.update();                if (correctPhi)                &#123;                    &#x2F;&#x2F; Calculate absolute flux                    &#x2F;&#x2F; from the mapped surface velocity                    phi &#x3D; mesh.Sf() &amp; Uf();                    CorrectPhi                    (                        U,                        phi,                        p,                        dimensionedScalar(&quot;rAUf&quot;, dimTime, 1),                        geometricZeroField(),                        pimple,                        true                    );                    &#x2F;&#x2F; Make the flux relative to the mesh motion                    fvc::makeRelative(phi, U);                &#125;                if (checkMeshCourantNo)                &#123;                    #include &quot;meshCourantNo.H&quot;                &#125;            &#125;        &#125;        MRF.correctBoundaryVelocity(U);        tmp&lt;fvVectorMatrix&gt; tUEqn        (            fvm::ddt(U) + fvm::div(phi, U)          + MRF.DDt(U)          + turbulence-&gt;divDevSigma(U)         &#x3D;&#x3D;            fvOptions(U)        );        fvVectorMatrix&amp; UEqn &#x3D; tUEqn.ref();        UEqn.relax();        fvOptions.constrain(UEqn);        if (pimple.momentumPredictor())        &#123;            solve(UEqn &#x3D;&#x3D; -fvc::grad(p));            fvOptions.correct(U);        &#125;        &#x2F;&#x2F; --- Pressure corrector loop        while (pimple.correct())        &#123;            volScalarField rAU(1.0&#x2F;UEqn.A());            volVectorField HbyA(constrainHbyA(rAU*UEqn.H(), U, p));            surfaceScalarField phiHbyA            (                &quot;phiHbyA&quot;,                fvc::flux(HbyA)              + MRF.zeroFilter(fvc::interpolate(rAU)*fvc::ddtCorr(U, phi, Uf))            );            MRF.makeRelative(phiHbyA);            if (p.needReference())            &#123;                fvc::makeRelative(phiHbyA, U);                adjustPhi(phiHbyA, U, p);                fvc::makeAbsolute(phiHbyA, U);            &#125;            tmp&lt;volScalarField&gt; rAtU(rAU);            if (pimple.consistent())            &#123;                rAtU &#x3D; 1.0&#x2F;max(1.0&#x2F;rAU - UEqn.H1(), 0.1&#x2F;rAU);                phiHbyA +&#x3D;                    fvc::interpolate(rAtU() - rAU)*fvc::snGrad(p)*mesh.magSf();                HbyA -&#x3D; (rAU - rAtU())*fvc::grad(p);            &#125;            if (pimple.nCorrPiso() &lt;&#x3D; 1)            &#123;                tUEqn.clear();            &#125;            &#x2F;&#x2F; Update the pressure BCs to ensure flux consistency            constrainPressure(p, U, phiHbyA, rAtU(), MRF);            &#x2F;&#x2F; Non-orthogonal pressure corrector loop            while (pimple.correctNonOrthogonal())            &#123;                fvScalarMatrix pEqn                (                    fvm::laplacian(rAtU(), p) &#x3D;&#x3D; fvc::div(phiHbyA)                );                pEqn.setReference(pRefCell, pRefValue);                pEqn.solve();                if (pimple.finalNonOrthogonalIter())                &#123;                    phi &#x3D; phiHbyA - pEqn.flux();                &#125;            &#125;            #include &quot;continuityErrs.H&quot;            &#x2F;&#x2F; Explicitly relax pressure for momentum corrector            p.relax();            U &#x3D; HbyA - rAtU*fvc::grad(p);            U.correctBoundaryConditions();            fvOptions.correct(U);            &#x2F;&#x2F; Correct Uf if the mesh is moving            fvc::correctUf(Uf, U, phi);            &#x2F;&#x2F; Make the fluxes relative to the mesh motion            fvc::makeRelative(phi, U);        &#125;        if (pimple.turbCorr())        &#123;            laminarTransport.correct();            turbulence-&gt;correct();        &#125;    &#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Runge-kutta-Algorithm"><a href="#Runge-kutta-Algorithm" class="headerlink" title="Runge kutta Algorithm"></a>Runge kutta Algorithm</h3><blockquote><p>U 4th order p 2nd order</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> cycle <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> cycle <span class="token operator">&lt;</span> rkCoeff<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> cycle<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    phi <span class="token operator">=</span> <span class="token punctuation">(</span>fvc<span class="token operator">::</span><span class="token function">interpolate</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span> <span class="token operator">&amp;</span> mesh<span class="token punctuation">.</span><span class="token function">Sf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// evaluate flux</span>    dU  <span class="token operator">=</span> runTime<span class="token punctuation">.</span><span class="token function">deltaT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>fvc<span class="token operator">::</span><span class="token function">laplacian</span><span class="token punctuation">(</span>turbulence<span class="token operator">-></span><span class="token function">nuEff</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> U<span class="token punctuation">)</span> <span class="token operator">-</span> fvc<span class="token operator">::</span><span class="token function">div</span><span class="token punctuation">(</span>phi<span class="token punctuation">,</span>U<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Uc  <span class="token operator">=</span> Uc <span class="token operator">+</span> rkCoeff<span class="token punctuation">[</span>cycle<span class="token punctuation">]</span><span class="token operator">*</span>dU<span class="token punctuation">;</span>    U   <span class="token operator">=</span> Uold <span class="token operator">+</span> rkCoeff1<span class="token punctuation">[</span>cycle<span class="token punctuation">]</span><span class="token operator">*</span>dU<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>cycle<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span> U<span class="token operator">=</span>Uc<span class="token punctuation">;</span>    U<span class="token punctuation">.</span><span class="token function">correctBoundaryConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">solve</span><span class="token punctuation">(</span> pEqn <span class="token operator">==</span> fvc<span class="token operator">::</span><span class="token function">div</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span><span class="token operator">/</span>runTime<span class="token punctuation">.</span><span class="token function">deltaT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    U <span class="token operator">=</span> U <span class="token operator">-</span>fvc<span class="token operator">::</span><span class="token function">grad</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token operator">*</span>runTime<span class="token punctuation">.</span><span class="token function">deltaT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    U<span class="token punctuation">.</span><span class="token function">correctBoundaryConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>cycle<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">)</span> p2 <span class="token operator">=</span> p<span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>cycle<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span> p <span class="token operator">=</span> <span class="token number">4</span><span class="token operator">*</span>p <span class="token operator">-</span> <span class="token number">3</span><span class="token operator">*</span>p2<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>phi <span class="token operator">=</span> <span class="token punctuation">(</span>fvc<span class="token operator">::</span><span class="token function">interpolate</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span> <span class="token operator">&amp;</span> mesh<span class="token punctuation">.</span><span class="token function">Sf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>turbulence<span class="token operator">-></span><span class="token function">correct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"continuityErrs.H"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Rhie-Chow-Algorithm"><a href="#Rhie-Chow-Algorithm" class="headerlink" title="Rhie-Chow Algorithm"></a>Rhie-Chow Algorithm</h3><blockquote><p>U p 2nd order</p><p><a href="https://github.com/asimonder/projectionFoam">https://github.com/asimonder/projectionFoam</a></p></blockquote><div class="code-wrapper"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">while</span> <span class="token punctuation">(</span>runTime<span class="token punctuation">.</span><span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        Info<span class="token operator">&lt;&lt;</span> <span class="token string">"Time = "</span> <span class="token operator">&lt;&lt;</span> runTime<span class="token punctuation">.</span><span class="token function">timeName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> nl <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"readPISOControls.H"</span></span>        <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"CourantNo.H"</span></span>        <span class="token comment">// Non-iterative projection scheme</span>        <span class="token punctuation">&#123;</span>    <span class="token comment">//linearization of convective flux using second order extrapolation    </span>    surfaceScalarField <span class="token function">phi_o</span><span class="token punctuation">(</span><span class="token number">0.5</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">3.0</span><span class="token operator">*</span>phi<span class="token punctuation">.</span><span class="token function">oldTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>phi<span class="token punctuation">.</span><span class="token function">oldTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">oldTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">// Momentum step</span>            fvVectorMatrix <span class="token function">UEqn</span>            <span class="token punctuation">(</span>                fvm<span class="token operator">::</span><span class="token function">ddt</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span>              <span class="token operator">+</span> fvm<span class="token operator">::</span><span class="token function">div</span><span class="token punctuation">(</span>phi_o<span class="token punctuation">,</span> U<span class="token punctuation">)</span>              <span class="token operator">+</span> turbulence<span class="token operator">-></span><span class="token function">divDevReff</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span>            <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">solve</span><span class="token punctuation">(</span>UEqn <span class="token operator">==</span> <span class="token operator">-</span>fvc<span class="token operator">::</span><span class="token function">grad</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">// Projection step</span>    dimensionedScalar dt<span class="token operator">=</span>runTime<span class="token punctuation">.</span><span class="token function">deltaT</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    scalar rDeltaT<span class="token operator">=</span><span class="token number">1.0</span><span class="token operator">/</span>dt<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    U <span class="token operator">+=</span> dt<span class="token operator">*</span>fvc<span class="token operator">::</span><span class="token function">grad</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    U<span class="token punctuation">.</span><span class="token function">correctBoundaryConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          phi<span class="token operator">=</span> <span class="token punctuation">(</span>fvc<span class="token operator">::</span><span class="token function">interpolate</span><span class="token punctuation">(</span>U<span class="token punctuation">)</span> <span class="token operator">&amp;</span> mesh<span class="token punctuation">.</span><span class="token function">Sf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">adjustPhi</span><span class="token punctuation">(</span>phi<span class="token punctuation">,</span> U<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> nonOrth<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> nonOrth<span class="token operator">&lt;=</span>nNonOrthCorr<span class="token punctuation">;</span> nonOrth<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span> fvScalarMatrix <span class="token function">pEqn</span>  <span class="token punctuation">(</span>   fvm<span class="token operator">::</span><span class="token function">laplacian</span><span class="token punctuation">(</span>dt<span class="token punctuation">,</span> p<span class="token punctuation">)</span> <span class="token operator">==</span> fvc<span class="token operator">::</span><span class="token function">div</span><span class="token punctuation">(</span>phi<span class="token punctuation">)</span>   <span class="token punctuation">)</span><span class="token punctuation">;</span>  pEqn<span class="token punctuation">.</span><span class="token function">setReference</span><span class="token punctuation">(</span>pRefCell<span class="token punctuation">,</span> pRefValue<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>nonOrth <span class="token operator">==</span> nNonOrthCorr<span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    pEqn<span class="token punctuation">.</span><span class="token function">solve</span><span class="token punctuation">(</span>mesh<span class="token punctuation">.</span><span class="token function">solver</span><span class="token punctuation">(</span><span class="token string">"pFinal"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token keyword">else</span>  <span class="token punctuation">&#123;</span>    pEqn<span class="token punctuation">.</span><span class="token function">solve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>nonOrth <span class="token operator">==</span> nNonOrthCorr<span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    phi <span class="token operator">-=</span> pEqn<span class="token punctuation">.</span><span class="token function">flux</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>            <span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">"continuityErrs.H"</span></span>    U <span class="token operator">-=</span> dt<span class="token operator">*</span>fvc<span class="token operator">::</span><span class="token function">grad</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>    U<span class="token punctuation">.</span><span class="token function">correctBoundaryConditions</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>       turbulence<span class="token operator">-></span><span class="token function">correct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>fvOptions</title>
    <link href="/OpenFOAM/fvOptions/"/>
    <url>/OpenFOAM/fvOptions/</url>
    
    <content type="html"><![CDATA[<p>Openfoam fvOptions</p><span id="more"></span><h2 id="Show-fvOptions"><a href="#Show-fvOptions" class="headerlink" title="Show fvOptions"></a>Show fvOptions</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token assign-left variable">COUNT</span><span class="token operator">=</span><span class="token number">0</span><span class="token builtin class-name">cd</span> <span class="token variable">$FOAM_SRC</span><span class="token keyword">for</span> <span class="token for-or-select variable">OPTION_PATH</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">`</span><span class="token function">find</span> fvOptions <span class="token operator">|</span> <span class="token function">sort</span> -f <span class="token operator">|</span> <span class="token function">grep</span> -v lnInclude <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">"\.H$"</span> <span class="token operator">|</span> <span class="token function">xargs</span> -I <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token function">dirname</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token operator">|</span> <span class="token function">sed</span> -e <span class="token string">"s%^./%%"</span> <span class="token operator">|</span> <span class="token function">uniq</span><span class="token variable">`</span></span> <span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token variable">$OPTION_PATH</span>    <span class="token builtin class-name">echo</span>    <span class="token function">cat</span> <span class="token variable">$OPTION_PATH</span>/*.H <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">'        /\\\*/ &#123;exit&#125;        /SourceFiles/ &#123;exit&#125;        a == 1 &#123;print&#125;        /Description/ &#123;a = 1&#125;     '</span>    <span class="token builtin class-name">echo</span>    <span class="token assign-left variable">COUNT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">`</span><span class="token function">expr</span> $COUNT + <span class="token number">1</span><span class="token variable">`</span></span><span class="token keyword">done</span><span class="token builtin class-name">echo</span> Total <span class="token variable">$COUNT</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><blockquote><p>Results</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">fvOptions&#x2F;cellSetOption    Cell-set options abstract base class.  Provides a base set of controls,    e.g.:    \verbatim        type            scalarExplicitSource    &#x2F;&#x2F; Source type        active          on;                     &#x2F;&#x2F; on&#x2F;off switch        timeStart       0.0;        &#x2F;&#x2F; Start time        duration        1000.0;     &#x2F;&#x2F; Duration        selectionMode   cellSet;    &#x2F;&#x2F; cellSet, points, cellZone        .        .        .    \endverbatimNote    Source&#x2F;sink options are to be added to the equation R.H.S.fvOptions&#x2F;constraints&#x2F;fixedTemperatureConstraint    Fixed temperature equation constraintUsage    \verbatim    fixedTemperature    &#123;        type            fixedTemperatureConstraint;        active          yes;        mode            uniform;      &#x2F;&#x2F; uniform or lookup        &#x2F;&#x2F; For uniform option        temperature     constant 500; &#x2F;&#x2F; fixed temperature with time [K]        &#x2F;&#x2F; For lookup option        &#x2F;&#x2F; T            &lt;Tname&gt;;      &#x2F;&#x2F; optional temperature field name        phase           gas; &#x2F;&#x2F; optional    &#125;    \endverbatimNote:    The &#39;uniform&#39; option allows the use of a time-varying uniform temperature    by means of the Function1 type.See also    Foam::fvOptionfvOptions&#x2F;constraints&#x2F;fixedValueConstraint    Constrain the field values within a specified region.Usage    For example to set the turbulence properties within a porous region:    \verbatim    porosityTurbulence    &#123;        type            scalarFixedValueConstraint;        active          yes;        selectionMode   cellZone;        cellZone        porosity;        fieldValues        &#123;            k           1;            epsilon     150;        &#125;    &#125;    \endverbatimSee also    Foam::fvOptionfvOptions&#x2F;corrections&#x2F;limitTemperature    Correction for temperature to apply limits between minimum and maximum    values.Usage    Example usage:    \verbatim    limitT    &#123;        type            limitTemperature;        active          yes;        selectionMode   all;        min             200;        max             500;        phase           gas; &#x2F;&#x2F; optional    &#125;    \endverbatimfvOptions&#x2F;corrections&#x2F;limitVelocity    Limits the maximum velocity magnitude to the specified \c max value.Usage    Example usage:    \verbatim    limitU    &#123;        type            limitVelocity;        active          yes;        selectionMode   all;        max             100;    &#125;    \endverbatimfvOptions&#x2F;interRegionOption    Base class for inter-region exchange.fvOptions&#x2F;sources&#x2F;derived&#x2F;accelerationSource    This fvOption applies an explicit acceleration force to components of the    velocity field.Usage    Example usage:    \verbatim    accelerationSource    &#123;        type        accelerationSource;        active      on;        selectionMode all;        U           U;        velocity    scale;        value       (-2.572 0 0);        scale        &#123;            type        halfCosineRamp;            start       0;            duration    10;        &#125;    &#125;    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;actuationDiskSource    Actuation disk source    Constant values for momentum source for actuation disk    \f[        T &#x3D; 2 \rho A U_&#123;o&#125;^2 a (1-a)    \f]    and    \f[        U_1 &#x3D; (1 - a)U_&#123;o&#125;    \f]    where:    \vartable        A   | disk area        U_o | upstream velocity        a   | 1 - Cp&#x2F;Ct        U_1 | velocity at the disk    \endvartableUsage    Example usage:    \verbatim    fields          (U);        &#x2F;&#x2F; names of fields to apply source    diskDir         (-1 0 0);   &#x2F;&#x2F; disk direction    Cp              0.1;        &#x2F;&#x2F; power coefficient    Ct              0.5;        &#x2F;&#x2F; thrust coefficient    diskArea        5.0;        &#x2F;&#x2F; disk area    upstreamPoint   (0 0 0);    &#x2F;&#x2F; upstream point    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;buoyancyEnergy    Calculates and applies the buoyancy energy source rho*(U&amp;g) to the energy    equation.Usage    Example usage:    \verbatim    fields          (h);                    &#x2F;&#x2F; Name of energy field    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;buoyancyForce    Calculates and applies the buoyancy force rho*g to the momentum equation    corresponding to the specified velocity field.Usage    Example usage:    \verbatim    fields          (U);                    &#x2F;&#x2F; Name of velocity field    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;damping&#x2F;damping    Base fvOption for damping functions.See also    Foam::fv::isotropicDamping    Foam::fv::verticalDampingfvOptions&#x2F;sources&#x2F;derived&#x2F;damping&#x2F;isotropicDamping    This fvOption applies an implicit damping force to all components of the    vector field to relax the field towards a specified uniform value.  Its    intended purpose is to damp the motions of an interface in the region    approaching an outlet so that no reflections are generated.    The damping force coefficient \f$\lambda\f$ should be set based on the    desired level of damping and the residence time of a perturbation through    the damping zone.  For example, if waves moving at 2 [m&#x2F;s] are travelling    through a damping zone 8 [m] in length, then the residence time is 4 [s]. If    it is deemed necessary to damp for 5 time-scales, then \f$\lambda\f$ should    be set to equal 5&#x2F;(4 [s]) &#x3D; 1.2 [1&#x2F;s].Usage    Example usage:    \verbatim    isotropicDamping1    &#123;        type            isotropicDamping;        selectionMode   cellZone;        cellZone        nearOutlet;        value           (2 0 0);   &#x2F;&#x2F; Value towards which the field it relaxed        lambda          [0 0 -1 0 0 0 0] 1; &#x2F;&#x2F; Damping coefficient        timeStart       0;        duration        1e6;    &#125;    \endverbatim    Example usage with graduated onset:    \verbatim    isotropicDamping1    &#123;        type            isotropicDamping;        selectionMode   all;        &#x2F;&#x2F; Define the line along which to apply the graduation        origin          (1200 0 0);        direction       (1 0 0);        &#x2F;&#x2F; Or, define multiple lines        &#x2F;&#x2F; origins         ((1200 0 0) (1200 -300 0) (1200 300 0));        &#x2F;&#x2F; directions      ((1 0 0) (0 -1 0) (0 1 0));        scale        &#123;            type        halfCosineRamp;            start       0;            duration    600;        &#125;        value           (2 0 0);   &#x2F;&#x2F; Value towards which the field it relaxed        lambda          [0 0 -1 0 0 0 0] 1; &#x2F;&#x2F; Damping coefficient        timeStart       0;        duration        1e6;    &#125;    \endverbatimSee also    Foam::fv::damping    Foam::fv::verticalDampingfvOptions&#x2F;sources&#x2F;derived&#x2F;damping&#x2F;verticalDamping    This fvOption applies an explicit damping force to components of the vector    field in the direction of gravity. Its intended purpose is to damp the    vertical motions of an interface in the region approaching an outlet so that    no reflections are generated.    Damping is achieved by applying a force to the momentum equation    proportional to the momentum of the flow in the direction of gravity. The    constant of proportionality is given by a coefficient \f$\lambda\f$ which    has units of inverse-time. In the absence of any other forces this would    generate an exponential decay of the vertical velocity.        \f[            \frac&#123;d (m u_z)&#125;&#123;d t&#125; &#x3D; - \lambda m u_z        \f]        \f[            u_z &#x3D; u_&#123;z0&#125; e^&#123;- \lambda t&#125;        \f]    The coefficient \f$\lambda\f$ should be set based on the desired level of    damping and the residence time of a perturbation through the damping zone.    For example, if waves moving at 2 [m&#x2F;s] are travelling through a damping    zone 8 [m] in length, then the residence time is 4 [s]. If it is deemed    necessary to damp for 5 time-scales, then \f$\lambda\f$ should be set to    equal 5&#x2F;(4 [s]) &#x3D; 1.2 [1&#x2F;s].Usage    Example usage:    \verbatim    verticalDamping1    &#123;        type            verticalDamping;        selectionMode   cellZone;        cellZone        nearOutlet;        lambda          [0 0 -1 0 0 0 0] 1; &#x2F;&#x2F; Damping coefficient        timeStart       0;        duration        1e6;    &#125;    \endverbatim    Example usage with graduated onset:    \verbatim    verticalDamping1    &#123;        type            verticalDamping;        selectionMode   all;        &#x2F;&#x2F; Define the line along which to apply the graduation        origin          (1200 0 0);        direction       (1 0 0);        &#x2F;&#x2F; Or, define multiple lines        &#x2F;&#x2F; origins         ((1200 0 0) (1200 -300 0) (1200 300 0));        &#x2F;&#x2F; directions      ((1 0 0) (0 -1 0) (0 1 0));        scale        &#123;            type        halfCosineRamp;            start       0;            duration    600;        &#125;        lambda          [0 0 -1 0 0 0 0] 1; &#x2F;&#x2F; Damping coefficient        timeStart       0;        duration        1e6;    &#125;    \endverbatimSee also    Foam::fv::damping    Foam::fv::isotropicDampingfvOptions&#x2F;sources&#x2F;derived&#x2F;effectivenessHeatExchangerSource    Heat exchanger source model, in which the heat exchanger is defined as a    selection of cells.    The total heat exchange source is given by:    \f[        Q_t &#x3D; e(\phi, \dot&#123;m&#125;_2) (T_2 - T_1) \phi c_p    \f]    where:    \vartable        Q_t       | total heat source        e(\phi,\dot&#123;m&#125;_2) | effectiveness table        \phi      | net mass flux entering heat exchanger [kg&#x2F;s]        \dot&#123;m&#125;_2 | secondary mass flow rate [kg&#x2F;s]        T_1       | primary inlet temperature [K]        T_2       | secondary inlet temperature [K]        c_p       | specific heat capacity [J&#x2F;kg&#x2F;K]    \endvartable    The distribution inside the hear exchanger is given by:    \f[        Q_c &#x3D; \frac&#123;V_c |U_c| (T_c - T_&#123;ref&#125;)&#125;&#123;\sum(V_c |U_c| (T_c - T_&#123;ref&#125;))&#125;    \f]    where:    \vartable        Q_c     | source for cell        V_c     | volume of the cell [m^3]        U_c     | local cell velocity [m&#x2F;s]        T_c     | local call temperature [K]        T_&#123;ref&#125; | min or max(T) in cell zone depending on the sign of Q_t [K]    \endvartableUsage    Example usage:    \verbatim    effectivenessHeatExchangerSource1    &#123;        type            effectivenessHeatExchangerSource;        active          yes;        selectionMode   cellZone;        cellZone        porosity;        secondaryMassFlowRate   1.0;        secondaryInletT         336;        primaryInletT           293;        faceZone                facesZoneInletOriented;        outOfBounds             clamp;        file                    &quot;effTable&quot;;    &#125;    \endverbatim    The effectiveness table is described in terms of the primary and secondary    mass flow rates.  For example, the table:                           secondary MFR                       |  0.1   0.2   0.3                  -----+-----------------                  0.02 |   A     B     C     primary MFR  0.04 |   D     E     F                  0.06 |   G     H     I    Is specified by the following:        (            0.02            (                (0.1    A)                (0.2    B)                (0.3    C)            ),            0.04            (                (0.1    D)                (0.2    E)                (0.3    F)            ),            0.06            (                (0.1    G)                (0.2    H)                (0.3    I)            )        );Note    - the table with name &quot;file&quot; should have the same units as the      secondary mass flow rate and kg&#x2F;s for phi    - faceZone is the faces at the inlet of the cellzone, it needs to be      created with flip map flags. It is used to integrate the net mass flow      rate into the heat exchangerfvOptions&#x2F;sources&#x2F;derived&#x2F;explicitPorositySource    Explicit porosity sourceUsage    Example usage, here employing the Darcy-Forchheimer model:    \verbatim    explicitPorositySourceCoeffs    &#123;        type            DarcyForchheimer;        DarcyForchheimerCoeffs        &#123;            d   d [0 -2 0 0 0 0 0] (5e7 -1000 -1000);            f   f [0 -1 0 0 0 0 0] (0 0 0);            coordinateSystem            &#123;                type    cartesian;                origin  (0 0 0);                coordinateRotation                &#123;                    type    axesRotation;                    e1  (0.70710678 0.70710678 0);                    e2  (0 0 1);                &#125;            &#125;        &#125;    &#125;    \endverbatimNote:    The porous region must be selected as a cellZone.fvOptions&#x2F;sources&#x2F;derived&#x2F;meanVelocityForce    Calculates and applies the force necessary to maintain the specified mean    velocity.    Note: Currently only handles kinematic pressure (incompressible solvers).Usage    Example usage:    \verbatim    selectionMode   all;                    &#x2F;&#x2F; Apply force to all cells    fields          (U);                    &#x2F;&#x2F; Name of velocity field    Ubar            (10.0 0 0);             &#x2F;&#x2F; Desired mean velocity    relaxation      0.2;                    &#x2F;&#x2F; Optional relaxation factor    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;meanVelocityForce&#x2F;patchMeanVelocityForce    Calculates and applies the force necessary to maintain the specified mean    velocity averaged over the specified patch.    Note: Currently only handles kinematic pressure (incompressible solvers).Usage    Example usage:    \verbatim    selectionMode   all;                    &#x2F;&#x2F; Apply force to all cells    fields          (U);                    &#x2F;&#x2F; Name of velocity field    patch           inlet;                  &#x2F;&#x2F; Name of the patch    Ubar            (10.0 0 0);             &#x2F;&#x2F; Desired mean velocity    relaxation      0.2;                    &#x2F;&#x2F; Optional relaxation factor    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;phaseLimitStabilization    Stabilization source for phase transport equations    Applies an implicit source to the phase transport equation for the specified    \c field when the phase volume fraction is below \c residualAlpha.  The    stabilization rate is provided by the registered    uniformDimensionedScalarField \c rate, which could be extended to also    support volScalarField and volScalarField::Internal field types.  The \c    field is currently stabilized towards zero in the limit of the phase volume    fraction approaching zero but this could be extended to support a    specified value or a value or field looked-up from the database.Usage    Example usage:    \verbatim    stabilization    &#123;        type            symmTensorPhaseLimitStabilization;        field           sigma.liquid;        rate            rLambda.liquid;        residualAlpha   1e-3;    &#125;    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;radialActuationDiskSource    Actuation disk source including radial thrust    Constant values for momentum source for actuation disk    \f[        T &#x3D; 2 \rho A U_&#123;o&#125;^2 a (1-a)    \f]    and    \f[        U_1 &#x3D; (1 - a)U_&#123;o&#125;    \f]    where:    \vartable        A   | disk area        U_o | upstream velocity        a   | 1 - Cp&#x2F;Ct        U_1 | velocity at the disk    \endvartable    The thrust is distributed by a radial function:    \f[        thrust(r) &#x3D; T (C_0 + C_1 r^2 + C_2 r^4)    \f]Usage    Example usage:    \verbatim    fieldName       U;          &#x2F;&#x2F; name of field to apply source    diskDir         (-1 0 0);   &#x2F;&#x2F; disk direction    Cp              0.1;        &#x2F;&#x2F; power coefficient    Ct              0.5;        &#x2F;&#x2F; thrust coefficient    diskArea        5.0;        &#x2F;&#x2F; disk area    coeffs          (0.1 0.5 0.01); &#x2F;&#x2F; radial distribution coefficients    upstreamPoint   (0 0 0);    &#x2F;&#x2F; upstream point    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;rotorDiskSource&#x2F;bladeModel    Blade model class calculates:        Linear interpolated blade twist and chord based on radial position        Interpolation factor (for interpolating profile performance)    Input in list format:        data        (            (profile1 (radius1 twist1 chord1))            (profile1 (radius2 twist2 chord2))        );    where:        radius [m]        twist [deg], converted to [rad] internally        chord [m]fvOptions&#x2F;sources&#x2F;derived&#x2F;rotorDiskSource&#x2F;profileModel&#x2F;lookup    Look-up based profile data - drag and lift coefficients are linearly    interpolated based on the supplied angle of attack    Input in list format:        data        (            (AOA1 Cd1 Cl2)            (AOA2 Cd2 Cl2)            ...            (AOAN CdN CdN)        );    where:        AOA &#x3D; angle of attack [deg] converted to [rad] internally        Cd  &#x3D; drag coefficient        Cl  &#x3D; lift coefficientfvOptions&#x2F;sources&#x2F;derived&#x2F;rotorDiskSource&#x2F;profileModel    Base class for profile modelsfvOptions&#x2F;sources&#x2F;derived&#x2F;rotorDiskSource&#x2F;profileModel&#x2F;series    Series-up based profile data - drag and lift coefficients computed as    sum of cosine series        Cd &#x3D; sum_i(CdCoeff)*cos(i*AOA)        Cl &#x3D; sum_i(ClCoeff)*sin(i*AOA)    where:        AOA &#x3D; angle of attack [deg] converted to [rad] internally        Cd &#x3D; drag coefficient        Cl &#x3D; lift coefficient    Input in two (arbitrary length) lists:        CdCoeffs (coeff1 coeff2 ... coeffN);        ClCoeffs (coeff1 coeff2 ... coeffN);fvOptions&#x2F;sources&#x2F;derived&#x2F;rotorDiskSource    Rotor disk source    Cell based momentum source which approximates the mean effects of    rotor forces on a cylindrical region within the domain.Usage    Example usage:    \verbatim        fields          (U);    &#x2F;&#x2F; names of fields on which to apply source        nBlades         3;      &#x2F;&#x2F; number of blades        tipEffect       0.96;   &#x2F;&#x2F; normalised radius above which lift &#x3D; 0        inletFlowType   local;  &#x2F;&#x2F; inlet flow type specification        geometryMode    auto;   &#x2F;&#x2F; geometry specification        refDirection    (-1 0 0); &#x2F;&#x2F; reference direction                                  &#x2F;&#x2F; - used as reference for psi angle        trimModel       fixed;  &#x2F;&#x2F; fixed || targetForce        flapCoeffs        &#123;            beta0           0;  &#x2F;&#x2F; coning angle [deg]            beta1c          0;  &#x2F;&#x2F; lateral flapping coeff (cos coeff)            beta2s          0;  &#x2F;&#x2F; longitudinal flapping coeff (sin coeff)        &#125;        blade        &#123;            &#x2F;&#x2F; see bladeModel.H for documentation        &#125;        profiles        &#123;            profile1            &#123;                type    lookup; &#x2F;&#x2F; lookup || series                ...                &#x2F;&#x2F; see lookupProfile.H or seriesProfile.H for documentation            &#125;            profile2            &#123;                ...            &#125;        &#125;    \endverbatim    Where:    Valid options for the \c geometryMode entry include:    - auto          : determine rotor co-ord system from cells    - specified     : specified co-ord system    Valid options for the \c inletFlowType entry include:    - fixed         : specified velocity    - local         : use local flow conditions    - surfaceNormal : specified normal velocity (positive towards rotor)See also    Foam::bladeModel    Foam::lookupProfile    Foam::seriesProfilefvOptions&#x2F;sources&#x2F;derived&#x2F;rotorDiskSource&#x2F;trimModel&#x2F;fixed    Fixed trim coefficientsfvOptions&#x2F;sources&#x2F;derived&#x2F;rotorDiskSource&#x2F;trimModel&#x2F;targetCoeff    Target trim forces&#x2F;coefficients    Solves:        c^old + J.d(theta) &#x3D; c^target    Where:        n     &#x3D; time level        c     &#x3D; coefficient vector (thrust force, roll moment, pitch moment)        theta &#x3D; pitch angle vector (collective, roll, pitch)        J     &#x3D; Jacobian [3x3] matrix    The trimmed pitch angles are found via solving the above with a    Newton-Raphson iterative method.  The solver tolerance can be user-input,    using the &#39;tol&#39; entry.    If coefficients are requested (useCoeffs &#x3D; true), the force and moments    are normalised using:                         force        c &#x3D; ---------------------------------            alpha*pi*rho*(omega^2)*(radius^4)    and                         moment        c &#x3D; ---------------------------------            alpha*pi*rho*(omega^2)*(radius^5)    Where:        alpha &#x3D; user-input conversion coefficient (default &#x3D; 1)        rho   &#x3D; density        omega &#x3D; rotor angular velocity        pi    &#x3D; mathematical pifvOptions&#x2F;sources&#x2F;derived&#x2F;rotorDiskSource&#x2F;trimModel&#x2F;trimModel    Trim model base classfvOptions&#x2F;sources&#x2F;derived&#x2F;solidEquilibriumEnergySource    This option adds the thermal inertia of a solid phase into the energy    equation. It assumes that the solid is in thermal equilibrium with the    surrounding fluid phase.    The volume fraction of the solid phase is read from constant&#x2F;alpha.&lt;phase&gt;,    and the associated thermophysical properties are specified in    constant&#x2F;thermophysicalProperties.&lt;phase&gt;.Usage    \table        Property    | Description                            | Req&#39;d? | Default        phase       | Name of the solid phase                | yes    |        field       | Name of the energy field to apply the option to \\                                                             | yes    |    \endtable    Example specification:    \verbatim    &lt;fvOptionName&gt;    &#123;        type        solidEquilibriumEnergySource;        phase       solid;        field       e;    &#125;    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;solidificationMeltingSource    This source is designed to model the effect of solidification and melting    processes, e.g. windshield defrosting.    The isotherm phase change occurs at the melting temperature, \c Tsol (&#x3D; \c    Tliq). The not isotherm phase change occurs between solidus and liquidus    temperature, \c Tsol &lt; \c Tliq respectively, as long as the melt fraction is    greater than the max eutectic melt fraction, \c alpha1e (0 &#x3D; pure_substance,    1 &#x3D; eutectic_mixture is not permitted), where a linear eutectic melt    fraction to temperature relation is considered; e.g. given a specific    quantity of a binary system, \c alpha1 is its melt fraction and \c alpha0 is    its solid fraction, such that \c alpha0 &#x3D; 1 - \c alpha1 therefore, assuming    infinite solute diffusion, the quantity of a component in solid phase is    (1 - \c alpha1) * \c CS where \c CS is the solid concentration of the    considered component and the quantity of a component in liquid phase is \c    alpha1 * \c CL where \c CL is the melt concentration of the considered    component; considering that the total quantity of a component must be equal    to the sum of the quantities of the considered component in the liquid and    solid phases, if \c C0 is the initial concentration of the considered    component before the phase change, then:    \c C0 &#x3D; (1 - \c alpha1) * \c CS + \c alpha1 * \c CL      (lever rule)    from which: \c alpha1 &#x3D; (\c C0 - \c CS) &#x2F; (\c CL - \c CS)    and thus:    - for a miscible binary system \c alpha1e &#x3D; 0;    - for a binary system not miscible at solid state      \c alpha1e &#x3D; \c C0 &#x2F; \c CLE where \c CLE is eutectic melt concentration;    - for a binary system partially-miscible at solid state      \c alpha1e &#x3D; (\c C0 - \c CSE) &#x2F; (\c CLE - \c CSE) where \c CSE is eutectic      solid concentration of the relative solid solution.    The presence of the solid phase in the flow field is incorporated into the    model as a momentum porosity contribution; the energy associated with the    phase change is added as an enthalpy contribution.    References:    \verbatim        Voller, V. R., &amp; Prakash, C. (1987).        A fixed grid numerical modelling methodology for convection-diffusion        mushy region phase-change problems.        International Journal of Heat and Mass Transfer, 30(8), 1709-1719.        Swaminathan, C. R., &amp; Voller, V. R. (1992).        A general enthalpy method for modeling solidification processes.        Metallurgical transactions B, 23(5), 651-664.    \endverbatim    The model generates the field \c \&lt;name\&gt;:alpha1 which can be visualised to    to show the melt distribution as a fraction [0-1].Usage    Example usage:    \verbatim    solidificationMeltingSource1    &#123;        type            solidificationMeltingSource;        active          yes;        selectionMode   cellZone;        cellZone        iceZone;        Tsol            273;        L               334000;        thermoMode      thermo;        beta            50e-6;        rhoRef          800;    &#125;    \endverbatim    Where:    \table        Property   | Description                     | Required | Default value        Tsol       | Solidus temperature [K]             | yes      |        Tliq       | Liquidus temperature [K]            | no       | Tsol        alpha1e    | Max eutectic melt fraction [0-1[    | no       | 0        L          | Latent heat of fusion [J&#x2F;kg]        | yes      |        relax      | Relaxation coefficient [0-1]        | no       | 0.9        thermoMode | Thermo mode [thermo|lookup]         | yes      |        rhoRef     | Reference (solid) density [kg&#x2F;m^3]  | yes      |        rho        | Name of density field               | no       | rho        T          | Name of temperature field           | no       | T        Cp         | Name of specific heat field         | no       | Cp        U          | Name of velocity field              | no       | U        phi        | Name of flux field                  | no       | phi        Cu         | Model coefficient [1&#x2F;s]             | no       | 100000        q          | Model coefficient                   | no       | 0.001        beta       | Thermal expansion coefficient [1&#x2F;K] | yes      |        g          | Accelerartion due to gravity        | no       |    \endtablefvOptions&#x2F;sources&#x2F;derived&#x2F;tabulatedAccelerationSource&#x2F;tabulated6DoFAcceleration    Tabulated 6DoF acceleration.    Obtained by interpolating tabulated data for linear acceleration,    angular velocity and angular acceleration.fvOptions&#x2F;sources&#x2F;derived&#x2F;tabulatedAccelerationSource    Solid-body 6-DoF acceleration sourceUsage    Example usage:    \verbatim    SBM    &#123;        type            tabulatedAccelerationSource;        active          yes;        timeDataFileName &quot;constant&#x2F;acceleration-terms.dat&quot;;    &#125;    \endverbatimfvOptions&#x2F;sources&#x2F;derived&#x2F;volumeFractionSource    This option adds transport terms into the equations to account for the    presence of a constant volume fraction. The volume fraction is read from    constant&#x2F;alpha.&lt;phase&gt;, where &lt;phase&gt; is given as a parameter to the    option. Both advective and diffusive terms are added, and the resulting    solution is time-accurate. The flux and velocity are treated as    superficial.    This can be used to represent the effect of porous media that are caused    purely by the reduction in volume of the fluid phase; i.e., additional    blockage, and changes to transport and diffusion rates. It does not    represent losses or transfers with the porous media. That requires separate    sub-modelling.Usage    \table        Property    | Description                            | Req&#39;d? | Default        phase       | Name of the phase associated with the volume fraction \\                                                             | yes    |        phi         | Name of the flux field                 | no     | phi        rho         | Name of the density field              | no     | rho        U           | Name of the velocity field             | no     | U        fields      | Names of the fields to apply the option to \\                                                             | yes    |    \endtable    Example specification:    \verbatim    &lt;fvOptionName&gt;    &#123;        type        volumeFractionSource;        phase       solid;        phi         phi;        rho         rho;        U           U;        fields      (rho U e);    &#125;    \endverbatimfvOptions&#x2F;sources&#x2F;general&#x2F;codedSource   Constructs on-the-fly fvOption source    The hook functions take the following arguments:    codeCorrect    (        GeometricField&lt;Type, fvPatchField, volMesh&gt;&amp; field    )    codeAddSup    (        fvMatrix&lt;Type&#125;&gt;&amp; eqn,        const label fieldi    )    constrain    (        fvMatrix&lt;Type&#125;&gt;&amp; eqn,        const label fieldi    )    where :        field is the field in fieldNames        eqn is the fvMatrixUsage    Example usage in controlDict:    \verbatim    energySource    &#123;        type            scalarCodedSource;        active          yes;        name    sourceTime;        scalarCodedSourceCoeffs        &#123;            selectionMode   all;            fields          (h);            codeInclude            #&#123;            #&#125;;            codeCorrect            #&#123;                Pout&lt;&lt; &quot;**codeCorrect**&quot; &lt;&lt; endl;            #&#125;;            codeAddSup            #&#123;                const Time&amp; time &#x3D; mesh().time();                const scalarField&amp; V &#x3D; mesh_.V();                scalarField&amp; heSource &#x3D; eqn.source();                heSource -&#x3D; 0.1*sqr(time.value())*V;            #&#125;;            codeSetValue            #&#123;                Pout&lt;&lt; &quot;**codeSetValue**&quot; &lt;&lt; endl;            #&#125;;        &#125;        sourceTimeCoeffs        &#123;            $scalarCodedSourceCoeffs;        &#125;    &#125;    \endverbatimfvOptions&#x2F;sources&#x2F;general&#x2F;semiImplicitSource    Semi-implicit source, described using an input dictionary.  The injection    rate coefficients are specified as pairs of Su-Sp coefficients, i.e.        \f[            S(x) &#x3D; S_u + S_p x        \f]    where    \vartable        S(x)    | net source for field &#39;x&#39;        S_u     | explicit source contribution        S_p     | linearised implicit contribution    \endvartable    Example tabulated heat source specification for internal energy:    \verbatim    volumeMode      absolute; &#x2F;&#x2F; specific    sources    &#123;        e        &#123;            explicit table ((0 0) (1.5 $power));            implicit 0;        &#125;    &#125;    \endverbatim    Example coded heat source specification for enthalpy:    \verbatim    volumeMode      absolute; &#x2F;&#x2F; specific    sources    &#123;        h        &#123;            explicit            &#123;                type coded;                name heatInjection;                code                #&#123;                    &#x2F;&#x2F; Power amplitude                    const scalar powerAmplitude &#x3D; 1000;                    &#x2F;&#x2F; x is the current time                    return mag(powerAmplitude*sin(x));                #&#125;;            &#125;            implicit 0;        &#125;    &#125;    \endverbatim    Valid options for the \c volumeMode entry include:    - absolute: values are given as \&lt;quantity\&gt;    - specific: values are given as \&lt;quantity\&gt;&#x2F;m3See also    Foam::fvOptionfvOptions&#x2F;sources&#x2F;interRegion&#x2F;interRegionExplicitPorositySource    Inter-region explicit porosity source.    Sources described by, for example using the DarcyForchheimer model:    \verbatim    interRegionExplicitPorositySourceCoeffs    &#123;        type            DarcyForchheimer;        DarcyForchheimerCoeffs        &#123;            d   d [0 -2 0 0 0 0 0] (5e7 -1000 -1000);            f   f [0 -1 0 0 0 0 0] (0 0 0);            coordinateSystem            &#123;                e1  (0.70710678 0.70710678 0);                e2  (0 0 1);            &#125;        &#125;    &#125;    \endverbatimNote    The porous region must be selected as a cellZone.fvOptions&#x2F;sources&#x2F;interRegion&#x2F;interRegionHeatTransfer&#x2F;constantHeatTransfer    Constant heat transfer model. htcConst [W&#x2F;m^2&#x2F;K] and area&#x2F;volume [1&#x2F;m]    must be provided.fvOptions&#x2F;sources&#x2F;interRegion&#x2F;interRegionHeatTransfer&#x2F;interRegionHeatTransferModel    Base class for inter region heat exchange. The derived classes must    provide the heat transfer coefficient (htc) which is used as follows    in the energy equation.     \f[        -htc*Tmapped + Sp(htc, T)     \f]fvOptions&#x2F;sources&#x2F;interRegion&#x2F;interRegionHeatTransfer&#x2F;tabulatedHeatTransfer    Tabulated heat transfer model. The heat exchange area per unit volume    must be provided.  The 2D table returns the heat transfer coefficient    by querying the local and neighbour region velocitiesfvOptions&#x2F;sources&#x2F;interRegion&#x2F;interRegionHeatTransfer&#x2F;variableHeatTransfer    Variable heat transfer model depending on local values. The area of contact    between regions (area) must be provided. The Nu number is calculated as:        Nu &#x3D; a*pow(Re, b)*pow(Pr, c)    and the heat transfer coefficient as:        htc &#x3D; Nu*K&#x2F;ds    where:        K is the heat conduction        ds is the strut diameter<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ffmpeg Documentation</title>
    <link href="/ffmpeg/"/>
    <url>/ffmpeg/</url>
    
    <content type="html"><![CDATA[<p>ffmpeg Documentation</p><span id="more"></span><h1 id="ffmpeg-Documentation"><a href="#ffmpeg-Documentation" class="headerlink" title="ffmpeg Documentation"></a>ffmpeg Documentation</h1><h2 id="Table-of-Contents"><a href="#Table-of-Contents" class="headerlink" title="Table of Contents"></a>Table of Contents</h2><ul><li><a href="https://ffmpeg.org/ffmpeg.html#Synopsis">1 Synopsis</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Description">2 Description</a></li><li>3 Detailed description<ul><li>3.1 Filtering<ul><li><a href="https://ffmpeg.org/ffmpeg.html#Simple-filtergraphs">3.1.1 Simple filtergraphs</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Complex-filtergraphs">3.1.2 Complex filtergraphs</a></li></ul></li><li><a href="https://ffmpeg.org/ffmpeg.html#Stream-copy">3.2 Stream copy</a></li></ul></li><li>4 Stream selection<ul><li>4.1 Description<ul><li><a href="https://ffmpeg.org/ffmpeg.html#Automatic-stream-selection">4.1.1 Automatic stream selection</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Manual-stream-selection">4.1.2 Manual stream selection</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Complex-filtergraphs-1">4.1.3 Complex filtergraphs</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Stream-handling">4.1.4 Stream handling</a></li></ul></li><li><a href="https://ffmpeg.org/ffmpeg.html#Examples">4.2 Examples</a></li></ul></li><li>5 Options<ul><li><a href="https://ffmpeg.org/ffmpeg.html#Stream-specifiers-1">5.1 Stream specifiers</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Generic-options">5.2 Generic options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#AVOptions">5.3 AVOptions</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Main-options">5.4 Main options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Video-Options">5.5 Video Options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Advanced-Video-options">5.6 Advanced Video options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Audio-Options">5.7 Audio Options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Advanced-Audio-options">5.8 Advanced Audio options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Subtitle-options">5.9 Subtitle options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Advanced-Subtitle-options">5.10 Advanced Subtitle options</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Advanced-options">5.11 Advanced options</a></li><li>5.12 Preset files<ul><li><a href="https://ffmpeg.org/ffmpeg.html#ffpreset-files">5.12.1 ffpreset files</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#avpreset-files">5.12.2 avpreset files</a></li></ul></li></ul></li><li>6 Examples<ul><li><a href="https://ffmpeg.org/ffmpeg.html#Video-and-Audio-grabbing">6.1 Video and Audio grabbing</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#X11-grabbing">6.2 X11 grabbing</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Video-and-Audio-file-format-conversion">6.3 Video and Audio file format conversion</a></li></ul></li><li><a href="https://ffmpeg.org/ffmpeg.html#See-Also">7 See Also</a></li><li><a href="https://ffmpeg.org/ffmpeg.html#Authors">8 Authors</a></li></ul><h2 id="1-Synopsis"><a href="#1-Synopsis" class="headerlink" title="1 Synopsis"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Synopsis">1 Synopsis</a></h2><p>ffmpeg [global_options] {[input_file_options] -i input_url} … {[output_file_options] output_url} …</p><h2 id="2-Description"><a href="#2-Description" class="headerlink" title="2 Description"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Description">2 Description</a></h2><p><code>ffmpeg</code> is a very fast video and audio converter that can also grab from a live audio/video source. It can also convert between arbitrary sample rates and resize video on the fly with a high quality polyphase filter.</p><p><code>ffmpeg</code> reads from an arbitrary number of input “files” (which can be regular files, pipes, network streams, grabbing devices, etc.), specified by the <code>-i</code> option, and writes to an arbitrary number of output “files”, which are specified by a plain output url. Anything found on the command line which cannot be interpreted as an option is considered to be an output url.</p><p>Each input or output url can, in principle, contain any number of streams of different types (video/audio/subtitle/attachment/data). The allowed number and/or types of streams may be limited by the container format. Selecting which streams from which inputs will go into which output is either done automatically or with the <code>-map</code> option (see the Stream selection chapter).</p><p>To refer to input files in options, you must use their indices (0-based). E.g. the first input file is <code>0</code>, the second is <code>1</code>, etc. Similarly, streams within a file are referred to by their indices. E.g. <code>2:3</code> refers to the fourth stream in the third input file. Also see the Stream specifiers chapter.</p><p>As a general rule, options are applied to the next specified file. Therefore, order is important, and you can have the same option on the command line multiple times. Each occurrence is then applied to the next input or output file. Exceptions from this rule are the global options (e.g. verbosity level), which should be specified first.</p><p>Do not mix input and output files – first specify all input files, then all output files. Also do not mix options which belong to different files. All options apply ONLY to the next input or output file and are reset between files.</p><ul><li><p>To set the video bitrate of the output file to 64 kbit/s:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i input.avi -b:v 64k -bufsize 64k output.avi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>To force the frame rate of the output file to 24 fps:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i input.avi -r 24 output.avi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>To force the frame rate of the input file (valid for raw formats only) to 1 fps and the frame rate of the output file to 24 fps:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -r 1 -i input.m2v -r 24 output.avi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ul><p>The format option may be needed for raw input files.</p><h2 id="3-Detailed-description"><a href="#3-Detailed-description" class="headerlink" title="3 Detailed description"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Detailed-description">3 Detailed description</a></h2><p>The transcoding process in <code>ffmpeg</code> for each output can be described by the following diagram:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"> _______              ______________|       |            |              || input |  demuxer   | encoded data |   decoder| file  | ---------&gt; | packets      | -----+|_______|            |______________|      |                                           v                                       _________                                      |         |                                      | decoded |                                      | frames  |                                      |_________| ________             ______________       ||        |           |              |      || output | &lt;-------- | encoded data | &lt;----+| file   |   muxer   | packets      |   encoder|________|           |______________|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p><code>ffmpeg</code> calls the libavformat library (containing demuxers) to read input files and get packets containing encoded data from them. When there are multiple input files, <code>ffmpeg</code> tries to keep them synchronized by tracking lowest timestamp on any active input stream.</p><p>Encoded packets are then passed to the decoder (unless streamcopy is selected for the stream, see further for a description). The decoder produces uncompressed frames (raw video/PCM audio/…) which can be processed further by filtering (see next section). After filtering, the frames are passed to the encoder, which encodes them and outputs encoded packets. Finally those are passed to the muxer, which writes the encoded packets to the output file.</p><h3 id="3-1-Filtering"><a href="#3-1-Filtering" class="headerlink" title="3.1 Filtering"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Filtering">3.1 Filtering</a></h3><p>Before encoding, <code>ffmpeg</code> can process raw audio and video frames using filters from the libavfilter library. Several chained filters form a filter graph. <code>ffmpeg</code> distinguishes between two types of filtergraphs: simple and complex.</p><h4 id="3-1-1-Simple-filtergraphs"><a href="#3-1-1-Simple-filtergraphs" class="headerlink" title="3.1.1 Simple filtergraphs"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Simple-filtergraphs">3.1.1 Simple filtergraphs</a></h4><p>Simple filtergraphs are those that have exactly one input and output, both of the same type. In the above diagram they can be represented by simply inserting an additional step between decoding and encoding:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"> _________                        ______________|         |                      |              || decoded |                      | encoded data || frames  |\                   _ | packets      ||_________| \                  &#x2F;||______________|             \   __________   &#x2F;  simple     _\||          | &#x2F;  encoder  filtergraph   | filtered |&#x2F;                | frames   |                |__________|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>Simple filtergraphs are configured with the per-stream -filter option (with -vf and -af aliases for video and audio respectively). A simple filtergraph for video can look for example like this:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"> _______        _____________        _______        ________|       |      |             |      |       |      |        || input | ---&gt; | deinterlace | ---&gt; | scale | ---&gt; | output ||_______|      |_____________|      |_______|      |________|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>Note that some filters change frame properties but not frame contents. E.g. the <code>fps</code> filter in the example above changes number of frames, but does not touch the frame contents. Another example is the <code>setpts</code> filter, which only sets timestamps and otherwise passes the frames unchanged.</p><h4 id="3-1-2-Complex-filtergraphs"><a href="#3-1-2-Complex-filtergraphs" class="headerlink" title="3.1.2 Complex filtergraphs"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Complex-filtergraphs">3.1.2 Complex filtergraphs</a></h4><p>Complex filtergraphs are those which cannot be described as simply a linear processing chain applied to one stream. This is the case, for example, when the graph has more than one input and/or output, or when output stream type is different from input. They can be represented with the following diagram:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"> _________|         || input 0 |\                    __________|_________| \                  |          |             \   _________    &#x2F;| output 0 |              \ |         |  &#x2F; |__________| _________     \| complex | &#x2F;|         |     |         |&#x2F;| input 1 |----&gt;| filter  |\|_________|     |         | \   __________               &#x2F;| graph   |  \ |          |              &#x2F; |         |   \| output 1 | _________   &#x2F;  |_________|    |__________||         | &#x2F;| input 2 |&#x2F;|_________|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>Complex filtergraphs are configured with the -filter_complex option. Note that this option is global, since a complex filtergraph, by its nature, cannot be unambiguously associated with a single stream or file.</p><p>The -lavfi option is equivalent to -filter_complex.</p><p>A trivial example of a complex filtergraph is the <code>overlay</code> filter, which has two video inputs and one video output, containing one video overlaid on top of the other. Its audio counterpart is the <code>amix</code> filter.</p><h3 id="3-2-Stream-copy"><a href="#3-2-Stream-copy" class="headerlink" title="3.2 Stream copy"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Stream-copy">3.2 Stream copy</a></h3><p>Stream copy is a mode selected by supplying the <code>copy</code> parameter to the -codec option. It makes <code>ffmpeg</code> omit the decoding and encoding step for the specified stream, so it does only demuxing and muxing. It is useful for changing the container format or modifying container-level metadata. The diagram above will, in this case, simplify to this:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none"> _______              ______________            ________|       |            |              |          |        || input |  demuxer   | encoded data |  muxer   | output || file  | ---------&gt; | packets      | -------&gt; | file   ||_______|            |______________|          |________|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>Since there is no decoding or encoding, it is very fast and there is no quality loss. However, it might not work in some cases because of many factors. Applying filters is obviously also impossible, since filters work on uncompressed data.</p><h2 id="4-Stream-selection"><a href="#4-Stream-selection" class="headerlink" title="4 Stream selection"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Stream-selection">4 Stream selection</a></h2><p><code>ffmpeg</code> provides the <code>-map</code> option for manual control of stream selection in each output file. Users can skip <code>-map</code> and let ffmpeg perform automatic stream selection as described below. The <code>-vn / -an / -sn / -dn</code> options can be used to skip inclusion of video, audio, subtitle and data streams respectively, whether manually mapped or automatically selected, except for those streams which are outputs of complex filtergraphs.</p><h3 id="4-1-Description"><a href="#4-1-Description" class="headerlink" title="4.1 Description"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Description-1">4.1 Description</a></h3><p>The sub-sections that follow describe the various rules that are involved in stream selection. The examples that follow next show how these rules are applied in practice.</p><p>While every effort is made to accurately reflect the behavior of the program, FFmpeg is under continuous development and the code may have changed since the time of this writing.</p><h4 id="4-1-1-Automatic-stream-selection"><a href="#4-1-1-Automatic-stream-selection" class="headerlink" title="4.1.1 Automatic stream selection"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Automatic-stream-selection">4.1.1 Automatic stream selection</a></h4><p>In the absence of any map options for a particular output file, ffmpeg inspects the output format to check which type of streams can be included in it, viz. video, audio and/or subtitles. For each acceptable stream type, ffmpeg will pick one stream, when available, from among all the inputs.</p><p>It will select that stream based upon the following criteria:</p><ul><li>for video, it is the stream with the highest resolution,</li><li>for audio, it is the stream with the most channels,</li><li>for subtitles, it is the first subtitle stream found but there’s a caveat. The output format’s default subtitle encoder can be either text-based or image-based, and only a subtitle stream of the same type will be chosen.</li></ul><p>In the case where several streams of the same type rate equally, the stream with the lowest index is chosen.</p><p>Data or attachment streams are not automatically selected and can only be included using <code>-map</code>.</p><h4 id="4-1-2-Manual-stream-selection"><a href="#4-1-2-Manual-stream-selection" class="headerlink" title="4.1.2 Manual stream selection"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Manual-stream-selection">4.1.2 Manual stream selection</a></h4><p>When <code>-map</code> is used, only user-mapped streams are included in that output file, with one possible exception for filtergraph outputs described below.</p><h4 id="4-1-3-Complex-filtergraphs"><a href="#4-1-3-Complex-filtergraphs" class="headerlink" title="4.1.3 Complex filtergraphs"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Complex-filtergraphs-1">4.1.3 Complex filtergraphs</a></h4><p>If there are any complex filtergraph output streams with unlabeled pads, they will be added to the first output file. This will lead to a fatal error if the stream type is not supported by the output format. In the absence of the map option, the inclusion of these streams leads to the automatic stream selection of their types being skipped. If map options are present, these filtergraph streams are included in addition to the mapped streams.</p><p>Complex filtergraph output streams with labeled pads must be mapped once and exactly once.</p><h4 id="4-1-4-Stream-handling"><a href="#4-1-4-Stream-handling" class="headerlink" title="4.1.4 Stream handling"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Stream-handling">4.1.4 Stream handling</a></h4><p>Stream handling is independent of stream selection, with an exception for subtitles described below. Stream handling is set via the <code>-codec</code> option addressed to streams within a specific <em>output</em> file. In particular, codec options are applied by ffmpeg after the stream selection process and thus do not influence the latter. If no <code>-codec</code> option is specified for a stream type, ffmpeg will select the default encoder registered by the output file muxer.</p><p>An exception exists for subtitles. If a subtitle encoder is specified for an output file, the first subtitle stream found of any type, text or image, will be included. ffmpeg does not validate if the specified encoder can convert the selected stream or if the converted stream is acceptable within the output format. This applies generally as well: when the user sets an encoder manually, the stream selection process cannot check if the encoded stream can be muxed into the output file. If it cannot, ffmpeg will abort and <em>all</em> output files will fail to be processed.</p><h3 id="4-2-Examples"><a href="#4-2-Examples" class="headerlink" title="4.2 Examples"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Examples">4.2 Examples</a></h3><p>The following examples illustrate the behavior, quirks and limitations of ffmpeg’s stream selection methods.</p><p>They assume the following three input files.</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">input file &#39;A.avi&#39;      stream 0: video 640x360      stream 1: audio 2 channelsinput file &#39;B.mp4&#39;      stream 0: video 1920x1080      stream 1: audio 2 channels      stream 2: subtitles (text)      stream 3: audio 5.1 channels      stream 4: subtitles (text)input file &#39;C.mkv&#39;      stream 0: video 1280x720      stream 1: audio 2 channels      stream 2: subtitles (image)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h4 id="Example-automatic-stream-selection"><a href="#Example-automatic-stream-selection" class="headerlink" title="Example: automatic stream selection"></a>Example: automatic stream selection</h4><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i A.avi -i B.mp4 out1.mkv out2.wav -map 1:a -c:a copy out3.mov<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>There are three output files specified, and for the first two, no <code>-map</code> options are set, so ffmpeg will select streams for these two files automatically.</p><p>out1.mkv is a Matroska container file and accepts video, audio and subtitle streams, so ffmpeg will try to select one of each type.<br>For video, it will select <code>stream 0</code> from B.mp4, which has the highest resolution among all the input video streams.<br>For audio, it will select <code>stream 3</code> from B.mp4, since it has the greatest number of channels.<br>For subtitles, it will select <code>stream 2</code> from B.mp4, which is the first subtitle stream from among A.avi and B.mp4.</p><p>out2.wav accepts only audio streams, so only <code>stream 3</code> from B.mp4 is selected.</p><p>For out3.mov, since a <code>-map</code> option is set, no automatic stream selection will occur. The <code>-map 1:a</code> option will select all audio streams from the second input B.mp4. No other streams will be included in this output file.</p><p>For the first two outputs, all included streams will be transcoded. The encoders chosen will be the default ones registered by each output format, which may not match the codec of the selected input streams.</p><p>For the third output, codec option for audio streams has been set to <code>copy</code>, so no decoding-filtering-encoding operations will occur, or <em>can</em> occur. Packets of selected streams shall be conveyed from the input file and muxed within the output file.</p><h4 id="Example-automatic-subtitles-selection"><a href="#Example-automatic-subtitles-selection" class="headerlink" title="Example: automatic subtitles selection"></a>Example: automatic subtitles selection</h4><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i C.mkv out1.mkv -c:s dvdsub -an out2.mkv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>Although out1.mkv is a Matroska container file which accepts subtitle streams, only a video and audio stream shall be selected. The subtitle stream of C.mkv is image-based and the default subtitle encoder of the Matroska muxer is text-based, so a transcode operation for the subtitles is expected to fail and hence the stream isn’t selected. However, in out2.mkv, a subtitle encoder is specified in the command and so, the subtitle stream is selected, in addition to the video stream. The presence of <code>-an</code> disables audio stream selection for out2.mkv.</p><h4 id="Example-unlabeled-filtergraph-outputs"><a href="#Example-unlabeled-filtergraph-outputs" class="headerlink" title="Example: unlabeled filtergraph outputs"></a>Example: unlabeled filtergraph outputs</h4><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i A.avi -i C.mkv -i B.mp4 -filter_complex &quot;overlay&quot; out1.mp4 out2.srt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>A filtergraph is setup here using the <code>-filter_complex</code> option and consists of a single video filter. The <code>overlay</code> filter requires exactly two video inputs, but none are specified, so the first two available video streams are used, those of A.avi and C.mkv. The output pad of the filter has no label and so is sent to the first output file out1.mp4. Due to this, automatic selection of the video stream is skipped, which would have selected the stream in B.mp4. The audio stream with most channels viz. <code>stream 3</code> in B.mp4, is chosen automatically. No subtitle stream is chosen however, since the MP4 format has no default subtitle encoder registered, and the user hasn’t specified a subtitle encoder.</p><p>The 2nd output file, out2.srt, only accepts text-based subtitle streams. So, even though the first subtitle stream available belongs to C.mkv, it is image-based and hence skipped. The selected stream, <code>stream 2</code> in B.mp4, is the first text-based subtitle stream.</p><h4 id="Example-labeled-filtergraph-outputs"><a href="#Example-labeled-filtergraph-outputs" class="headerlink" title="Example: labeled filtergraph outputs"></a>Example: labeled filtergraph outputs</h4><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i A.avi -i B.mp4 -i C.mkv -filter_complex &quot;[1:v]hue&#x3D;s&#x3D;0[outv];overlay;aresample&quot; \       -map &#39;[outv]&#39; -an        out1.mp4 \                                out2.mkv \       -map &#39;[outv]&#39; -map 1:a:0 out3.mkv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>The above command will fail, as the output pad labelled <code>[outv]</code> has been mapped twice. None of the output files shall be processed.</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i A.avi -i B.mp4 -i C.mkv -filter_complex &quot;[1:v]hue&#x3D;s&#x3D;0[outv];overlay;aresample&quot; \       -an        out1.mp4 \                  out2.mkv \       -map 1:a:0 out3.mkv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>This command above will also fail as the hue filter output has a label, <code>[outv]</code>, and hasn’t been mapped anywhere.</p><p>The command should be modified as follows,</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i A.avi -i B.mp4 -i C.mkv -filter_complex &quot;[1:v]hue&#x3D;s&#x3D;0,split&#x3D;2[outv1][outv2];overlay;aresample&quot; \        -map &#39;[outv1]&#39; -an        out1.mp4 \                                  out2.mkv \        -map &#39;[outv2]&#39; -map 1:a:0 out3.mkv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>The video stream from B.mp4 is sent to the hue filter, whose output is cloned once using the split filter, and both outputs labelled. Then a copy each is mapped to the first and third output files.</p><p>The overlay filter, requiring two video inputs, uses the first two unused video streams. Those are the streams from A.avi and C.mkv. The overlay output isn’t labelled, so it is sent to the first output file out1.mp4, regardless of the presence of the <code>-map</code> option.</p><p>The aresample filter is sent the first unused audio stream, that of A.avi. Since this filter output is also unlabelled, it too is mapped to the first output file. The presence of <code>-an</code> only suppresses automatic or manual stream selection of audio streams, not outputs sent from filtergraphs. Both these mapped streams shall be ordered before the mapped stream in out1.mp4.</p><p>The video, audio and subtitle streams mapped to <code>out2.mkv</code> are entirely determined by automatic stream selection.</p><p>out3.mkv consists of the cloned video output from the hue filter and the first audio stream from B.mp4.</p><h2 id="5-Options"><a href="#5-Options" class="headerlink" title="5 Options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Options">5 Options</a></h2><p>All the numerical options, if not specified otherwise, accept a string representing a number as input, which may be followed by one of the SI unit prefixes, for example: ’K’, ’M’, or ’G’.</p><p>If ’i’ is appended to the SI unit prefix, the complete prefix will be interpreted as a unit prefix for binary multiples, which are based on powers of 1024 instead of powers of 1000. Appending ’B’ to the SI unit prefix multiplies the value by 8. This allows using, for example: ’KB’, ’MiB’, ’G’ and ’B’ as number suffixes.</p><p>Options which do not take arguments are boolean options, and set the corresponding value to true. They can be set to false by prefixing the option name with “no”. For example using “-nofoo” will set the boolean option with name “foo” to false.</p><h3 id="5-1-Stream-specifiers"><a href="#5-1-Stream-specifiers" class="headerlink" title="5.1 Stream specifiers"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Stream-specifiers-1">5.1 Stream specifiers</a></h3><p>Some options are applied per-stream, e.g. bitrate or codec. Stream specifiers are used to precisely specify which stream(s) a given option belongs to.</p><p>A stream specifier is a string generally appended to the option name and separated from it by a colon. E.g. <code>-codec:a:1 ac3</code> contains the <code>a:1</code> stream specifier, which matches the second audio stream. Therefore, it would select the ac3 codec for the second audio stream.</p><p>A stream specifier can match several streams, so that the option is applied to all of them. E.g. the stream specifier in <code>-b:a 128k</code> matches all audio streams.</p><p>An empty stream specifier matches all streams. For example, <code>-codec copy</code> or <code>-codec: copy</code> would copy all the streams without reencoding.</p><p>Possible forms of stream specifiers are:</p><ul><li><p>stream_index</p><p>Matches the stream with this index. E.g. <code>-threads:1 4</code> would set the thread count for the second stream to 4. If stream_index is used as an additional stream specifier (see below), then it selects stream number stream_index from the matching streams. Stream numbering is based on the order of the streams as detected by libavformat except when a program ID is also specified. In this case it is based on the ordering of the streams in the program.</p></li><li><p>stream_type[:additional_stream_specifier]</p><p>stream_type is one of following: ’v’ or ’V’ for video, ’a’ for audio, ’s’ for subtitle, ’d’ for data, and ’t’ for attachments. ’v’ matches all video streams, ’V’ only matches video streams which are not attached pictures, video thumbnails or cover arts. If additional_stream_specifier is used, then it matches streams which both have this type and match the additional_stream_specifier. Otherwise, it matches all streams of the specified type.</p></li><li><p>p:program_id[:additional_stream_specifier]</p><p>Matches streams which are in the program with the id program_id. If additional_stream_specifier is used, then it matches streams which both are part of the program and match the additional_stream_specifier.</p></li><li><h1 id="stream-id-or-i-stream-id"><a href="#stream-id-or-i-stream-id" class="headerlink" title="stream_id or i:stream_id"></a>stream_id or i:stream_id</h1><p>Match the stream by stream id (e.g. PID in MPEG-TS container).</p></li><li><p>m:key[:value]</p><p>Matches streams with the metadata tag key having the specified value. If value is not given, matches streams that contain the given tag with any value.</p></li><li><p>u</p><p>Matches streams with usable configuration, the codec must be defined and the essential information such as video dimension or audio sample rate must be present.Note that in <code>ffmpeg</code>, matching by metadata will only work properly for input files.</p></li></ul><h3 id="5-2-Generic-options"><a href="#5-2-Generic-options" class="headerlink" title="5.2 Generic options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Generic-options">5.2 Generic options</a></h3><p>These options are shared amongst the ff* tools.</p><ul><li><p>-L</p><p>Show license.</p></li><li><p>-h, -?, -help, —help [arg]</p><p>Show help. An optional parameter may be specified to print help about a specific item. If no argument is specified, only basic (non advanced) tool options are shown.Possible values of arg are:longPrint advanced tool options in addition to the basic tool options.fullPrint complete list of options, including shared and private options for encoders, decoders, demuxers, muxers, filters, etc.decoder=decoder_namePrint detailed information about the decoder named decoder_name. Use the -decoders option to get a list of all decoders.encoder=encoder_namePrint detailed information about the encoder named encoder_name. Use the -encoders option to get a list of all encoders.demuxer=demuxer_namePrint detailed information about the demuxer named demuxer_name. Use the -formats option to get a list of all demuxers and muxers.muxer=muxer_namePrint detailed information about the muxer named muxer_name. Use the -formats option to get a list of all muxers and demuxers.filter=filter_namePrint detailed information about the filter named filter_name. Use the -filters option to get a list of all filters.bsf=bitstream_filter_namePrint detailed information about the bitstream filter named bitstream_filter_name. Use the -bsfs option to get a list of all bitstream filters.protocol=protocol_namePrint detailed information about the protocol named protocol_name. Use the -protocols option to get a list of all protocols.</p></li><li><p>-version</p><p>Show version.</p></li><li><p>-formats</p><p>Show available formats (including devices).</p></li><li><p>-demuxers</p><p>Show available demuxers.</p></li><li><p>-muxers</p><p>Show available muxers.</p></li><li><p>-devices</p><p>Show available devices.</p></li><li><p>-codecs</p><p>Show all codecs known to libavcodec.Note that the term ’codec’ is used throughout this documentation as a shortcut for what is more correctly called a media bitstream format.</p></li><li><p>-decoders</p><p>Show available decoders.</p></li><li><p>-encoders</p><p>Show all available encoders.</p></li><li><p>-bsfs</p><p>Show available bitstream filters.</p></li><li><p>-protocols</p><p>Show available protocols.</p></li><li><p>-filters</p><p>Show available libavfilter filters.</p></li><li><p>-pix_fmts</p><p>Show available pixel formats.</p></li><li><p>-sample_fmts</p><p>Show available sample formats.</p></li><li><p>-layouts</p><p>Show channel names and standard channel layouts.</p></li><li><p>-colors</p><p>Show recognized color names.</p></li><li><p>-sources device[,opt1=val1[,opt2=val2]…]</p><p>Show autodetected sources of the input device. Some devices may provide system-dependent source names that cannot be autodetected. The returned list cannot be assumed to be always complete.<code>ffmpeg -sources pulse,server=192.168.0.4</code></p></li><li><p>-sinks device[,opt1=val1[,opt2=val2]…]</p><p>Show autodetected sinks of the output device. Some devices may provide system-dependent sink names that cannot be autodetected. The returned list cannot be assumed to be always complete.<code>ffmpeg -sinks pulse,server=192.168.0.4</code></p></li><li><p>-loglevel [flags+]loglevel | -v [flags+]loglevel</p><p>Set logging level and flags used by the library.The optional flags prefix can consist of the following values:‘repeat’Indicates that repeated log output should not be compressed to the first line and the “Last message repeated n times” line will be omitted.‘level’Indicates that log output should add a <code>[level]</code> prefix to each message line. This can be used as an alternative to log coloring, e.g. when dumping the log to file.Flags can also be used alone by adding a ’+’/’-’ prefix to set/reset a single flag without affecting other flags or changing loglevel. When setting both flags and loglevel, a ’+’ separator is expected between the last flags value and before loglevel.loglevel is a string or a number containing one of the following values:‘quiet, -8’Show nothing at all; be silent.‘panic, 0’Only show fatal errors which could lead the process to crash, such as an assertion failure. This is not currently used for anything.‘fatal, 8’Only show fatal errors. These are errors after which the process absolutely cannot continue.‘error, 16’Show all errors, including ones which can be recovered from.‘warning, 24’Show all warnings and errors. Any message related to possibly incorrect or unexpected events will be shown.‘info, 32’Show informative messages during processing. This is in addition to warnings and errors. This is the default value.‘verbose, 40’Same as <code>info</code>, except more verbose.‘debug, 48’Show everything, including debugging information.‘trace, 56’For example to enable repeated log output, add the <code>level</code> prefix, and set loglevel to <code>verbose</code>:<code>ffmpeg -loglevel repeat+level+verbose -i input output</code>Another example that enables repeated log output without affecting current state of <code>level</code> prefix flag or loglevel:<code>ffmpeg [...] -loglevel +repeat</code>By default the program logs to stderr. If coloring is supported by the terminal, colors are used to mark errors and warnings. Log coloring can be disabled setting the environment variable <code>AV_LOG_FORCE_NOCOLOR</code>, or can be forced setting the environment variable <code>AV_LOG_FORCE_COLOR</code>.</p></li><li><p>-report</p><p>Dump full command line and log output to a file named <code>program-YYYYMMDD-HHMMSS.log</code> in the current directory. This file can be useful for bug reports. It also implies <code>-loglevel debug</code>.Setting the environment variable <code>FFREPORT</code> to any value has the same effect. If the value is a ’:’-separated key=value sequence, these options will affect the report; option values must be escaped if they contain special characters or the options delimiter ’:’ (see the “Quoting and escaping” section in the ffmpeg-utils manual).The following options are recognized:fileset the file name to use for the report; <code>%p</code> is expanded to the name of the program, <code>%t</code> is expanded to a timestamp, <code>%%</code> is expanded to a plain <code>%</code>levelset the log verbosity level using a numerical value (see <code>-loglevel</code>).For example, to output a report to a file named ffreport.log using a log level of <code>32</code> (alias for log level <code>info</code>):<code>FFREPORT=file=ffreport.log:level=32 ffmpeg -i input output</code>Errors in parsing the environment variable are not fatal, and will not appear in the report.</p></li><li><p>-hide_banner</p><p>Suppress printing banner.All FFmpeg tools will normally show a copyright notice, build options and library versions. This option can be used to suppress printing this information.</p></li><li><p>-cpuflags flags (<em>global</em>)</p><p>Allows setting and clearing cpu flags. This option is intended for testing. Do not use it unless you know what you’re doing.<code>ffmpeg -cpuflags -sse+mmx ... ffmpeg -cpuflags mmx ... ffmpeg -cpuflags 0 ...</code>Possible flags for this option are:‘x86’‘mmx’‘mmxext’‘sse’‘sse2’‘sse2slow’‘sse3’‘sse3slow’‘ssse3’‘atom’‘sse4.1’‘sse4.2’‘avx’‘avx2’‘xop’‘fma3’‘fma4’‘3dnow’‘3dnowext’‘bmi1’‘bmi2’‘cmov’‘ARM’‘armv5te’‘armv6’‘armv6t2’‘vfp’‘vfpv3’‘neon’‘setend’‘AArch64’‘armv8’‘vfp’‘neon’‘PowerPC’‘altivec’‘Specific Processors’‘pentium2’‘pentium3’‘pentium4’‘k6’‘k62’‘athlon’‘athlonxp’‘k8’</p></li></ul><h3 id="5-3-AVOptions"><a href="#5-3-AVOptions" class="headerlink" title="5.3 AVOptions"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-AVOptions">5.3 AVOptions</a></h3><p>These options are provided directly by the libavformat, libavdevice and libavcodec libraries. To see the list of available AVOptions, use the -help option. They are separated into two categories:</p><ul><li><p>generic</p><p>These options can be set for any container, codec or device. Generic options are listed under AVFormatContext options for containers/devices and under AVCodecContext options for codecs.</p></li><li><p>private</p><p>These options are specific to the given container, device or codec. Private options are listed under their corresponding containers/devices/codecs.</p></li></ul><p>For example to write an ID3v2.3 header instead of a default ID3v2.4 to an MP3 file, use the id3v2_version private option of the MP3 muxer:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i input.flac -id3v2_version 3 out.mp3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>All codec AVOptions are per-stream, and thus a stream specifier should be attached to them:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i multichannel.mxf -map 0:v:0 -map 0:a:0 -map 0:a:0 -c:a:0 ac3 -b:a:0 640k -ac:a:1 2 -c:a:1 aac -b:2 128k out.mp4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>In the above example, a multichannel audio stream is mapped twice for output. The first instance is encoded with codec ac3 and bitrate 640k. The second instance is downmixed to 2 channels and encoded with codec aac. A bitrate of 128k is specified for it using absolute index of the output stream.</p><p>Note: the -nooption syntax cannot be used for boolean AVOptions, use -option 0/-option 1.</p><p>Note: the old undocumented way of specifying per-stream AVOptions by prepending v/a/s to the options name is now obsolete and will be removed soon.</p><h3 id="5-4-Main-options"><a href="#5-4-Main-options" class="headerlink" title="5.4 Main options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Main-options">5.4 Main options</a></h3><ul><li><p>-f fmt (<em>input/output</em>)</p><p>Force input or output file format. The format is normally auto detected for input files and guessed from the file extension for output files, so this option is not needed in most cases.</p></li><li><p>-i url (<em>input</em>)</p><p>input file url</p></li><li><p>-y (<em>global</em>)</p><p>Overwrite output files without asking.</p></li><li><p>-n (<em>global</em>)</p><p>Do not overwrite output files, and exit immediately if a specified output file already exists.</p></li><li><p>-stream_loop number (<em>input</em>)</p><p>Set number of times input stream shall be looped. Loop 0 means no loop, loop -1 means infinite loop.</p></li><li><p>-c[:stream_specifier] codec (<em>input/output,per-stream</em>)</p></li><li><p>-codec[:stream_specifier] codec (<em>input/output,per-stream</em>)</p><p>Select an encoder (when used before an output file) or a decoder (when used before an input file) for one or more streams. codec is the name of a decoder/encoder or a special value <code>copy</code> (output only) to indicate that the stream is not to be re-encoded.For example<code>ffmpeg -i INPUT -map 0 -c:v libx264 -c:a copy OUTPUT</code>encodes all video streams with libx264 and copies all audio streams.For each stream, the last matching <code>c</code> option is applied, so<code>ffmpeg -i INPUT -map 0 -c copy -c:v:1 libx264 -c:a:137 libvorbis OUTPUT</code>will copy all the streams except the second video, which will be encoded with libx264, and the 138th audio, which will be encoded with libvorbis.</p></li><li><p>-t duration (<em>input/output</em>)</p><p>When used as an input option (before <code>-i</code>), limit the duration of data read from the input file.When used as an output option (before an output url), stop writing the output after its duration reaches duration.duration must be a time duration specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax">(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual</a>.-to and -t are mutually exclusive and -t has priority.</p></li><li><p>-to position (<em>input/output</em>)</p><p>Stop writing the output or reading the input at position. position must be a time duration specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax">(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual</a>.-to and -t are mutually exclusive and -t has priority.</p></li><li><p>-fs limit_size (<em>output</em>)</p><p>Set the file size limit, expressed in bytes. No further chunk of bytes is written after the limit is exceeded. The size of the output file is slightly more than the requested file size.</p></li><li><p>-ss position (<em>input/output</em>)</p><p>When used as an input option (before <code>-i</code>), seeks in this input file to position. Note that in most formats it is not possible to seek exactly, so <code>ffmpeg</code> will seek to the closest seek point before position. When transcoding and -accurate_seek is enabled (the default), this extra segment between the seek point and position will be decoded and discarded. When doing stream copy or when -noaccurate_seek is used, it will be preserved.When used as an output option (before an output url), decodes but discards input until the timestamps reach position.position must be a time duration specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax">(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual</a>.</p></li><li><p>-sseof position (<em>input</em>)</p><p>Like the <code>-ss</code> option but relative to the “end of file”. That is negative values are earlier in the file, 0 is at EOF.</p></li><li><p>-itsoffset offset (<em>input</em>)</p><p>Set the input time offset.offset must be a time duration specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#time-duration-syntax">(ffmpeg-utils)the Time duration section in the ffmpeg-utils(1) manual</a>.The offset is added to the timestamps of the input files. Specifying a positive offset means that the corresponding streams are delayed by the time duration specified in offset.</p></li><li><p>-itsscale scale (<em>input,per-stream</em>)</p><p>Rescale input timestamps. scale should be a floating point number.</p></li><li><p>-timestamp date (<em>output</em>)</p><p>Set the recording timestamp in the container.date must be a date specification, see <a href="https://ffmpeg.org/ffmpeg-utils.html#date-syntax">(ffmpeg-utils)the Date section in the ffmpeg-utils(1) manual</a>.</p></li><li><p>-metadata[:metadata_specifier] key=value (<em>output,per-metadata</em>)</p><p>Set a metadata key/value pair.An optional metadata_specifier may be given to set metadata on streams, chapters or programs. See <code>-map_metadata</code> documentation for details.This option overrides metadata set with <code>-map_metadata</code>. It is also possible to delete metadata by using an empty value.For example, for setting the title in the output file:<code>ffmpeg -i in.avi -metadata title=&quot;my title&quot; out.flv</code>To set the language of the first audio stream:<code>ffmpeg -i INPUT -metadata:s:a:0 language=eng OUTPUT</code></p></li><li><p>-disposition[:stream_specifier] value (<em>output,per-stream</em>)</p><p>Sets the disposition for a stream.This option overrides the disposition copied from the input stream. It is also possible to delete the disposition by setting it to 0.The following dispositions are recognized:defaultduboriginalcommentlyricskaraokeforcedhearing_impairedvisual_impairedclean_effectsattached_piccaptionsdescriptionsdependentmetadataFor example, to make the second audio stream the default stream:<code>ffmpeg -i in.mkv -c copy -disposition:a:1 default out.mkv</code>To make the second subtitle stream the default stream and remove the default disposition from the first subtitle stream:<code>ffmpeg -i in.mkv -c copy -disposition:s:0 0 -disposition:s:1 default out.mkv</code>To add an embedded cover/thumbnail:<code>ffmpeg -i in.mp4 -i IMAGE -map 0 -map 1 -c copy -c:v:1 png -disposition:v:1 attached_pic out.mp4</code>Not all muxers support embedded thumbnails, and those who do, only support a few formats, like JPEG or PNG.</p></li><li><p>-program [title=title:][program_num=program_num:]st=stream[:st=stream…] (<em>output</em>)</p><p>Creates a program with the specified title, program_num and adds the specified stream(s) to it.</p></li><li><p>-target type (<em>output</em>)</p><p>Specify target file type (<code>vcd</code>, <code>svcd</code>, <code>dvd</code>, <code>dv</code>, <code>dv50</code>). type may be prefixed with <code>pal-</code>, <code>ntsc-</code> or <code>film-</code> to use the corresponding standard. All the format options (bitrate, codecs, buffer sizes) are then set automatically. You can just type:<code>ffmpeg -i myfile.avi -target vcd /tmp/vcd.mpg</code>Nevertheless you can specify additional options as long as you know they do not conflict with the standard, as in:<code>ffmpeg -i myfile.avi -target vcd -bf 2 /tmp/vcd.mpg</code></p></li><li><p>-dn (<em>input/output</em>)</p><p>As an input option, blocks all data streams of a file from being filtered or being automatically selected or mapped for any output. See <code>-discard</code> option to disable streams individually.As an output option, disables data recording i.e. automatic selection or mapping of any data stream. For full manual control see the <code>-map</code> option.</p></li><li><p>-dframes number (<em>output</em>)</p><p>Set the number of data frames to output. This is an obsolete alias for <code>-frames:d</code>, which you should use instead.</p></li><li><p>-frames[:stream_specifier] framecount (<em>output,per-stream</em>)</p><p>Stop writing to the stream after framecount frames.</p></li><li><p>-q[:stream_specifier] q (<em>output,per-stream</em>)</p></li><li><p>-qscale[:stream_specifier] q (<em>output,per-stream</em>)</p><p>Use fixed quality scale (VBR). The meaning of q/qscale is codec-dependent. If qscale is used without a stream_specifier then it applies only to the video stream, this is to maintain compatibility with previous behavior and as specifying the same codec specific value to 2 different codecs that is audio and video generally is not what is intended when no stream_specifier is used.</p></li><li><p>-filter[:stream_specifier] filtergraph (<em>output,per-stream</em>)</p><p>Create the filtergraph specified by filtergraph and use it to filter the stream.filtergraph is a description of the filtergraph to apply to the stream, and must have a single input and a single output of the same type of the stream. In the filtergraph, the input is associated to the label <code>in</code>, and the output to the label <code>out</code>. See the ffmpeg-filters manual for more information about the filtergraph syntax.See the <a href="https://ffmpeg.org/ffmpeg.html#filter_005fcomplex_005foption">-filter_complex option</a> if you want to create filtergraphs with multiple inputs and/or outputs.</p></li><li><p>-filter_script[:stream_specifier] filename (<em>output,per-stream</em>)</p><p>This option is similar to -filter, the only difference is that its argument is the name of the file from which a filtergraph description is to be read.</p></li><li><p>-filter_threads nb_threads (<em>global</em>)</p><p>Defines how many threads are used to process a filter pipeline. Each pipeline will produce a thread pool with this many threads available for parallel processing. The default is the number of available CPUs.</p></li><li><p>-pre[:stream_specifier] preset_name (<em>output,per-stream</em>)</p><p>Specify the preset for matching stream(s).</p></li><li><p>-stats (<em>global</em>)</p><p>Print encoding progress/statistics. It is on by default, to explicitly disable it you need to specify <code>-nostats</code>.</p></li><li><p>-progress url (<em>global</em>)</p><p>Send program-friendly progress information to url.Progress information is written approximately every second and at the end of the encoding process. It is made of “key=value” lines. key consists of only alphanumeric characters. The last key of a sequence of progress information is always “progress”.</p></li><li><p>-stdin</p><p>Enable interaction on standard input. On by default unless standard input is used as an input. To explicitly disable interaction you need to specify <code>-nostdin</code>.Disabling interaction on standard input is useful, for example, if ffmpeg is in the background process group. Roughly the same result can be achieved with <code>ffmpeg ... &lt; /dev/null</code> but it requires a shell.</p></li><li><p>-debug_ts (<em>global</em>)</p><p>Print timestamp information. It is off by default. This option is mostly useful for testing and debugging purposes, and the output format may change from one version to another, so it should not be employed by portable scripts.See also the option <code>-fdebug ts</code>.</p></li><li><p>-attach filename (<em>output</em>)</p><p>Add an attachment to the output file. This is supported by a few formats like Matroska for e.g. fonts used in rendering subtitles. Attachments are implemented as a specific type of stream, so this option will add a new stream to the file. It is then possible to use per-stream options on this stream in the usual way. Attachment streams created with this option will be created after all the other streams (i.e. those created with <code>-map</code> or automatic mappings).Note that for Matroska you also have to set the mimetype metadata tag:<code>ffmpeg -i INPUT -attach DejaVuSans.ttf -metadata:s:2 mimetype=application/x-truetype-font out.mkv</code>(assuming that the attachment stream will be third in the output file).</p></li><li><p>-dump_attachment[:stream_specifier] filename (<em>input,per-stream</em>)</p><p>Extract the matching attachment stream into a file named filename. If filename is empty, then the value of the <code>filename</code> metadata tag will be used.E.g. to extract the first attachment to a file named ’out.ttf’:<code>ffmpeg -dump_attachment:t:0 out.ttf -i INPUT</code>To extract all attachments to files determined by the <code>filename</code> tag:<code>ffmpeg -dump_attachment:t &quot;&quot; -i INPUT</code>Technical note – attachments are implemented as codec extradata, so this option can actually be used to extract extradata from any stream, not just attachments.</p></li></ul><h3 id="5-5-Video-Options"><a href="#5-5-Video-Options" class="headerlink" title="5.5 Video Options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Video-Options">5.5 Video Options</a></h3><ul><li><p>-vframes number (<em>output</em>)</p><p>Set the number of video frames to output. This is an obsolete alias for <code>-frames:v</code>, which you should use instead.</p></li><li><p>-r[:stream_specifier] fps (<em>input/output,per-stream</em>)</p><p>Set frame rate (Hz value, fraction or abbreviation).As an input option, ignore any timestamps stored in the file and instead generate timestamps assuming constant frame rate fps. This is not the same as the -framerate option used for some input formats like image2 or v4l2 (it used to be the same in older versions of FFmpeg). If in doubt use -framerate instead of the input option -r.As an output option, duplicate or drop input frames to achieve constant output frame rate fps.</p></li><li><p>-s[:stream_specifier] size (<em>input/output,per-stream</em>)</p><p>Set frame size.As an input option, this is a shortcut for the video_size private option, recognized by some demuxers for which the frame size is either not stored in the file or is configurable – e.g. raw video or video grabbers.As an output option, this inserts the <code>scale</code> video filter to the <em>end</em> of the corresponding filtergraph. Please use the <code>scale</code> filter directly to insert it at the beginning or some other place.The format is ‘wxh’ (default - same as source).</p></li><li><p>-aspect[:stream_specifier] aspect (<em>output,per-stream</em>)</p><p>Set the video display aspect ratio specified by aspect.aspect can be a floating point number string, or a string of the form num:den, where num and den are the numerator and denominator of the aspect ratio. For example “4:3”, “16:9”, “1.3333”, and “1.7777” are valid argument values.If used together with -vcodec copy, it will affect the aspect ratio stored at container level, but not the aspect ratio stored in encoded frames, if it exists.</p></li><li><p>-vn (<em>input/output</em>)</p><p>As an input option, blocks all video streams of a file from being filtered or being automatically selected or mapped for any output. See <code>-discard</code> option to disable streams individually.As an output option, disables video recording i.e. automatic selection or mapping of any video stream. For full manual control see the <code>-map</code> option.</p></li><li><p>-vcodec codec (<em>output</em>)</p><p>Set the video codec. This is an alias for <code>-codec:v</code>.</p></li><li><p>-pass[:stream_specifier] n (<em>output,per-stream</em>)</p><p>Select the pass number (1 or 2). It is used to do two-pass video encoding. The statistics of the video are recorded in the first pass into a log file (see also the option -passlogfile), and in the second pass that log file is used to generate the video at the exact requested bitrate. On pass 1, you may just deactivate audio and set output to null, examples for Windows and Unix:<code>ffmpeg -i foo.mov -c:v libxvid -pass 1 -an -f rawvideo -y NUL ffmpeg -i foo.mov -c:v libxvid -pass 1 -an -f rawvideo -y /dev/null</code></p></li><li><p>-passlogfile[:stream_specifier] prefix (<em>output,per-stream</em>)</p><p>Set two-pass log file name prefix to prefix, the default file name prefix is “ffmpeg2pass”. The complete file name will be PREFIX-N.log, where N is a number specific to the output stream</p></li><li><p>-vf filtergraph (<em>output</em>)</p><p>Create the filtergraph specified by filtergraph and use it to filter the stream.This is an alias for <code>-filter:v</code>, see the <a href="https://ffmpeg.org/ffmpeg.html#filter_005foption">-filter option</a>.</p></li><li><p>-autorotate</p><p>Automatically rotate the video according to file metadata. Enabled by default, use -noautorotate to disable it.</p></li><li><p>-autoscale</p><p>Automatically scale the video according to the resolution of first frame. Enabled by default, use -noautoscale to disable it. When autoscale is disabled, all output frames of filter graph might not be in the same resolution and may be inadequate for some encoder/muxer. Therefore, it is not recommended to disable it unless you really know what you are doing. Disable autoscale at your own risk.</p></li></ul><h3 id="5-6-Advanced-Video-options"><a href="#5-6-Advanced-Video-options" class="headerlink" title="5.6 Advanced Video options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Advanced-Video-options">5.6 Advanced Video options</a></h3><ul><li><p>-pix_fmt[:stream_specifier] format (<em>input/output,per-stream</em>)</p><p>Set pixel format. Use <code>-pix_fmts</code> to show all the supported pixel formats. If the selected pixel format can not be selected, ffmpeg will print a warning and select the best pixel format supported by the encoder. If pix_fmt is prefixed by a <code>+</code>, ffmpeg will exit with an error if the requested pixel format can not be selected, and automatic conversions inside filtergraphs are disabled. If pix_fmt is a single <code>+</code>, ffmpeg selects the same pixel format as the input (or graph output) and automatic conversions are disabled.</p></li><li><p>-sws_flags flags (<em>input/output</em>)</p><p>Set SwScaler flags.</p></li><li><p>-rc_override[:stream_specifier] override (<em>output,per-stream</em>)</p><p>Rate control override for specific intervals, formatted as “int,int,int” list separated with slashes. Two first values are the beginning and end frame numbers, last one is quantizer to use if positive, or quality factor if negative.</p></li><li><p>-ilme</p><p>Force interlacing support in encoder (MPEG-2 and MPEG-4 only). Use this option if your input file is interlaced and you want to keep the interlaced format for minimum losses. The alternative is to deinterlace the input stream by use of a filter such as <code>yadif</code> or <code>bwdif</code>, but deinterlacing introduces losses.</p></li><li><p>-psnr</p><p>Calculate PSNR of compressed frames.</p></li><li><p>-vstats</p><p>Dump video coding statistics to vstats_HHMMSS.log.</p></li><li><p>-vstats_file file</p><p>Dump video coding statistics to file.</p></li><li><p>-vstats_version file</p><p>Specifies which version of the vstats format to use. Default is 2.version = 1 :<code>frame= %5d q= %2.1f PSNR= %6.2f f_size= %6d s_size= %8.0fkB time= %0.3f br= %7.1fkbits/s avg_br= %7.1fkbits/s</code>version &gt; 1:<code>out= %2d st= %2d frame= %5d q= %2.1f PSNR= %6.2f f_size= %6d s_size= %8.0fkB time= %0.3f br= %7.1fkbits/s avg_br= %7.1fkbits/s</code></p></li><li><p>-top[:stream_specifier] n (<em>output,per-stream</em>)</p><p>top=1/bottom=0/auto=-1 field first</p></li><li><p>-dc precision</p><p>Intra_dc_precision.</p></li><li><p>-vtag fourcc/tag (<em>output</em>)</p><p>Force video tag/fourcc. This is an alias for <code>-tag:v</code>.</p></li><li><p>-qphist (<em>global</em>)</p><p>Show QP histogram</p></li><li><p>-vbsf bitstream_filter</p><p>Deprecated see -bsf</p></li><li><p>-force_key_frames[:stream_specifier] time[,time…] (<em>output,per-stream</em>)</p></li><li><p>-force_key_frames[:stream_specifier] expr:expr (<em>output,per-stream</em>)</p></li><li><p>-force_key_frames[:stream_specifier] source (<em>output,per-stream</em>)</p><p>force_key_frames can take arguments of the following form:time[,time…]If the argument consists of timestamps, ffmpeg will round the specified times to the nearest output timestamp as per the encoder time base and force a keyframe at the first frame having timestamp equal or greater than the computed timestamp. Note that if the encoder time base is too coarse, then the keyframes may be forced on frames with timestamps lower than the specified time. The default encoder time base is the inverse of the output framerate but may be set otherwise via <code>-enc_time_base</code>.If one of the times is “<code>chapters</code>[delta]”, it is expanded into the time of the beginning of all chapters in the file, shifted by delta, expressed as a time in seconds. This option can be useful to ensure that a seek point is present at a chapter mark or any other designated place in the output file.For example, to insert a key frame at 5 minutes, plus key frames 0.1 second before the beginning of every chapter:<code>-force_key_frames 0:05:00,chapters-0.1</code>expr:exprIf the argument is prefixed with <code>expr:</code>, the string expr is interpreted like an expression and is evaluated for each frame. A key frame is forced in case the evaluation is non-zero.The expression in expr can contain the following constants:nthe number of current processed frame, starting from 0n_forcedthe number of forced framesprev_forced_nthe number of the previous forced frame, it is <code>NAN</code> when no keyframe was forced yetprev_forced_tthe time of the previous forced frame, it is <code>NAN</code> when no keyframe was forced yettthe time of the current processed frameFor example to force a key frame every 5 seconds, you can specify:<code>-force_key_frames expr:gte(t,n_forced*5)</code>To force a key frame 5 seconds after the time of the last forced one, starting from second 13:<code>-force_key_frames expr:if(isnan(prev_forced_t),gte(t,13),gte(t,prev_forced_t+5))</code>sourceIf the argument is <code>source</code>, ffmpeg will force a key frame if the current frame being encoded is marked as a key frame in its source.Note that forcing too many keyframes is very harmful for the lookahead algorithms of certain encoders: using fixed-GOP options or similar would be more efficient.</p></li><li><p>-copyinkf[:stream_specifier] (<em>output,per-stream</em>)</p><p>When doing stream copy, copy also non-key frames found at the beginning.</p></li><li><p>-init_hw_device type[=name][:device[,key=value…]]</p><p>Initialise a new hardware device of type type called name, using the given device parameters. If no name is specified it will receive a default name of the form “type%d”.The meaning of device and the following arguments depends on the device type:cudadevice is the number of the CUDA device.dxva2device is the number of the Direct3D 9 display adapter.vaapidevice is either an X11 display name or a DRM render node. If not specified, it will attempt to open the default X11 display (<em>$DISPLAY</em>) and then the first DRM render node (<em>/dev/dri/renderD128</em>).vdpaudevice is an X11 display name. If not specified, it will attempt to open the default X11 display (<em>$DISPLAY</em>).qsvdevice selects a value in ‘MFX<em>IMPL</em><em>’. Allowed values are:autoswhwauto_anyhw_anyhw2hw3hw4If not specified, ‘auto_any’ is used. (Note that it may be easier to achieve the desired result for QSV by creating the platform-appropriate subdevice (‘dxva2’ or ‘vaapi’) and then deriving a QSV device from that.)opencldevice selects the platform and device as </em>platform_index.device_index<em>.The set of devices can also be filtered using the key-value pairs to find only devices matching particular platform or device strings.The strings usable as filters are:platform_profileplatform_versionplatform_nameplatform_vendorplatform_extensionsdevice_namedevice_vendordriver_versiondevice_versiondevice_profiledevice_extensionsdevice_typeThe indices and filters must together uniquely select a device.Examples:</em>-init_hw_device opencl:0.1<em>Choose the second device on the first platform.</em>-init_hw_device opencl:,device_name=Foo9000<em>Choose the device with a name containing the string </em>Foo9000<em>.</em>-init_hw_device opencl:1,device_type=gpu,device_extensions=cl_khr_fp16<em>Choose the GPU device on the second platform supporting the </em>cl_khr_fp16<em> extension.vulkanIf device is an integer, it selects the device by its index in a system-dependent list of devices. If device is any other string, it selects the first device with a name containing that string as a substring.The following options are recognized:debugIf set to 1, enables the validation layer, if installed.linear_imagesIf set to 1, images allocated by the hwcontext will be linear and locally mappable.instance_extensionsA plus separated list of additional instance extensions to enable.device_extensionsA plus separated list of additional device extensions to enable.Examples:</em>-init_hw_device vulkan:1<em>Choose the second device on the system.</em>-init_hw_device vulkan:RADV<em>Choose the first device with a name containing the string </em>RADV<em>.</em>-init_hw_device vulkan:0,instance_extensions=VK_KHR_wayland_surface+VK_KHR_xcb_surface*Choose the first device and enable the Wayland and XCB instance extensions.</p></li><li><p>-init_hw_device type[=name]@source</p><p>Initialise a new hardware device of type type called name, deriving it from the existing device with the name source.</p></li><li><p>-init_hw_device list</p><p>List all hardware device types supported in this build of ffmpeg.</p></li><li><p>-filter_hw_device name</p><p>Pass the hardware device called name to all filters in any filter graph. This can be used to set the device to upload to with the <code>hwupload</code> filter, or the device to map to with the <code>hwmap</code> filter. Other filters may also make use of this parameter when they require a hardware device. Note that this is typically only required when the input is not already in hardware frames - when it is, filters will derive the device they require from the context of the frames they receive as input.This is a global setting, so all filters will receive the same device.</p></li><li><p>-hwaccel[:stream_specifier] hwaccel (<em>input,per-stream</em>)</p><p>Use hardware acceleration to decode the matching stream(s). The allowed values of hwaccel are:noneDo not use any hardware acceleration (the default).autoAutomatically select the hardware acceleration method.vdpauUse VDPAU (Video Decode and Presentation API for Unix) hardware acceleration.dxva2Use DXVA2 (DirectX Video Acceleration) hardware acceleration.vaapiUse VAAPI (Video Acceleration API) hardware acceleration.qsvUse the Intel QuickSync Video acceleration for video transcoding.Unlike most other values, this option does not enable accelerated decoding (that is used automatically whenever a qsv decoder is selected), but accelerated transcoding, without copying the frames into the system memory.For it to work, both the decoder and the encoder must support QSV acceleration and no filters must be used.This option has no effect if the selected hwaccel is not available or not supported by the chosen decoder.Note that most acceleration methods are intended for playback and will not be faster than software decoding on modern CPUs. Additionally, <code>ffmpeg</code> will usually need to copy the decoded frames from the GPU memory into the system memory, resulting in further performance loss. This option is thus mainly useful for testing.</p></li><li><p>-hwaccel_device[:stream_specifier] hwaccel_device (<em>input,per-stream</em>)</p><p>Select a device to use for hardware acceleration.This option only makes sense when the -hwaccel option is also specified. It can either refer to an existing device created with -init_hw_device by name, or it can create a new device as if ‘-init_hw_device’ type:hwaccel_device were called immediately before.</p></li><li><p>-hwaccels</p><p>List all hardware acceleration methods supported in this build of ffmpeg.</p></li></ul><h3 id="5-7-Audio-Options"><a href="#5-7-Audio-Options" class="headerlink" title="5.7 Audio Options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Audio-Options">5.7 Audio Options</a></h3><ul><li><p>-aframes number (<em>output</em>)</p><p>Set the number of audio frames to output. This is an obsolete alias for <code>-frames:a</code>, which you should use instead.</p></li><li><p>-ar[:stream_specifier] freq (<em>input/output,per-stream</em>)</p><p>Set the audio sampling frequency. For output streams it is set by default to the frequency of the corresponding input stream. For input streams this option only makes sense for audio grabbing devices and raw demuxers and is mapped to the corresponding demuxer options.</p></li><li><p>-aq q (<em>output</em>)</p><p>Set the audio quality (codec-specific, VBR). This is an alias for -q:a.</p></li><li><p>-ac[:stream_specifier] channels (<em>input/output,per-stream</em>)</p><p>Set the number of audio channels. For output streams it is set by default to the number of input audio channels. For input streams this option only makes sense for audio grabbing devices and raw demuxers and is mapped to the corresponding demuxer options.</p></li><li><p>-an (<em>input/output</em>)</p><p>As an input option, blocks all audio streams of a file from being filtered or being automatically selected or mapped for any output. See <code>-discard</code> option to disable streams individually.As an output option, disables audio recording i.e. automatic selection or mapping of any audio stream. For full manual control see the <code>-map</code> option.</p></li><li><p>-acodec codec (<em>input/output</em>)</p><p>Set the audio codec. This is an alias for <code>-codec:a</code>.</p></li><li><p>-sample_fmt[:stream_specifier] sample_fmt (<em>output,per-stream</em>)</p><p>Set the audio sample format. Use <code>-sample_fmts</code> to get a list of supported sample formats.</p></li><li><p>-af filtergraph (<em>output</em>)</p><p>Create the filtergraph specified by filtergraph and use it to filter the stream.This is an alias for <code>-filter:a</code>, see the <a href="https://ffmpeg.org/ffmpeg.html#filter_005foption">-filter option</a>.</p></li></ul><h3 id="5-8-Advanced-Audio-options"><a href="#5-8-Advanced-Audio-options" class="headerlink" title="5.8 Advanced Audio options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Advanced-Audio-options">5.8 Advanced Audio options</a></h3><ul><li><p>-atag fourcc/tag (<em>output</em>)</p><p>Force audio tag/fourcc. This is an alias for <code>-tag:a</code>.</p></li><li><p>-absf bitstream_filter</p><p>Deprecated, see -bsf</p></li><li><p>-guess_layout_max channels (<em>input,per-stream</em>)</p><p>If some input channel layout is not known, try to guess only if it corresponds to at most the specified number of channels. For example, 2 tells to <code>ffmpeg</code> to recognize 1 channel as mono and 2 channels as stereo but not 6 channels as 5.1. The default is to always try to guess. Use 0 to disable all guessing.</p></li></ul><h3 id="5-9-Subtitle-options"><a href="#5-9-Subtitle-options" class="headerlink" title="5.9 Subtitle options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Subtitle-options">5.9 Subtitle options</a></h3><ul><li><p>-scodec codec (<em>input/output</em>)</p><p>Set the subtitle codec. This is an alias for <code>-codec:s</code>.</p></li><li><p>-sn (<em>input/output</em>)</p><p>As an input option, blocks all subtitle streams of a file from being filtered or being automatically selected or mapped for any output. See <code>-discard</code> option to disable streams individually.As an output option, disables subtitle recording i.e. automatic selection or mapping of any subtitle stream. For full manual control see the <code>-map</code> option.</p></li><li><p>-sbsf bitstream_filter</p><p>Deprecated, see -bsf</p></li></ul><h3 id="5-10-Advanced-Subtitle-options"><a href="#5-10-Advanced-Subtitle-options" class="headerlink" title="5.10 Advanced Subtitle options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Advanced-Subtitle-options">5.10 Advanced Subtitle options</a></h3><ul><li><p>-fix_sub_duration</p><p>Fix subtitles durations. For each subtitle, wait for the next packet in the same stream and adjust the duration of the first to avoid overlap. This is necessary with some subtitles codecs, especially DVB subtitles, because the duration in the original packet is only a rough estimate and the end is actually marked by an empty subtitle frame. Failing to use this option when necessary can result in exaggerated durations or muxing failures due to non-monotonic timestamps.Note that this option will delay the output of all data until the next subtitle packet is decoded: it may increase memory consumption and latency a lot.</p></li><li><p>-canvas_size size</p><p>Set the size of the canvas used to render subtitles.</p></li></ul><h3 id="5-11-Advanced-options"><a href="#5-11-Advanced-options" class="headerlink" title="5.11 Advanced options"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Advanced-options">5.11 Advanced options</a></h3><ul><li><p>-map [-]input_file_id[:stream_specifier][?][,sync_file_id[:stream_specifier]] | [linklabel] (<em>output</em>)</p><p>Designate one or more input streams as a source for the output file. Each input stream is identified by the input file index input_file_id and the input stream index input_stream_id within the input file. Both indices start at 0. If specified, sync_file_id:stream_specifier sets which input stream is used as a presentation sync reference.The first <code>-map</code> option on the command line specifies the source for output stream 0, the second <code>-map</code> option specifies the source for output stream 1, etc.A <code>-</code> character before the stream identifier creates a “negative” mapping. It disables matching streams from already created mappings.A trailing <code>?</code> after the stream index will allow the map to be optional: if the map matches no streams the map will be ignored instead of failing. Note the map will still fail if an invalid input file index is used; such as if the map refers to a non-existent input.An alternative [linklabel] form will map outputs from complex filter graphs (see the -filter_complex option) to the output file. linklabel must correspond to a defined output link label in the graph.For example, to map ALL streams from the first input file to output<code>ffmpeg -i INPUT -map 0 output</code>For example, if you have two audio streams in the first input file, these streams are identified by “0:0” and “0:1”. You can use <code>-map</code> to select which streams to place in an output file. For example:<code>ffmpeg -i INPUT -map 0:1 out.wav</code>will map the input stream in INPUT identified by “0:1” to the (single) output stream in out.wav.For example, to select the stream with index 2 from input file a.mov (specified by the identifier “0:2”), and stream with index 6 from input b.mov (specified by the identifier “1:6”), and copy them to the output file out.mov:<code>ffmpeg -i a.mov -i b.mov -c copy -map 0:2 -map 1:6 out.mov</code>To select all video and the third audio stream from an input file:<code>ffmpeg -i INPUT -map 0:v -map 0:a:2 OUTPUT</code>To map all the streams except the second audio, use negative mappings<code>ffmpeg -i INPUT -map 0 -map -0:a:1 OUTPUT</code>To map the video and audio streams from the first input, and using the trailing <code>?</code>, ignore the audio mapping if no audio streams exist in the first input:<code>ffmpeg -i INPUT -map 0:v -map 0:a? OUTPUT</code>To pick the English audio stream:<code>ffmpeg -i INPUT -map 0:m:language:eng OUTPUT</code>Note that using this option disables the default mappings for this output file.</p></li><li><p>-ignore_unknown</p><p>Ignore input streams with unknown type instead of failing if copying such streams is attempted.</p></li><li><p>-copy_unknown</p><p>Allow input streams with unknown type to be copied instead of failing if copying such streams is attempted.</p></li><li><p>-map_channel [input_file_id.stream_specifier.channel_id|-1][?][:output_file_id.stream_specifier]</p><p>Map an audio channel from a given input to an output. If output_file_id.stream_specifier is not set, the audio channel will be mapped on all the audio streams.Using “-1” instead of input_file_id.stream_specifier.channel_id will map a muted channel.A trailing <code>?</code> will allow the map_channel to be optional: if the map_channel matches no channel the map_channel will be ignored instead of failing.For example, assuming INPUT is a stereo audio file, you can switch the two audio channels with the following command:<code>ffmpeg -i INPUT -map_channel 0.0.1 -map_channel 0.0.0 OUTPUT</code>If you want to mute the first channel and keep the second:<code>ffmpeg -i INPUT -map_channel -1 -map_channel 0.0.1 OUTPUT</code>The order of the “-map_channel” option specifies the order of the channels in the output stream. The output channel layout is guessed from the number of channels mapped (mono if one “-map_channel”, stereo if two, etc.). Using “-ac” in combination of “-map_channel” makes the channel gain levels to be updated if input and output channel layouts don’t match (for instance two “-map_channel” options and “-ac 6”).You can also extract each channel of an input to specific outputs; the following command extracts two channels of the INPUT audio stream (file 0, stream 0) to the respective OUTPUT_CH0 and OUTPUT_CH1 outputs:<code>ffmpeg -i INPUT -map_channel 0.0.0 OUTPUT_CH0 -map_channel 0.0.1 OUTPUT_CH1</code>The following example splits the channels of a stereo input into two separate streams, which are put into the same output file:<code>ffmpeg -i stereo.wav -map 0:0 -map 0:0 -map_channel 0.0.0:0.0 -map_channel 0.0.1:0.1 -y out.ogg</code>Note that currently each output stream can only contain channels from a single input stream; you can’t for example use “-map_channel” to pick multiple input audio channels contained in different streams (from the same or different files) and merge them into a single output stream. It is therefore not currently possible, for example, to turn two separate mono streams into a single stereo stream. However splitting a stereo stream into two single channel mono streams is possible.If you need this feature, a possible workaround is to use the <em>amerge</em> filter. For example, if you need to merge a media (here input.mkv) with 2 mono audio streams into one single stereo channel audio stream (and keep the video stream), you can use the following command:<code>ffmpeg -i input.mkv -filter_complex &quot;[0:1] [0:2] amerge&quot; -c:a pcm_s16le -c:v copy output.mkv</code>To map the first two audio channels from the first input, and using the trailing <code>?</code>, ignore the audio channel mapping if the first input is mono instead of stereo:<code>ffmpeg -i INPUT -map_channel 0.0.0 -map_channel 0.0.1? OUTPUT</code></p></li><li><p>-map_metadata[:metadata_spec_out] infile[:metadata_spec_in] (<em>output,per-metadata</em>)</p><p>Set metadata information of the next output file from infile. Note that those are file indices (zero-based), not filenames. Optional metadata_spec_in/out parameters specify, which metadata to copy. A metadata specifier can have the following forms:gglobal metadata, i.e. metadata that applies to the whole files[:stream_spec]per-stream metadata. stream_spec is a stream specifier as described in the <a href="https://ffmpeg.org/ffmpeg.html#Stream-specifiers">Stream specifiers</a> chapter. In an input metadata specifier, the first matching stream is copied from. In an output metadata specifier, all matching streams are copied to.c:chapter_indexper-chapter metadata. chapter_index is the zero-based chapter index.p:program_indexper-program metadata. program_index is the zero-based program index.If metadata specifier is omitted, it defaults to global.By default, global metadata is copied from the first input file, per-stream and per-chapter metadata is copied along with streams/chapters. These default mappings are disabled by creating any mapping of the relevant type. A negative file index can be used to create a dummy mapping that just disables automatic copying.For example to copy metadata from the first stream of the input file to global metadata of the output file:<code>ffmpeg -i in.ogg -map_metadata 0:s:0 out.mp3</code>To do the reverse, i.e. copy global metadata to all audio streams:<code>ffmpeg -i in.mkv -map_metadata:s:a 0:g out.mkv</code>Note that simple <code>0</code> would work as well in this example, since global metadata is assumed by default.</p></li><li><p>-map_chapters input_file_index (<em>output</em>)</p><p>Copy chapters from input file with index input_file_index to the next output file. If no chapter mapping is specified, then chapters are copied from the first input file with at least one chapter. Use a negative file index to disable any chapter copying.</p></li><li><p>-benchmark (<em>global</em>)</p><p>Show benchmarking information at the end of an encode. Shows real, system and user time used and maximum memory consumption. Maximum memory consumption is not supported on all systems, it will usually display as 0 if not supported.</p></li><li><p>-benchmark_all (<em>global</em>)</p><p>Show benchmarking information during the encode. Shows real, system and user time used in various steps (audio/video encode/decode).</p></li><li><p>-timelimit duration (<em>global</em>)</p><p>Exit after ffmpeg has been running for duration seconds in CPU user time.</p></li><li><p>-dump (<em>global</em>)</p><p>Dump each input packet to stderr.</p></li><li><p>-hex (<em>global</em>)</p><p>When dumping packets, also dump the payload.</p></li><li><p>-re (<em>input</em>)</p><p>Read input at native frame rate. Mainly used to simulate a grab device, or live input stream (e.g. when reading from a file). Should not be used with actual grab devices or live input streams (where it can cause packet loss). By default <code>ffmpeg</code> attempts to read the input(s) as fast as possible. This option will slow down the reading of the input(s) to the native frame rate of the input(s). It is useful for real-time output (e.g. live streaming).</p></li><li><p>-vsync parameter</p><p>Video sync method. For compatibility reasons old values can be specified as numbers. Newly added values will have to be specified as strings always.0, passthroughEach frame is passed with its timestamp from the demuxer to the muxer.1, cfrFrames will be duplicated and dropped to achieve exactly the requested constant frame rate.2, vfrFrames are passed through with their timestamp or dropped so as to prevent 2 frames from having the same timestamp.dropAs passthrough but destroys all timestamps, making the muxer generate fresh timestamps based on frame-rate.-1, autoChooses between 1 and 2 depending on muxer capabilities. This is the default method.Note that the timestamps may be further modified by the muxer, after this. For example, in the case that the format option avoid_negative_ts is enabled.With -map you can select from which stream the timestamps should be taken. You can leave either video or audio unchanged and sync the remaining stream(s) to the unchanged one.</p></li><li><p>-frame_drop_threshold parameter</p><p>Frame drop threshold, which specifies how much behind video frames can be before they are dropped. In frame rate units, so 1.0 is one frame. The default is -1.1. One possible usecase is to avoid framedrops in case of noisy timestamps or to increase frame drop precision in case of exact timestamps.</p></li><li><p>-async samples_per_second</p><p>Audio sync method. “Stretches/squeezes” the audio stream to match the timestamps, the parameter is the maximum samples per second by which the audio is changed. -async 1 is a special case where only the start of the audio stream is corrected without any later correction.Note that the timestamps may be further modified by the muxer, after this. For example, in the case that the format option avoid_negative_ts is enabled.This option has been deprecated. Use the <code>aresample</code> audio filter instead.</p></li><li><p>-copyts</p><p>Do not process input timestamps, but keep their values without trying to sanitize them. In particular, do not remove the initial start time offset value.Note that, depending on the vsync option or on specific muxer processing (e.g. in case the format option avoid_negative_ts is enabled) the output timestamps may mismatch with the input timestamps even when this option is selected.</p></li><li><p>-start_at_zero</p><p>When used with copyts, shift input timestamps so they start at zero.This means that using e.g. <code>-ss 50</code> will make output timestamps start at 50 seconds, regardless of what timestamp the input file started at.</p></li><li><p>-copytb mode</p><p>Specify how to set the encoder timebase when stream copying. mode is an integer numeric value, and can assume one of the following values:1Use the demuxer timebase.The time base is copied to the output encoder from the corresponding input demuxer. This is sometimes required to avoid non monotonically increasing timestamps when copying video streams with variable frame rate.0Use the decoder timebase.The time base is copied to the output encoder from the corresponding input decoder.-1Try to make the choice automatically, in order to generate a sane output.Default value is -1.</p></li><li><p>-enc_time_base[:stream_specifier] timebase (<em>output,per-stream</em>)</p><p>Set the encoder timebase. timebase is a floating point number, and can assume one of the following values:0Assign a default value according to the media type.For video - use 1/framerate, for audio - use 1/samplerate.-1Use the input stream timebase when possible.If an input stream is not available, the default timebase will be used.&gt;0Use the provided number as the timebase.This field can be provided as a ratio of two integers (e.g. 1:24, 1:48000) or as a floating point number (e.g. 0.04166, 2.0833e-5)Default value is 0.</p></li><li><p>-bitexact (<em>input/output</em>)</p><p>Enable bitexact mode for (de)muxer and (de/en)coder</p></li><li><p>-shortest (<em>output</em>)</p><p>Finish encoding when the shortest input stream ends.</p></li><li><p>-dts_delta_threshold</p><p>Timestamp discontinuity delta threshold.</p></li><li><p>-dts_error_threshold seconds</p><p>Timestamp error delta threshold. This threshold use to discard crazy/damaged timestamps and the default is 30 hours which is arbitrarily picked and quite conservative.</p></li><li><p>-muxdelay seconds (<em>output</em>)</p><p>Set the maximum demux-decode delay.</p></li><li><p>-muxpreload seconds (<em>output</em>)</p><p>Set the initial demux-decode delay.</p></li><li><p>-streamid output-stream-index:new-value (<em>output</em>)</p><p>Assign a new stream-id value to an output stream. This option should be specified prior to the output filename to which it applies. For the situation where multiple output files exist, a streamid may be reassigned to a different value.For example, to set the stream 0 PID to 33 and the stream 1 PID to 36 for an output mpegts file:<code>ffmpeg -i inurl -streamid 0:33 -streamid 1:36 out.ts</code></p></li><li><p>-bsf[:stream_specifier] bitstream_filters (<em>output,per-stream</em>)</p><p>Set bitstream filters for matching streams. bitstream_filters is a comma-separated list of bitstream filters. Use the <code>-bsfs</code> option to get the list of bitstream filters.<code>ffmpeg -i h264.mp4 -c:v copy -bsf:v h264_mp4toannexb -an out.h264 ``ffmpeg -i file.mov -an -vn -bsf:s mov2textsub -c:s copy -f rawvideo sub.txt</code></p></li><li><p>-tag[:stream_specifier] codec_tag (<em>input/output,per-stream</em>)</p><p>Force a tag/fourcc for matching streams.</p></li><li><p>-timecode hh:mm:ssSEPff</p><p>Specify Timecode for writing. SEP is ’:’ for non drop timecode and ’;’ (or ’.’) for drop.<code>ffmpeg -i input.mpg -timecode 01:02:03.04 -r 30000/1001 -s ntsc output.mpg</code></p></li><li><p>-filter_complex filtergraph (<em>global</em>)</p><p>Define a complex filtergraph, i.e. one with arbitrary number of inputs and/or outputs. For simple graphs – those with one input and one output of the same type – see the -filter options. filtergraph is a description of the filtergraph, as described in the “Filtergraph syntax” section of the ffmpeg-filters manual.Input link labels must refer to input streams using the <code>[file_index:stream_specifier]</code> syntax (i.e. the same as -map uses). If stream_specifier matches multiple streams, the first one will be used. An unlabeled input will be connected to the first unused input stream of the matching type.Output link labels are referred to with -map. Unlabeled outputs are added to the first output file.Note that with this option it is possible to use only lavfi sources without normal input files.For example, to overlay an image over video<code>ffmpeg -i video.mkv -i image.png -filter_complex &#39;[0:v][1:v]overlay[out]&#39; -map &#39;[out]&#39; out.mkv</code>Here <code>[0:v]</code> refers to the first video stream in the first input file, which is linked to the first (main) input of the overlay filter. Similarly the first video stream in the second input is linked to the second (overlay) input of overlay.Assuming there is only one video stream in each input file, we can omit input labels, so the above is equivalent to<code>ffmpeg -i video.mkv -i image.png -filter_complex &#39;overlay[out]&#39; -map &#39;[out]&#39; out.mkv</code>Furthermore we can omit the output label and the single output from the filter graph will be added to the output file automatically, so we can simply write<code>ffmpeg -i video.mkv -i image.png -filter_complex &#39;overlay&#39; out.mkv</code>To generate 5 seconds of pure red video using lavfi <code>color</code> source:<code>ffmpeg -filter_complex &#39;color=c=red&#39; -t 5 out.mkv</code></p></li><li><p>-filter_complex_threads nb_threads (<em>global</em>)</p><p>Defines how many threads are used to process a filter_complex graph. Similar to filter_threads but used for <code>-filter_complex</code> graphs only. The default is the number of available CPUs.</p></li><li><p>-lavfi filtergraph (<em>global</em>)</p><p>Define a complex filtergraph, i.e. one with arbitrary number of inputs and/or outputs. Equivalent to -filter_complex.</p></li><li><p>-filter_complex_script filename (<em>global</em>)</p><p>This option is similar to -filter_complex, the only difference is that its argument is the name of the file from which a complex filtergraph description is to be read.</p></li><li><p>-accurate_seek (<em>input</em>)</p><p>This option enables or disables accurate seeking in input files with the -ss option. It is enabled by default, so seeking is accurate when transcoding. Use -noaccurate_seek to disable it, which may be useful e.g. when copying some streams and transcoding the others.</p></li><li><p>-seek_timestamp (<em>input</em>)</p><p>This option enables or disables seeking by timestamp in input files with the -ss option. It is disabled by default. If enabled, the argument to the -ss option is considered an actual timestamp, and is not offset by the start time of the file. This matters only for files which do not start from timestamp 0, such as transport streams.</p></li><li><p>-thread_queue_size size (<em>input</em>)</p><p>This option sets the maximum number of queued packets when reading from the file or device. With low latency / high rate live streams, packets may be discarded if they are not read in a timely manner; setting this value can force ffmpeg to use a separate input thread and read packets as soon as they arrive. By default ffmpeg only do this if multiple inputs are specified.</p></li><li><p>-sdp_file file (<em>global</em>)</p><p>Print sdp information for an output stream to file. This allows dumping sdp information when at least one output isn’t an rtp stream. (Requires at least one of the output formats to be rtp).</p></li><li><p>-discard (<em>input</em>)</p><p>Allows discarding specific streams or frames from streams. Any input stream can be fully discarded, using value <code>all</code> whereas selective discarding of frames from a stream occurs at the demuxer and is not supported by all demuxers.noneDiscard no frame.defaultDefault, which discards no frames.norefDiscard all non-reference frames.bidirDiscard all bidirectional frames.nokeyDiscard all frames excepts keyframes.allDiscard all frames.</p></li><li><p>-abort_on flags (<em>global</em>)</p><p>Stop and abort on various conditions. The following flags are available:empty_outputNo packets were passed to the muxer, the output is empty.empty_output_streamNo packets were passed to the muxer in some of the output streams.</p></li><li><p>-xerror (<em>global</em>)</p><p>Stop and exit on error</p></li><li><p>-max_muxing_queue_size packets (<em>output,per-stream</em>)</p><p>When transcoding audio and/or video streams, ffmpeg will not begin writing into the output until it has one packet for each such stream. While waiting for that to happen, packets for other streams are buffered. This option sets the size of this buffer, in packets, for the matching output stream.The default value of this option should be high enough for most uses, so only touch this option if you are sure that you need it.</p></li><li><p>-muxing_queue_data_threshold bytes (<em>output,per-stream</em>)</p><p>This is a minimum threshold until which the muxing queue size is not taken into account. Defaults to 50 megabytes per stream, and is based on the overall size of packets passed to the muxer.</p></li><li><p>-auto_conversion_filters (<em>global</em>)</p><p>Enable automatically inserting format conversion filters in all filter graphs, including those defined by -vf, -af, -filter_complex and -lavfi. If filter format negotiation requires a conversion, the initialization of the filters will fail. Conversions can still be performed by inserting the relevant conversion filter (scale, aresample) in the graph. On by default, to explicitly disable it you need to specify <code>-noauto_conversion_filters</code>.</p></li></ul><p>As a special exception, you can use a bitmap subtitle stream as input: it will be converted into a video with the same size as the largest video in the file, or 720x576 if no video is present. Note that this is an experimental and temporary solution. It will be removed once libavfilter has proper support for subtitles.</p><p>For example, to hardcode subtitles on top of a DVB-T recording stored in MPEG-TS format, delaying the subtitles by 1 second:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i input.ts -filter_complex \  &#39;[#0x2ef] setpts&#x3D;PTS+1&#x2F;TB [sub] ; [#0x2d0] [sub] overlay&#39; \  -sn -map &#39;#0x2dc&#39; output.mkv<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><p>(0x2d0, 0x2dc and 0x2ef are the MPEG-TS PIDs of respectively the video, audio and subtitles streams; 0:0, 0:3 and 0:7 would have worked too)</p><h3 id="5-12-Preset-files"><a href="#5-12-Preset-files" class="headerlink" title="5.12 Preset files"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Preset-files">5.12 Preset files</a></h3><p>A preset file contains a sequence of option=value pairs, one for each line, specifying a sequence of options which would be awkward to specify on the command line. Lines starting with the hash (’#’) character are ignored and are used to provide comments. Check the presets directory in the FFmpeg source tree for examples.</p><p>There are two types of preset files: ffpreset and avpreset files.</p><h4 id="5-12-1-ffpreset-files"><a href="#5-12-1-ffpreset-files" class="headerlink" title="5.12.1 ffpreset files"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-ffpreset-files">5.12.1 ffpreset files</a></h4><p>ffpreset files are specified with the <code>vpre</code>, <code>apre</code>, <code>spre</code>, and <code>fpre</code> options. The <code>fpre</code> option takes the filename of the preset instead of a preset name as input and can be used for any kind of codec. For the <code>vpre</code>, <code>apre</code>, and <code>spre</code> options, the options specified in a preset file are applied to the currently selected codec of the same type as the preset option.</p><p>The argument passed to the <code>vpre</code>, <code>apre</code>, and <code>spre</code> preset options identifies the preset file to use according to the following rules:</p><p>First ffmpeg searches for a file named arg.ffpreset in the directories $FFMPEG_DATADIR (if set), and $HOME/.ffmpeg, and in the datadir defined at configuration time (usually PREFIX/share/ffmpeg) or in a ffpresets folder along the executable on win32, in that order. For example, if the argument is <code>libvpx-1080p</code>, it will search for the file libvpx-1080p.ffpreset.</p><p>If no such file is found, then ffmpeg will search for a file named codec_name-arg.ffpreset in the above-mentioned directories, where codec_name is the name of the codec to which the preset file options will be applied. For example, if you select the video codec with <code>-vcodec libvpx</code> and use <code>-vpre 1080p</code>, then it will search for the file libvpx-1080p.ffpreset.</p><h4 id="5-12-2-avpreset-files"><a href="#5-12-2-avpreset-files" class="headerlink" title="5.12.2 avpreset files"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-avpreset-files">5.12.2 avpreset files</a></h4><p>avpreset files are specified with the <code>pre</code> option. They work similar to ffpreset files, but they only allow encoder- specific options. Therefore, an option=value pair specifying an encoder cannot be used.</p><p>When the <code>pre</code> option is specified, ffmpeg will look for files with the suffix .avpreset in the directories $AVCONV_DATADIR (if set), and $HOME/.avconv, and in the datadir defined at configuration time (usually PREFIX/share/ffmpeg), in that order.</p><p>First ffmpeg searches for a file named codec_name-arg.avpreset in the above-mentioned directories, where codec_name is the name of the codec to which the preset file options will be applied. For example, if you select the video codec with <code>-vcodec libvpx</code> and use <code>-pre 1080p</code>, then it will search for the file libvpx-1080p.avpreset.</p><p>If no such file is found, then ffmpeg will search for a file named arg.avpreset in the same directories.</p><h2 id="6-Examples"><a href="#6-Examples" class="headerlink" title="6 Examples"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Examples-1">6 Examples</a></h2><h3 id="6-1-Video-and-Audio-grabbing"><a href="#6-1-Video-and-Audio-grabbing" class="headerlink" title="6.1 Video and Audio grabbing"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Video-and-Audio-grabbing">6.1 Video and Audio grabbing</a></h3><p>If you specify the input format and device then ffmpeg can grab video and audio directly.</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -f oss -i &#x2F;dev&#x2F;dsp -f video4linux2 -i &#x2F;dev&#x2F;video0 &#x2F;tmp&#x2F;out.mpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>Or with an ALSA audio source (mono input, card id 1) instead of OSS:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -f alsa -ac 1 -i hw:1 -f video4linux2 -i &#x2F;dev&#x2F;video0 &#x2F;tmp&#x2F;out.mpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>Note that you must activate the right video source and channel before launching ffmpeg with any TV viewer such as <a href="http://linux.bytesex.org/xawtv/">xawtv</a> by Gerd Knorr. You also have to set the audio recording levels correctly with a standard mixer.</p><h3 id="6-2-X11-grabbing"><a href="#6-2-X11-grabbing" class="headerlink" title="6.2 X11 grabbing"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-X11-grabbing">6.2 X11 grabbing</a></h3><p>Grab the X11 display with ffmpeg via</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -f x11grab -video_size cif -framerate 25 -i :0.0 &#x2F;tmp&#x2F;out.mpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>0.0 is display.screen number of your X11 server, same as the DISPLAY environment variable.</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -f x11grab -video_size cif -framerate 25 -i :0.0+10,20 &#x2F;tmp&#x2F;out.mpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>0.0 is display.screen number of your X11 server, same as the DISPLAY environment variable. 10 is the x-offset and 20 the y-offset for the grabbing.</p><h3 id="6-3-Video-and-Audio-file-format-conversion"><a href="#6-3-Video-and-Audio-file-format-conversion" class="headerlink" title="6.3 Video and Audio file format conversion"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Video-and-Audio-file-format-conversion">6.3 Video and Audio file format conversion</a></h3><p>Any supported file format and protocol can serve as input to ffmpeg:</p><p>Examples:</p><ul><li><p>You can use YUV files as input:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i &#x2F;tmp&#x2F;test%d.Y &#x2F;tmp&#x2F;out.mpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>It will use the files:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&#x2F;tmp&#x2F;test0.Y, &#x2F;tmp&#x2F;test0.U, &#x2F;tmp&#x2F;test0.V,&#x2F;tmp&#x2F;test1.Y, &#x2F;tmp&#x2F;test1.U, &#x2F;tmp&#x2F;test1.V, etc...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>The Y files use twice the resolution of the U and V files. They are raw files, without header. They can be generated by all decent video decoders. You must specify the size of the image with the -s option if ffmpeg cannot guess it.</p></li><li><p>You can input from a raw YUV420P file:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i &#x2F;tmp&#x2F;test.yuv &#x2F;tmp&#x2F;out.avi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>test.yuv is a file containing raw YUV planar data. Each frame is composed of the Y plane followed by the U and V planes at half vertical and horizontal resolution.</p></li><li><p>You can output to a raw YUV420P file:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i mydivx.avi hugefile.yuv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>You can set several input files and output files:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i &#x2F;tmp&#x2F;a.wav -s 640x480 -i &#x2F;tmp&#x2F;a.yuv &#x2F;tmp&#x2F;a.mpg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>Converts the audio file a.wav and the raw YUV video file a.yuv to MPEG file a.mpg.</p></li><li><p>You can also do audio and video conversions at the same time:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i &#x2F;tmp&#x2F;a.wav -ar 22050 &#x2F;tmp&#x2F;a.mp2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>Converts a.wav to MPEG audio at 22050 Hz sample rate.</p></li><li><p>You can encode to several formats at the same time and define a mapping from input stream to output streams:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i &#x2F;tmp&#x2F;a.wav -map 0:a -b:a 64k &#x2F;tmp&#x2F;a.mp2 -map 0:a -b:a 128k &#x2F;tmp&#x2F;b.mp2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>Converts a.wav to a.mp2 at 64 kbits and to b.mp2 at 128 kbits. ’-map file:index’ specifies which input stream is used for each output stream, in the order of the definition of output streams.</p></li><li><p>You can transcode decrypted VOBs:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i snatch_1.vob -f avi -c:v mpeg4 -b:v 800k -g 300 -bf 2 -c:a libmp3lame -b:a 128k snatch.avi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>This is a typical DVD ripping example; the input is a VOB file, the output an AVI file with MPEG-4 video and MP3 audio. Note that in this command we use B-frames so the MPEG-4 stream is DivX5 compatible, and GOP size is 300 which means one intra frame every 10 seconds for 29.97fps input video. Furthermore, the audio stream is MP3-encoded so you need to enable LAME support by passing <code>--enable-libmp3lame</code> to configure. The mapping is particularly useful for DVD transcoding to get the desired audio language.</p><p>NOTE: To see the supported input formats, use <code>ffmpeg -demuxers</code>.</p></li><li><p>You can extract images from a video, or create a video from many images:</p><p>For extracting images from a video:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i foo.avi -r 1 -s WxH -f image2 foo-%03d.jpeg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>This will extract one video frame per second from the video and will output them in files named foo-001.jpeg, foo-002.jpeg, etc. Images will be rescaled to fit the new WxH values.</p><p>If you want to extract just a limited number of frames, you can use the above command in combination with the <code>-frames:v</code> or <code>-t</code> option, or in combination with -ss to start extracting from a certain point in time.</p><p>For creating a video from many images:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -f image2 -framerate 12 -i foo-%03d.jpeg -s WxH foo.avi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>The syntax <code>foo-%03d.jpeg</code> specifies to use a decimal number composed of three digits padded with zeroes to express the sequence number. It is the same syntax supported by the C printf function, but only formats accepting a normal integer are suitable.</p><p>When importing an image sequence, -i also supports expanding shell-like wildcard patterns (globbing) internally, by selecting the image2-specific <code>-pattern_type glob</code> option.</p><p>For example, for creating a video from filenames matching the glob pattern <code>foo-*.jpeg</code>:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -f image2 -pattern_type glob -framerate 12 -i &#39;foo-*.jpeg&#39; -s WxH foo.avi<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>You can put many streams of the same type in the output:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i test1.avi -i test2.avi -map 1:1 -map 1:0 -map 0:1 -map 0:0 -c copy -y test12.nut<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>The resulting output file test12.nut will contain the first four streams from the input files in reverse order.</p></li><li><p>To force CBR video output:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i myfile.avi -b 4000k -minrate 4000k -maxrate 4000k -bufsize 1835k out.m2v<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li><li><p>The four options lmin, lmax, mblmin and mblmax use ’lambda’ units, but you may use the QP2LAMBDA constant to easily convert from ’q’ units:</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">ffmpeg -i src.ext -lmax 21*QP2LAMBDA dst.ext<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></li></ul><h2 id="7-See-Also"><a href="#7-See-Also" class="headerlink" title="7 See Also"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-See-Also">7 See Also</a></h2><p><a href="https://ffmpeg.org/ffmpeg-all.html">ffmpeg-all</a>, <a href="https://ffmpeg.org/ffplay.html">ffplay</a>, <a href="https://ffmpeg.org/ffprobe.html">ffprobe</a>, <a href="https://ffmpeg.org/ffmpeg-utils.html">ffmpeg-utils</a>, <a href="https://ffmpeg.org/ffmpeg-scaler.html">ffmpeg-scaler</a>, <a href="https://ffmpeg.org/ffmpeg-resampler.html">ffmpeg-resampler</a>, <a href="https://ffmpeg.org/ffmpeg-codecs.html">ffmpeg-codecs</a>, <a href="https://ffmpeg.org/ffmpeg-bitstream-filters.html">ffmpeg-bitstream-filters</a>, <a href="https://ffmpeg.org/ffmpeg-formats.html">ffmpeg-formats</a>, <a href="https://ffmpeg.org/ffmpeg-devices.html">ffmpeg-devices</a>, <a href="https://ffmpeg.org/ffmpeg-protocols.html">ffmpeg-protocols</a>, <a href="https://ffmpeg.org/ffmpeg-filters.html">ffmpeg-filters</a></p><h2 id="8-Authors"><a href="#8-Authors" class="headerlink" title="8 Authors"></a><a href="https://ffmpeg.org/ffmpeg.html#toc-Authors">8 Authors</a></h2><p>The FFmpeg developers.</p><p>For details about the authorship, see the Git history of the project (git://source.ffmpeg.org/ffmpeg), e.g. by typing the command <code>git log</code> in the FFmpeg source directory, or browsing the online repository at <a href="http://source.ffmpeg.org/">http://source.ffmpeg.org</a>.</p><p>Maintainers for the specific components are listed in the file MAINTAINERS in the source code tree.</p><p>This document was generated on <em>November 22, 2020</em> using <a href="http://www.gnu.org/software/texinfo/"><em>makeinfo</em></a>.</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>How To Ask Questions The Smart Way</title>
    <link href="/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/"/>
    <url>/%E6%8F%90%E9%97%AE%E7%9A%84%E6%99%BA%E6%85%A7/</url>
    
    <content type="html"><![CDATA[<p><strong>How To Ask Questions The Smart Way</strong></p><span id="more"></span><p><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/pulls"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square" alt="PRs Welcome"></a></p><p>Copyright © 2001,2006,2014 Eric S. Raymond, Rick Moen</p><p>本指南英文版版权为 Eric S. Raymond, Rick Moen 所有。</p><p>原文网址：<a href="http://www.catb.org/~esr/faqs/smart-questions.html">http://www.catb.org/~esr/faqs/smart-questions.html</a></p><p>Copyleft 2001 by D.H.Grand(nOBODY/Ginux), 2010 by Gasolin, 2015 by Ryan Wu</p><p>本中文指南是基于原文 3.10 版以及 2010 年由 <a href="https://github.com/gasolin">Gasolin</a> 所翻译版本的最新翻译；</p><p>Copy From <a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/edit/master/README-zh_CN.md。">https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/edit/master/README-zh_CN.md。</a></p><p>本文另有<a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/README.md">繁體中文版</a>。</p><h2 id="原文版本历史"><a href="#原文版本历史" class="headerlink" title="原文版本历史"></a><a href="https://github.com/ryanhanwu/How-To-Ask-Questions-The-Smart-Way/blob/master/history.md">原文版本历史</a></h2><h2 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h2><ul><li><a href="#声明">声明</a></li><li><a href="#简介">简介</a></li><li><a href="#在提问之前">在提问之前</a></li><li><a href="#当你提问时">当你提问时</a><ul><li><a href="#慎选提问的论坛">慎选提问的论坛</a></li><li><a href="#stack-overflow">Stack Overflow</a></li><li><a href="#网站和-irc-论坛">网站和 IRC 论坛</a></li><li><a href="#第二步使用项目邮件列表">第二步，使用项目邮件列表</a></li><li><a href="#使用有意义且描述明确的标题">使用有意义且描述明确的标题</a></li><li><a href="#使问题容易回复">使问题容易回复</a></li><li><a href="#用清晰、正确、精准且语法正确的语句">用清晰、正确、精准且语法正确的语句</a></li><li><a href="#使用易于读取且标准的文件格式发送问题">使用易于读取且标准的文件格式发送问题</a></li><li><a href="#精确地描述问题并言之有物">精确地描述问题并言之有物</a></li><li><a href="#话不在多而在精">话不在多而在精</a></li><li><a href="#别动辄声称找到-bug">别动辄声称找到 Bug</a></li><li><a href="#低声下气不能代替你的功课">低声下气不能代替你的功课</a></li><li><a href="#描述问题症状而非你的猜测">描述问题症状而非你的猜测</a></li><li><a href="#按发生时间先后列出问题症状">按发生时间先后列出问题症状</a></li><li><a href="#描述目标而不是过程">描述目标而不是过程</a></li><li><a href="#别要求使用私人电邮回复">别要求使用私人电邮回复</a></li><li><a href="#清楚明确的表达你的问题以及需求">清楚明确的表达你的问题以及需求</a></li><li><a href="#询问有关代码的问题时">询问有关代码的问题时</a></li><li><a href="#别把自己家庭作业的问题贴上来">别把自己家庭作业的问题贴上来</a></li><li><a href="#去掉无意义的提问句">去掉无意义的提问句</a></li><li><a href="#即使你很急也不要在标题写紧急">即使你很急也不要在标题写紧急</a></li><li><a href="#礼多人不怪而且有时还很有帮助">礼多人不怪，而且有时还很有帮助</a></li><li><a href="#问题解决后加个简短的补充说明">问题解决后，加个简短的补充说明</a></li></ul></li><li><a href="#如何解读答案">如何解读答案</a><ul><li><a href="#rtfm-和-stfw如何知道你已完全搞砸了">RTFM 和 STFW：如何知道你已完全搞砸了</a></li><li><a href="#如果还是搞不懂">如果还是搞不懂</a></li><li><a href="#处理无礼的回应">处理无礼的回应</a></li></ul></li><li><a href="#如何避免扮演失败者">如何避免扮演失败者</a></li><li><a href="#不该问的问题">不该问的问题</a></li><li><a href="#好问题与蠢问题">好问题与蠢问题</a></li><li><a href="#如果得不到回答">如果得不到回答</a></li><li><a href="#如何更好地回答问题">如何更好地回答问题</a></li><li><a href="#相关资源">相关资源</a></li><li><a href="#鸣谢">鸣谢</a></li></ul><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>许多项目在他们的使用协助/说明网页中链接了本指南，这么做很好，我们也鼓励大家都这么做。但如果你是负责管理这个项目网页的人，请在超链接附近的显著位置上注明：</p><p><strong>本指南不提供此项目的实际支持服务！</strong></p><p>我们已经深刻领教到少了上述声明所带来的痛苦。因为少了这点声明，我们不停地被一些白痴纠缠。这些白痴认为既然我们发布了这本指南，那么我们就有责任解决世上所有的技术问题。</p><p>如果你是因为需要某些协助而正在阅读这本指南，并且最后离开是因为发现从本指南作者们身上得不到直接的协助，那么你就是我们所说的那些白痴之一。别问我们问题，我们只会忽略你。我们在这本指南中是教你如何从那些真正懂得你所遇到软件或硬件问题的人取得协助，而 99% 的情况下那不会是我们。除非你确定本指南的作者之一刚好是你所遇到的问题领域的专家，否则请不要打扰我们，这样大家都会开心一点。</p><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>在<a href="http://www.catb.org/~esr/faqs/hacker-howto.html">黑客</a>的世界里，当你拋出一个技术问题时，最终是否能得到有用的回答，往往取决于你所提问和追问的方式。本指南将教你如何正确的提问以获得你满意的答案。</p><p>不只是黑客，现在开源（Open Source）软件已经相当盛行，你常常也可以由其他有经验的使用者身上得到好答案，这是件<strong>好事</strong>；使用者比起黑客来，往往对那些新手常遇到的问题更宽容一些。然而，将有经验的使用者视为黑客，并采用本指南所提的方法与他们沟通，同样也是能从他们身上得到满意回答的最有效方式。</p><p>首先你应该明白，黑客们喜爱有挑战性的问题，或者能激发他们思维的好问题。如果我们并非如此，那我们也不会成为你想询问的对象。如果你给了我们一个值得反复咀嚼玩味的好问题，我们自会对你感激不尽。好问题是激励，是厚礼。好问题可以提高我们的理解力，而且通常会暴露我们以前从没意识到或者思考过的问题。对黑客而言，”好问题！”是诚挚的大力称赞。</p><p>尽管如此，黑客们有着蔑视或傲慢面对简单问题的坏名声，这有时让我们看起来对新手、无知者似乎较有敌意，但其实不是那样的。</p><p>我们不讳言我们对那些不愿思考、或者在发问前不做他们该做的事的人的蔑视。那些人是时间杀手 —— 他们只想索取，从不付出，消耗我们可用在更有趣的问题或更值得回答的人身上的时间。我们称这样的人为 <code>失败者（撸瑟）</code> （由于历史原因，我们有时把它拼作 <code>lusers</code>）。</p><p>我们意识到许多人只是想使用我们写的软件，他们对学习技术细节没有兴趣。对大多数人而言，电脑只是种工具，是种达到目的的手段而已。他们有自己的生活并且有更要紧的事要做。我们了解这点，也从不指望每个人都对这些让我们着迷的技术问题感兴趣。尽管如此，我们回答问题的风格是指向那些真正对此有兴趣并愿意主动参与解决问题的人，这一点不会变，也不该变。如果连这都变了，我们就是在降低做自己最擅长的事情上的效率。</p><p>我们（在很大程度上）是自愿的，从繁忙的生活中抽出时间来解答疑惑，而且时常被提问淹没。所以我们无情的滤掉一些话题，特别是拋弃那些看起来像失败者的家伙，以便更高效的利用时间来回答<code>赢家（winner）</code>的问题。</p><p>如果你厌恶我们的态度，高高在上，或过于傲慢，不妨也设身处地想想。我们并没有要求你向我们屈服 —— 事实上，我们大多数人非常乐意与你平等地交流，只要你付出小小努力来满足基本要求，我们就会欢迎你加入我们的文化。但让我们帮助那些不愿意帮助自己的人是没有效率的。无知没有关系，但装白痴就是不行。</p><p>所以，你不必在技术上很在行才能吸引我们的注意，但你必须表现出能引导你变得在行的特质 —— 机敏、有想法、善于观察、乐于主动参与解决问题。如果你做不到这些使你与众不同的事情，我们建议你花点钱找家商业公司签个技术支持服务合同，而不是要求黑客个人无偿地帮助你。</p><p>如果你决定向我们求助，当然你也不希望被视为失败者，更不愿成为失败者中的一员。能立刻得到快速并有效答案的最好方法，就是像赢家那样提问 —— 聪明、自信、有解决问题的思路，只是偶尔在特定的问题上需要获得一点帮助。</p><p>（欢迎对本指南提出改进意见。你可以 email 你的建议至 <a href="esr@thyrsus.com">esr@thyrsus.com</a> 或 <a href="respond-auto@linuxmafia.com">respond-auto@linuxmafia.com</a>。然而请注意，本文并非<a href="http://www.ietf.org/rfc/rfc1855.txt">网络礼节</a>的通用指南，而我们通常会拒绝无助于在技术论坛得到有用答案的建议）。</p><h2 id="在提问之前"><a href="#在提问之前" class="headerlink" title="在提问之前"></a>在提问之前</h2><p>在你准备要通过电子邮件、新闻群组或者聊天室提出技术问题前，请先做到以下事情：</p><ol><li>尝试在你准备提问的论坛的旧文章中搜索答案。</li><li>尝试上网搜索以找到答案。</li><li>尝试阅读手册以找到答案。</li><li>尝试阅读常见问题文件（FAQ）以找到答案。</li><li>尝试自己检查或试验以找到答案。</li><li>向你身边的强者朋友打听以找到答案。</li><li>如果你是程序开发者，请尝试阅读源代码以找到答案。</li></ol><p>当你提出问题的时候，请先表明你已经做了上述的努力；这将有助于树立你并不是一个不劳而获且浪费别人的时间的提问者。如果你能一并表达在做了上述努力的过程中所<strong>学到</strong>的东西会更好，因为我们更乐于回答那些表现出能从答案中学习的人的问题。</p><p>运用某些策略，比如先用 Google 搜索你所遇到的各种错误信息（搜索 <a href="http://groups.google.com/">Google 论坛</a>和网页），这样很可能直接就找到了能解决问题的文件或邮件列表线索。即使没有结果，在邮件列表或新闻组寻求帮助时加上一句 <code>我在 Google 中搜过下列句子但没有找到什么有用的东西</code> 也是件好事，即使它只是表明了搜索引擎不能提供哪些帮助。这么做（加上搜索过的字串）也让遇到相似问题的其他人能被搜索引擎引导到你的提问来。</p><p>别着急，不要指望几秒钟的 Google 搜索就能解决一个复杂的问题。在向专家求助之前，再阅读一下常见问题文件（FAQ）、放轻松、坐舒服一些，再花点时间思考一下这个问题。相信我们，他们能从你的提问看出你做了多少阅读与思考，如果你是有备而来，将更有可能得到解答。不要将所有问题一股脑拋出，只因你的第一次搜索没有找到答案（或者找到太多答案）。</p><p>准备好你的问题，再将问题仔细的思考过一遍，因为草率的发问只能得到草率的回答，或者根本得不到任何答案。越是能表现出在寻求帮助前你为解决问题所付出的努力，你越有可能得到实质性的帮助。</p><p>小心别问错了问题。如果你的问题基于错误的假设，某个普通黑客（J. Random Hacker）多半会一边在心里想着<code>蠢问题…</code>， 一边用无意义的字面解释来答复你，希望着你会从问题的回答（而非你想得到的答案）中汲取教训。</p><p>绝不要自以为<strong>够格</strong>得到答案，你没有；你并没有。毕竟你没有为这种服务支付任何报酬。你将会是自己去<strong>挣到</strong>一个答案，靠提出有内涵的、有趣的、有思维激励作用的问题 —— 一个有潜力能贡献社区经验的问题，而不仅仅是被动的从他人处索取知识。</p><p>另一方面，表明你愿意在找答案的过程中做点什么是一个非常好的开端。<code>谁能给点提示？</code>、<code>我的这个例子里缺了什么？</code>以及<code>我应该检查什么地方</code>比<code>请把我需要的确切的过程贴出来</code>更容易得到答复。因为你表现出只要有人能指个正确方向，你就有完成它的能力和决心。</p><h2 id="当你提问时"><a href="#当你提问时" class="headerlink" title="当你提问时"></a>当你提问时</h2><h3 id="慎选提问的论坛"><a href="#慎选提问的论坛" class="headerlink" title="慎选提问的论坛"></a>慎选提问的论坛</h3><p>小心选择你要提问的场合。如果你做了下述的事情，你很可能被忽略掉或者被看作失败者：</p><ul><li>在与主题不合的论坛上贴出你的问题。</li><li>在探讨进阶技术问题的论坛张贴非常初级的问题；反之亦然。</li><li>在太多的不同新闻群组上重复转贴同样的问题（cross-post）。</li><li>向既非熟人也没有义务解决你问题的人发送私人电邮。</li></ul><p>黑客会剔除掉那些搞错场合的问题，以保护他们沟通的渠道不被无关的东西淹没。你不会想让这种事发生在自己身上的。</p><p>因此，第一步是找到对的论坛。再说一次，Google 和其它搜索引擎还是你的朋友，用它们来找到与你遭遇到困难的软硬件问题最相关的网站。通常那儿都有常见问题（FAQ）、邮件列表及相关说明文件的链接。如果你的努力（包括<strong>阅读</strong> FAQ）都没有结果，网站上也许还有报告 Bug（Bug-reporting）的流程或链接，如果是这样，链过去看看。</p><p>向陌生的人或论坛发送邮件最可能是风险最大的事情。举例来说，别假设一个提供丰富内容的网页的作者会想充当你的免费顾问。不要对你的问题是否会受到欢迎做太乐观的估计 —— 如果你不确定，那就向别处发送，或者压根别发。</p><p>在选择论坛、新闻群组或邮件列表时，别太相信名字，先看看 FAQ 或者许可书以弄清楚你的问题是否切题。发文前先翻翻已有的话题，这样可以让你感受一下那里的文化。事实上，事先在新闻组或邮件列表的历史记录中搜索与你问题相关的关键词是个极好的主意，也许这样就找到答案了。即使没有，也能帮助你归纳出更好的问题。</p><p>别像机关枪似的一次”扫射”所有的帮助渠道，这就像大喊大叫一样会使人不快。要一个一个地来。</p><p>搞清楚你的主题！最典型的错误之一是在某种致力于跨平台可移植的语言、套件或工具的论坛中提关于 Unix 或 Windows 操作系统程序界面的问题。如果你不明白为什么这是大错，最好在搞清楚这之间差异之前什么也别问。</p><p>一般来说，在仔细挑选的公共论坛中提问，会比在私有论坛中提同样的问题更容易得到有用的回答。有几个理由可以支持这点，一是看潜在的回复者有多少，二是看观众有多少。黑客较愿意回答那些能帮助到许多人的问题。</p><p>可以理解的是，老练的黑客和一些热门软件的作者正在接受过多的错发信息。就像那根最后压垮骆驼背的稻草一样，你的加入也有可能使情况走向极端 —— 已经好几次了，一些热门软件的作者从自己软件的支持中抽身出来，因为伴随而来涌入其私人邮箱的无用邮件变得无法忍受。</p><h3 id="Stack-Overflow"><a href="#Stack-Overflow" class="headerlink" title="Stack Overflow"></a>Stack Overflow</h3><p>搜索，<strong>然后</strong> 在 Stack Exchange 问。</p><p>近年来，Stack Exchange community 社区已经成为回答技术及其他问题的主要渠道，尤其是那些开放源码的项目。</p><p>因为 Google 索引是即时的，在看 Stack Exchange 之前先在 Google 搜索。有很高的机率某人已经问了一个类似的问题，而且 Stack Exchange 网站们往往会是搜索结果中最前面几个。如果你在 Google 上没有找到任何答案，你再到特定相关主题的网站去找。用标签（Tag）搜索能让你更缩小你的搜索结果。</p><p>Stack Exchange 已经成长到<a href="http://stackexchange.com/sites">超过一百个网站</a>，以下是最常用的几个站：</p><ul><li>Super User 是问一些通用的电脑问题，如果你的问题跟代码或是写程序无关，只是一些网络连线之类的，请到这里。</li><li>Stack Overflow 是问写程序有关的问题。</li><li>Server Fault 是问服务器和网管相关的问题。</li></ul><h3 id="网站和-IRC-论坛"><a href="#网站和-IRC-论坛" class="headerlink" title="网站和 IRC 论坛"></a>网站和 IRC 论坛</h3><p>本地的使用者群组（user group），或者你所用的 Linux 发行版本也许正在宣传他们的网页论坛或 IRC 频道，并提供新手帮助（在一些非英语国家，新手论坛很可能还是邮件列表）， 这些地方是开始提问的好首选，特别是当你觉得遇到的也许只是相对简单或者很普通的问题时。有广告赞助的 IRC 频道是公开欢迎提问的地方，通常可以即时得到回应。</p><p>事实上，如果程序出的问题只发生在特定 Linux 发行版提供的版本（这很常见），最好先去该发行版的论坛或邮件列表中提问，再到程序本身的论坛或邮件列表提问。（否则）该项目的黑客可能仅仅回复 “用<strong>我们的</strong>版本”。</p><p>在任何论坛发文以前，先确认一下有没有搜索功能。如果有，就试着搜索一下问题的几个关键词，也许这会有帮助。如果在此之前你已做过通用的网页搜索（你也该这样做），还是再搜索一下论坛，搜索引擎有可能没来得及索引此论坛的全部内容。</p><p>通过论坛或 IRC 频道来提供使用者支持服务有增长的趋势，电子邮件则大多为项目开发者间的交流而保留。所以最好先在论坛或 IRC 中寻求与该项目相关的协助。</p><p>在使用 IRC 的时候，首先最好不要发布很长的问题描述，有些人称之为频道洪水。最好通过一句话的问题描述来开始聊天。</p><h3 id="第二步，使用项目邮件列表"><a href="#第二步，使用项目邮件列表" class="headerlink" title="第二步，使用项目邮件列表"></a>第二步，使用项目邮件列表</h3><p>当某个项目提供开发者邮件列表时，要向列表而不是其中的个别成员提问，即使你确信他能最好地回答你的问题。查一查项目的文件和首页，找到项目的邮件列表并使用它。有几个很好的理由支持我们采用这种办法：</p><ul><li>任何好到需要向个别开发者提出的问题，也将对整个项目群组有益。反之，如果你认为自己的问题对整个项目群组来说太愚蠢，也不能成为骚扰个别开发者的理由。</li><li>向列表提问可以分散开发者的负担，个别开发者（尤其是项目领导人）也许太忙以至于没法回答你的问题。</li><li>大多数邮件列表都会被存档，那些被存档的内容将被搜索引擎索引。如果你向列表提问并得到解答，将来其它人可以通过网页搜索找到你的问题和答案，也就不用再次发问了。</li><li>如果某些问题经常被问到，开发者可以利用此信息来改进说明文件或软件本身，以使其更清楚。如果只是私下提问，就没有人能看到最常见问题的完整场景。</li></ul><p>如果一个项目既有”使用者” 也有”开发者”（或”黑客”）邮件列表或论坛，而你又不会动到那些源代码，那么就向”使用者”列表或论坛提问。不要假设自己会在开发者列表中受到欢迎，那些人多半会将你的提问视为干扰他们开发的噪音。</p><p>然而，如果你<strong>确信</strong>你的问题很特别，而且在”使用者” 列表或论坛中几天都没有回复，可以试试前往”开发者”列表或论坛发问。建议你在张贴前最好先暗地里观察几天以了解那里的行事方式（事实上这是参与任何私有或半私有列表的好主意）</p><p>如果你找不到一个项目的邮件列表，而只能查到项目维护者的电子邮件地址，尽管向他发信。即使是在这种情况下，也别假设（项目）邮件列表不存在。在你的电子邮件中，请陈述你已经试过但没有找到合适的邮件列表，也提及你不反对将自己的邮件转发给他人（许多人认为，即使没什么秘密，私人电子邮件也不应该被公开。通过允许将你的电子邮件转发他人，你给了相应人员处置你邮件的选择）。</p><h3 id="使用有意义且描述明确的标题"><a href="#使用有意义且描述明确的标题" class="headerlink" title="使用有意义且描述明确的标题"></a>使用有意义且描述明确的标题</h3><p>在邮件列表、新闻群组或论坛中，大约 50 字以内的标题是抓住资深专家注意力的好机会。别用喋喋不休的<code>帮帮忙</code>、<code>跪求</code>、<code>急</code>（更别说<code>救命啊！！！！</code>这样让人反感的话，用这种标题会被条件反射式地忽略）来浪费这个机会。不要妄想用你的痛苦程度来打动我们，而应该是在这点空间中使用极简单扼要的描述方式来提出问题。</p><p>一个好标题范例是<code>目标 —— 差异</code>式的描述，许多技术支持组织就是这样做的。在<code>目标</code>部分指出是哪一个或哪一组东西有问题，在<code>差异</code>部分则描述与期望的行为不一致的地方。</p><blockquote><p>蠢问题：救命啊！我的笔记本电脑不能正常显示了！</p><p>聪明问题：X.org 6.8.1 的鼠标光标会变形，某牌显卡 MV1005 芯片组。</p><p>更聪明问题：X.org 6.8.1 的鼠标光标，在某牌显卡 MV1005 芯片组环境下 - 会变形。</p></blockquote><p>编写<code>目标 —— 差异</code> 式描述的过程有助于你组织对问题的细致思考。是什么被影响了？ 仅仅是鼠标光标或者还有其它图形？只在 X.org 的 X 版中出现？或只是出现在 6.8.1 版中？ 是针对某牌显卡芯片组？或者只是其中的 MV1005 型号？ 一个黑客只需瞄一眼就能够立即明白你的环境<strong>和</strong>你遇到的问题。</p><p>总而言之，请想像一下你正在一个只显示标题的存档讨论串（Thread）索引中查寻。让你的标题更好地反映问题，可使下一个搜索类似问题的人能够关注这个讨论串，而不用再次提问相同的问题。</p><p>如果你想在回复中提出问题，记得要修改内容标题，以表明你是在问一个问题， 一个看起来像 <code>Re: 测试</code> 或者 <code>Re: 新 bug</code> 的标题很难引起足够重视。另外，在不影响连贯性之下，适当引用并删减前文的内容，能给新来的读者留下线索。</p><p>对于讨论串，不要直接点击回复来开始一个全新的讨论串，这将限制你的观众。因为有些邮件阅读程序，比如 mutt ，允许使用者按讨论串排序并通过折叠讨论串来隐藏消息，这样做的人永远看不到你发的消息。</p><p>仅仅改变标题还不够。mutt 和其它一些邮件阅读程序还会检查邮件标题以外的其它信息，以便为其指定讨论串。所以宁可发一个全新的邮件。</p><p>在网页论坛上，好的提问方式稍有不同，因为讨论串与特定的信息紧密结合，并且通常在讨论串外就看不到里面的内容，故通过回复提问，而非改变标题是可接受的。不是所有论坛都允许在回复中出现分离的标题，而且这样做了基本上没有人会去看。不过，通过回复提问，这本身就是暧昧的做法，因为它们只会被正在查看该标题的人读到。所以，除非你<strong>只想</strong>在该讨论串当前活跃的人群中提问，不然还是另起炉灶比较好。</p><h3 id="使问题容易回复"><a href="#使问题容易回复" class="headerlink" title="使问题容易回复"></a>使问题容易回复</h3><p>以<code>请将你的回复发送到……</code>来结束你的问题多半会使你得不到回答。如果你觉得花几秒钟在邮件客户端设置一下回复地址都麻烦，我们也觉得花几秒钟思考你的问题更麻烦。如果你的邮件程序不支持这样做，<a href="http://linuxmafia.com/faq/Mail/muas.html">换个好点的</a>；如果是操作系统不支持这种邮件程序，也换个好点的。</p><p>在论坛，要求通过电子邮件回复是非常无礼的，除非你认为回复的信息可能比较敏感（有人会为了某些未知的原因，只让你而不是整个论坛知道答案）。如果你只是想在有人回复讨论串时得到电子邮件提醒，可以要求网页论坛发送给你。几乎所有论坛都支持诸如<code>追踪此讨论串</code>、<code>有回复时发送邮件提醒</code>等功能。</p><h3 id="用清晰、正确、精准且语法正确的语句"><a href="#用清晰、正确、精准且语法正确的语句" class="headerlink" title="用清晰、正确、精准且语法正确的语句"></a>用清晰、正确、精准且语法正确的语句</h3><p>我们从经验中发现，粗心的提问者通常也会粗心的写程序与思考（我敢打包票）。回答粗心大意者的问题很不值得，我们宁愿把时间耗在别处。</p><p>正确的拼写、标点符号和大小写是很重要的。一般来说，如果你觉得这样做很麻烦，不想在乎这些，那我们也觉得麻烦，不想在乎你的提问。花点额外的精力斟酌一下字句，用不着太僵硬与正式 —— 事实上，黑客文化很看重能准确地使用非正式、俚语和幽默的语句。但它<strong>必须很</strong>准确，而且有迹象表明你是在思考和关注问题。</p><p>正确地拼写、使用标点和大小写，不要将<code>its</code>混淆为<code>it&#39;s</code>，<code>loose</code>搞成<code>lose</code>或者将<code>discrete</code>弄成<code>discreet</code>。不要<strong>全部用大写</strong>，这会被视为无礼的大声嚷嚷（全部小写也好不到哪去，因为不易阅读。<a href="http://en.wikipedia.org/wiki/Alan_Cox">Alan Cox</a> 也许可以这样做，但你不行）。</p><p>更白话的说，如果你写得像是个半文盲[译注：<a href="http://zh.wikipedia.org/wiki/小白">小白</a>]，那多半得不到理睬。也不要使用即时通信中的简写或<a href="http://zh.wikipedia.org/wiki/火星文">火星文</a>，如将<code>的</code>简化为<code>d</code>会使你看起来像一个为了少打几个键而省字的小白。更糟的是，如果像个小孩似地鬼画符那绝对是在找死，可以肯定没人会理你（或者最多是给你一大堆指责与挖苦）。</p><p>如果在使用非母语的论坛提问，你可以犯点拼写和语法上的小错，但决不能在思考上马虎（没错，我们通常能弄清两者的分别）。同时，除非你知道回复者使用的语言，否则请使用英语书写。繁忙的黑客一般会直接删除用他们看不懂语言写的消息。在网络上英语是通用语言，用英语书写可以将你的问题在尚未被阅读就被直接删除的可能性降到最低。</p><p>如果英文是你的外语（Second language），提示潜在回复者你有潜在的语言困难是很好的：<br>[译注：以下附上原文以供使用]</p><blockquote><p>English is not my native language; please excuse typing errors.</p></blockquote><ul><li>英文不是我的母语，请原谅我的错字或语法。</li></ul><blockquote><p>If you speak $LANGUAGE, please email/PM me;<br>I may need assistance translating my question.</p></blockquote><ul><li>如果你说<strong>某语言</strong>，请寄信/私讯给我；我需要有人协助我翻译我的问题。</li></ul><blockquote><p>I am familiar with the technical terms,<br>but some slang expressions and idioms are difficult for me.</p></blockquote><ul><li>我对技术名词很熟悉，但对于俗语或是特别用法比较不甚了解。</li></ul><blockquote><p>I’ve posted my question in $LANGUAGE and English.<br>I’ll be glad to translate responses, if you only use one or the other.</p></blockquote><ul><li>我把我的问题用<strong>某语言</strong>和英文写出来，如果你只用一种语言回答，我会乐意将其翻译成另一种。</li></ul><h3 id="使用易于读取且标准的文件格式发送问题"><a href="#使用易于读取且标准的文件格式发送问题" class="headerlink" title="使用易于读取且标准的文件格式发送问题"></a>使用易于读取且标准的文件格式发送问题</h3><p>如果你人为地将问题搞得难以阅读，它多半会被忽略，人们更愿读易懂的问题，所以：</p><ul><li>使用纯文字而不是 HTML (<a href="http://archive.birdhouse.org/etc/evilmail.html">关闭 HTML</a> 并不难）。</li><li>使用 MIME 附件通常是可以的，前提是真正有内容（譬如附带的源代码或 patch），而不仅仅是邮件程序生成的模板（譬如只是信件内容的拷贝）。</li><li>不要发送一段文字只是一行句子但自动换行后会变成多行的邮件（这使得回复部分内容非常困难）。设想你的读者是在 80 个字符宽的终端机上阅读邮件，最好设置你的换行分割点小于 80 字。</li><li>但是，对一些特殊的文件<strong>不要</strong>设置固定宽度（譬如日志档案拷贝或会话记录）。数据应该原样包含，让回复者有信心他们看到的是和你看到的一样的东西。</li><li>在英语论坛中，不要使用<code>Quoted-Printable</code> MIME 编码发送消息。这种编码对于张贴非 ASCII 语言可能是必须的，但很多邮件程序并不支持这种编码。当它们处理换行时，那些文本中四处散布的<code>=20</code>符号既难看也分散注意力，甚至有可能破坏内容的语意。</li><li>绝对，<strong>永远</strong>不要指望黑客们阅读使用封闭格式编写的文档，像微软公司的 Word 或 Excel 文件等。大多数黑客对此的反应就像有人将还在冒热气的猪粪倒在你家门口时你的反应一样。即便他们能够处理，他们也很厌恶这么做。</li><li>如果你从使用 Windows 的电脑发送电子邮件，关闭微软愚蠢的<code>智能引号</code>功能 （从[选项] &gt; [校订] &gt; [自动校正选项]，勾选掉<code>智能引号</code>单选框），以免在你的邮件中到处散布垃圾字符。</li><li>在论坛，勿滥用<code>表情符号</code>和<code>HTML</code>功能（当它们提供时）。一两个表情符号通常没有问题，但花哨的彩色文本倾向于使人认为你是个无能之辈。过滥地使用表情符号、色彩和字体会使你看来像个傻笑的小姑娘。这通常不是个好主意，除非你只是对性而不是对答案感兴趣。</li></ul><p>如果你使用图形用户界面的邮件程序（如微软公司的 Outlook 或者其它类似的），注意它们的默认设置不一定满足这些要求。大多数这类程序有基于选单的<code>查看源代码</code>命令，用它来检查发送文件夹中的邮件，以确保发送的是纯文本文件同时没有一些奇怪的字符。</p><h3 id="精确地描述问题并言之有物"><a href="#精确地描述问题并言之有物" class="headerlink" title="精确地描述问题并言之有物"></a>精确地描述问题并言之有物</h3><ul><li>仔细、清楚地描述你的问题或 Bug 的症状。</li><li>描述问题发生的环境（机器配置、操作系统、应用程序、以及相关的信息），提供经销商的发行版和版本号（如：<code>Fedora Core 4</code>、<code>Slackware 9.1</code>等）。</li><li>描述在提问前你是怎样去研究和理解这个问题的。</li><li>描述在提问前为确定问题而采取的诊断步骤。</li><li>描述最近做过什么可能相关的硬件或软件变更。</li><li>尽可能的提供一个可以<code>重现这个问题的可控环境</code>的方法。</li></ul><p>尽量去揣测一个黑客会怎样反问你，在你提问之前预先将黑客们可能遇到的问题回答一遍。</p><p>以上几点中，当你报告的是你认为可能在代码中的问题时，给黑客一个可以重现你的问题的环境尤其重要。当你这么做时，你得到有效的回答的机会和速度都会大大的提升。</p><p><a href="http://www.chiark.greenend.org.uk/~sgtatham/">Simon Tatham</a> 写过一篇名为《<a href="http://www.chiark.greenend.org.uk/~sgtatham/bugs-cn.html">如何有效的报告 Bug</a>》的出色文章。强力推荐你也读一读。</p><h3 id="话不在多而在精"><a href="#话不在多而在精" class="headerlink" title="话不在多而在精"></a>话不在多而在精</h3><p>你需要提供精确有内容的信息。这并不是要求你简单的把成堆的出错代码或者资料完全转录到你的提问中。如果你有庞大而复杂的测试样例能重现程序挂掉的情境，尽量将它剪裁得越小越好。</p><p>这样做的用处至少有三点。<br>第一，表现出你为简化问题付出了努力，这可以使你得到回答的机会增加；<br>第二，简化问题使你更有可能得到<strong>有用</strong>的答案；<br>第三，在精炼你的 bug 报告的过程中，你很可能就自己找到了解决方法或权宜之计。</p><h3 id="别动辄声称找到-Bug"><a href="#别动辄声称找到-Bug" class="headerlink" title="别动辄声称找到 Bug"></a>别动辄声称找到 Bug</h3><p>当你在使用软件中遇到问题，除非你非常、<strong>非常</strong>的有根据，不要动辄声称找到了 Bug。提示：除非你能提供解决问题的源代码补丁，或者提供回归测试来表明前一版本中行为不正确，否则你都多半不够完全确信。这同样适用在网页和文件，如果你（声称）发现了文件的<code>Bug</code>，你应该能提供相应位置的修正或替代文件。</p><p>请记得，还有许多其它使用者没遇到你发现的问题，否则你在阅读文件或搜索网页时就应该发现了（你在抱怨前<a href="#在提问之前">已经做了这些，是吧</a>？）。这也意味着很有可能是你弄错了而不是软件本身有问题。</p><p>编写软件的人总是非常辛苦地使它尽可能完美。如果你声称找到了 Bug，也就是在质疑他们的能力，即使你是对的，也有可能会冒犯到其中某部分人。当你在标题中嚷嚷着有<code>Bug</code>时，这尤其严重。</p><p>提问时，即使你私下非常确信已经发现一个真正的 Bug，最好写得像是<strong>你</strong>做错了什么。如果真的有 Bug，你会在回复中看到这点。这样做的话，如果真有 Bug，维护者就会向你道歉，这总比你惹恼别人然后欠别人一个道歉要好一点。</p><h3 id="低声下气不能代替你的功课"><a href="#低声下气不能代替你的功课" class="headerlink" title="低声下气不能代替你的功课"></a>低声下气不能代替你的功课</h3><p>有些人明白他们不该粗鲁或傲慢的提问并要求得到答复，但他们选择另一个极端 —— 低声下气：<code>我知道我只是个可悲的新手，一个撸瑟，但...</code>。这既使人困扰，也没有用，尤其是伴随着与实际问题含糊不清的描述时更令人反感。</p><p>别用原始灵长类动物的把戏来浪费你我的时间。取而代之的是，尽可能清楚地描述背景条件和你的问题情况。这比低声下气更好地定位了你的位置。</p><p>有时网页论坛会设有专为新手提问的版面，如果你真的认为遇到了初学者的问题，到那去就是了，但一样别那么低声下气。</p><h3 id="描述问题症状而非你的猜测"><a href="#描述问题症状而非你的猜测" class="headerlink" title="描述问题症状而非你的猜测"></a>描述问题症状而非你的猜测</h3><p>告诉黑客们你认为问题是怎样造成的并没什么帮助。（如果你的推断如此有效，还用向别人求助吗？），因此要确信你原原本本告诉了他们问题的症状，而不是你的解释和理论；让黑客们来推测和诊断。如果你认为陈述自己的猜测很重要，清楚地说明这只是你的猜测，并描述为什么它们不起作用。</p><p><strong>蠢问题</strong></p><blockquote><p>我在编译内核时接连遇到 SIG11 错误，<br>我怀疑某条飞线搭在主板的走线上了，这种情况应该怎样检查最好？</p></blockquote><p><strong>聪明问题</strong></p><blockquote><p>我的组装电脑是 FIC-PA2007 主机板搭载 AMD K6/233 CPU（威盛 Apollo VP2 芯片组），<br>256MB Corsair PC133 SDRAM 内存，在编译内核时，从开机 20 分钟以后就频频产生 SIG11 错误，<br>但是在头 20 分钟内从没发生过相同的问题。重新启动也没有用，但是关机一晚上就又能工作 20 分钟。<br>所有内存都换过了，没有效果。相关部分的标准编译记录如下…。</p></blockquote><p>由于以上这点似乎让许多人觉得难以配合，这里有句话可以提醒你：<code>所有的诊断专家都来自密苏里州。</code> 美国国务院的官方座右铭则是：<code>让我看看</code>（出自国会议员 Willard D. Vandiver 在 1899 年时的讲话：<code>我来自一个出产玉米，棉花，牛蒡和民主党人的国家，滔滔雄辩既不能说服我，也不会让我满意。我来自密苏里州，你必须让我看看。</code>） 针对诊断者而言，这并不是一种怀疑，而只是一种真实而有用的需求，以便让他们看到的是与你看到的原始证据尽可能一致的东西，而不是你的猜测与归纳的结论。所以，大方的展示给我们看吧！</p><h3 id="按发生时间先后列出问题症状"><a href="#按发生时间先后列出问题症状" class="headerlink" title="按发生时间先后列出问题症状"></a>按发生时间先后列出问题症状</h3><p>问题发生前的一系列操作，往往就是对找出问题最有帮助的线索。因此，你的说明里应该包含你的操作步骤，以及机器和软件的反应，直到问题发生。在命令行处理的情况下，提供一段操作记录（例如运行脚本工具所生成的），并引用相关的若干行（如 20 行）记录会非常有帮助。</p><p>如果挂掉的程序有诊断选项（如 -v 的详述开关），试着选择这些能在记录中增加调试信息的选项。记住，<code>多</code>不等于<code>好</code>。试着选取适当的调试级别以便提供有用的信息而不是让读者淹没在垃圾中。</p><p>如果你的说明很长（如超过四个段落），在开头简述问题，接下来再按时间顺序详述会有所帮助。这样黑客们在读你的记录时就知道该注意哪些内容了。</p><h3 id="描述目标而不是过程"><a href="#描述目标而不是过程" class="headerlink" title="描述目标而不是过程"></a>描述目标而不是过程</h3><p>如果你想弄清楚如何做某事（而不是报告一个 Bug），在开头就描述你的目标，然后才陈述重现你所卡住的特定步骤。</p><p>经常寻求技术帮助的人在心中有个更高层次的目标，而他们在自以为能达到目标的特定道路上被卡住了，然后跑来问该怎么走，但没有意识到这条路本身就有问题。结果要费很大的劲才能搞定。</p><p><strong>蠢问题</strong></p><blockquote><p>我怎样才能从某绘图程序的颜色选择器中取得十六进制的的 RGB 值？</p></blockquote><p><strong>聪明问题</strong></p><blockquote><p>我正试着用替换一幅图片的色码（color table）成自己选定的色码，我现在知道的唯一方法是编辑每个色码区块（table slot），<br>但却无法从某绘图程序的颜色选择器取得十六进制的的 RGB 值。</p></blockquote><p>第二种提问法比较聪明，你可能得到像是<code>建议采用另一个更合适的工具</code>的回复。</p><h3 id="别要求使用私人电邮回复"><a href="#别要求使用私人电邮回复" class="headerlink" title="别要求使用私人电邮回复"></a>别要求使用私人电邮回复</h3><p>黑客们认为问题的解决过程应该公开、透明，此过程中如果更有经验的人注意到不完整或者不当之处，最初的回复才能够、也应该被纠正。同时，作为提供帮助者可以得到一些奖励，奖励就是他的能力和学识被其他同行看到。</p><p>当你要求私下回复时，这个过程和奖励都被中止。别这样做，让<strong>回复者</strong>来决定是否私下回答 —— 如果他真这么做了，通常是因为他认为问题编写太差或者太肤浅，以至于对其它人没有兴趣。</p><p>这条规则存在一条有限的例外，如果你确信提问可能会引来大量雷同的回复时，那么这个神奇的提问句会是<code>向我发电邮，我将为论坛归纳这些回复</code>。试着将邮件列表或新闻群组从洪水般的雷同回复中解救出来是非常有礼貌的 —— 但你必须信守诺言。</p><h3 id="清楚明确的表达你的问题以及需求"><a href="#清楚明确的表达你的问题以及需求" class="headerlink" title="清楚明确的表达你的问题以及需求"></a>清楚明确的表达你的问题以及需求</h3><p>漫无边际的提问是近乎无休无止的时间黑洞。最有可能给你有用答案的人通常也正是最忙的人（他们忙是因为要亲自完成大部分工作）。这样的人对无节制的时间黑洞相当厌恶，所以他们也倾向于厌恶那些漫无边际的提问。</p><p>如果你明确表述需要回答者做什么（如提供指点、发送一段代码、检查你的补丁、或是其他等等），就最有可能得到有用的答案。因为这会定出一个时间和精力的上限，便于回答者能集中精力来帮你。这么做很棒。</p><p>要理解专家们所处的世界，请把专业技能想像为充裕的资源，而回复的时间则是稀缺的资源。你要求他们奉献的时间越少，你越有可能从真正专业而且很忙的专家那里得到解答。</p><p>所以，界定一下你的问题，使专家花在辨识你的问题和回答所需要付出的时间减到最少，这技巧对你有用答案相当有帮助 —— 但这技巧通常和简化问题有所区别。因此，问<code>我想更好的理解 X，可否指点一下哪有好一点说明？</code>通常比问<code>你能解释一下 X 吗？</code>更好。如果你的代码不能运作，通常请别人看看哪里有问题，比要求别人替你改正要明智得多。</p><h3 id="询问有关代码的问题时"><a href="#询问有关代码的问题时" class="headerlink" title="询问有关代码的问题时"></a>询问有关代码的问题时</h3><p>别要求他人帮你调试有问题的代码，不提示一下应该从何入手。张贴几百行的代码，然后说一声：<code>它不能工作</code>会让你完全被忽略。只贴几十行代码，然后说一句：<code>在第七行以后，我期待它显示 &lt;x&gt;，但实际出现的是 &lt;y&gt;</code>比较有可能让你得到回应。</p><p>最有效描述程序问题的方法是提供最精简的 Bug 展示测试用例（bug-demonstrating test case）。什么是最精简的测试用例？那是问题的缩影；一小个程序片段能<strong>刚好</strong>展示出程序的异常行为，而不包含其他令人分散注意力的内容。怎么制作最精简的测试用例？如果你知道哪一行或哪一段代码会造成异常的行为，复制下来并加入足够重现这个状况的代码（例如，足以让这段代码能被编译/直译/被应用程序处理）。如果你无法将问题缩减到一个特定区块，就复制一份代码并移除不影响产生问题行为的部分。总之，测试用例越小越好（查看<a href="#话不在多而在精">话不在多而在精</a>一节）。</p><p>一般而言，要得到一段相当精简的测试用例并不太容易，但永远先尝试这样做的是种好习惯。这种方式可以帮助你了解如何自行解决这个问题 —— 而且即使你的尝试不成功，黑客们也会看到你在尝试取得答案的过程中付出了努力，这可以让他们更愿意与你合作。</p><p>如果你只是想让别人帮忙审查（Review）一下代码，在信的开头就要说出来，并且一定要提到你认为哪一部分特别需要关注以及为什么。</p><h3 id="别把自己家庭作业的问题贴上来"><a href="#别把自己家庭作业的问题贴上来" class="headerlink" title="别把自己家庭作业的问题贴上来"></a>别把自己家庭作业的问题贴上来</h3><p>黑客们很擅长分辨哪些问题是家庭作业式的问题；因为我们中的大多数都曾自己解决这类问题。同样，这些问题得由<strong>你</strong>来搞定，你会从中学到东西。你可以要求给点提示，但别要求得到完整的解决方案。</p><p>如果你怀疑自己碰到了一个家庭作业式的问题，但仍然无法解决，试试在使用者群组，论坛或（最后一招）在项目的<strong>使用者</strong>邮件列表或论坛中提问。尽管黑客们<strong>会</strong>看出来，但一些有经验的使用者也许仍会给你一些提示。</p><h3 id="去掉无意义的提问句"><a href="#去掉无意义的提问句" class="headerlink" title="去掉无意义的提问句"></a>去掉无意义的提问句</h3><p>避免用无意义的话结束提问，例如<code>有人能帮我吗？</code>或者<code>这有答案吗？</code>。</p><p>首先：如果你对问题的描述不是很好，这样问更是画蛇添足。</p><p>其次：由于这样问是画蛇添足，黑客们会很厌烦你 —— 而且通常会用逻辑上正确，但毫无意义的回答来表示他们的蔑视， 例如：<code>没错，有人能帮你</code>或者<code>不，没答案</code>。</p><p>一般来说，避免用 <code>是或否</code>、<code>对或错</code>、<code>有或没有</code>类型的问句，除非你想得到<a href="http://homepage.ntlworld.com./jonathan.deboynepollard/FGA/questions-with-yes-or-no-answers.html">是或否类型的回答</a>。</p><h3 id="即使你很急也不要在标题写紧急"><a href="#即使你很急也不要在标题写紧急" class="headerlink" title="即使你很急也不要在标题写紧急"></a>即使你很急也不要在标题写<code>紧急</code></h3><p>这是你的问题，不是我们的。宣称<code>紧急</code>极有可能事与愿违：大多数黑客会直接删除无礼和自私地企图即时引起关注的问题。更严重的是，<code>紧急</code>这个字（或是其他企图引起关注的标题）通常会被垃圾信过滤器过滤掉 —— 你希望能看到你问题的人可能永远也看不到。</p><p>有半个例外的情况是，如果你是在一些很高调，会使黑客们兴奋的地方，也许值得这样去做。在这种情况下，如果你有时间压力，也很有礼貌地提到这点，人们也许会有兴趣回答快一点。</p><p>当然，这风险很大，因为黑客们兴奋的点多半与你的不同。譬如从 NASA 国际空间站（International Space Station）发这样的标题没有问题，但用自我感觉良好的慈善行为或政治原因发肯定不行。事实上，张贴诸如<code>紧急：帮我救救这个毛绒绒的小海豹！</code>肯定让你被黑客忽略或惹恼他们，即使他们认为毛绒绒的小海豹很重要。</p><p>如果你觉得这点很不可思议，最好再把这份指南剩下的内容多读几遍，直到你弄懂了再发文。</p><h3 id="礼多人不怪，而且有时还很有帮助"><a href="#礼多人不怪，而且有时还很有帮助" class="headerlink" title="礼多人不怪，而且有时还很有帮助"></a>礼多人不怪，而且有时还很有帮助</h3><p>彬彬有礼，多用<code>请</code>和<code>谢谢您的关注</code>，或<code>谢谢你的关照</code>。让大家都知道你对他们花时间免费提供帮助心存感激。</p><p>坦白说，这一点并没有比清晰、正确、精准并合法语法和避免使用专用格式重要（也不能取而代之）。黑客们一般宁可读有点唐突但技术上鲜明的 Bug 报告，而不是那种有礼但含糊的报告。（如果这点让你不解，记住我们是按问题能教给我们什么来评价问题的价值的）</p><p>然而，如果你有一串的问题待解决，客气一点肯定会增加你得到有用回应的机会。</p><p>（我们注意到，自从本指南发布后，从资深黑客那里得到的唯一严重缺陷反馈，就是对预先道谢这一条。一些黑客觉得<code>先谢了</code>意味着事后就不用再感谢任何人的暗示。我们的建议是要么先说<code>先谢了</code>，<strong>然后</strong>事后再对回复者表示感谢，或者换种方式表达感激，譬如用<code>谢谢你的关注</code>或<code>谢谢你的关照</code>。）</p><h3 id="问题解决后，加个简短的补充说明"><a href="#问题解决后，加个简短的补充说明" class="headerlink" title="问题解决后，加个简短的补充说明"></a>问题解决后，加个简短的补充说明</h3><p>问题解决后，向所有帮助过你的人发个说明，让他们知道问题是怎样解决的，并再一次向他们表示感谢。如果问题在新闻组或者邮件列表中引起了广泛关注，应该在那里贴一个说明比较恰当。</p><p>最理想的方式是向最初提问的话题回复此消息，并在标题中包含<code>已修正</code>，<code>已解决</code>或其它同等含义的明显标记。在人来人往的邮件列表里，一个看见讨论串<code>问题 X</code>和<code>问题 X - 已解决</code>的潜在回复者就明白不用再浪费时间了（除非他个人觉得<code>问题 X</code>的有趣），因此可以利用此时间去解决其它问题。</p><p>补充说明不必很长或是很深入；简单的一句<code>你好，原来是网线出了问题！谢谢大家 – Bill</code>比什么也不说要来的好。事实上，除非结论真的很有技术含量，否则简短可爱的小结比长篇大论更好。说明问题是怎样解决的，但大可不必将解决问题的过程复述一遍。</p><p>对于有深度的问题，张贴调试记录的摘要是有帮助的。描述问题的最终状态，说明是什么解决了问题，在此<strong>之后</strong>才指明可以避免的盲点。避免盲点的部分应放在正确的解决方案和其它总结材料之后，而不要将此信息搞成侦探推理小说。列出那些帮助过你的名字，会让你交到更多朋友。</p><p>除了有礼貌和有内涵以外，这种类型的补充也有助于他人在邮件列表/新闻群组/论坛中搜索到真正解决你问题的方案，让他们也从中受益。</p><p>至少，这种补充有助于让每位参与协助的人因问题的解决而从中得到满足感。如果你自己不是技术专家或者黑客，那就相信我们，这种感觉对于那些你向他们求助的大师或者专家而言，是非常重要的。问题悬而未决会让人灰心；黑客们渴望看到问题被解决。好人有好报，满足他们的渴望，你会在下次提问时尝到甜头。</p><p>思考一下怎样才能避免他人将来也遇到类似的问题，自问写一份文件或加个常见问题（FAQ）会不会有帮助。如果是的话就将它们发给维护者。</p><p>在黑客中，这种良好的后继行动实际上比传统的礼节更为重要，也是你如何透过善待他人而赢得声誉的方式，这是非常有价值的资产。</p><h2 id="如何解读答案"><a href="#如何解读答案" class="headerlink" title="如何解读答案"></a>如何解读答案</h2><p><a id="RTFM"></a></p><h3 id="RTFM-和-STFW：如何知道你已完全搞砸了"><a href="#RTFM-和-STFW：如何知道你已完全搞砸了" class="headerlink" title="RTFM 和 STFW：如何知道你已完全搞砸了"></a>RTFM 和 STFW：如何知道你已完全搞砸了</h3><p>有一个古老而神圣的传统：如果你收到<code>RTFM （Read The Fucking Manual）</code>的回应，回答者认为你<strong>应该去读他妈的手册</strong>。当然，基本上他是对的，你应该去读一读。</p><p>RTFM 有一个年轻的亲戚。如果你收到<code>STFW（Search The Fucking Web）</code>的回应，回答者认为你<strong>应该到他妈的网上搜索</strong>。那人多半也是对的，去搜索一下吧。（更温和一点的说法是 <strong><a href="http://lmgtfy.com/">Google 是你的朋友</a></strong>！）</p><p>在论坛，你也可能被要求去爬爬论坛的旧文。事实上，有人甚至可能热心地为你提供以前解决此问题的讨论串。但不要依赖这种关照，提问前应该先搜索一下旧文。</p><p>通常，用这两句之一回答你的人会给你一份包含你需要内容的手册或者一个网址，而且他们打这些字的时候也正在读着。这些答复意味着回答者认为</p><ul><li><strong>你需要的信息非常容易获得</strong>；</li><li><strong>你自己去搜索这些信息比灌给你，能让你学到更多</strong>。</li></ul><p>你不应该因此不爽；<strong>依照黑客的标准，他已经表示了对你一定程度的关注，而没有对你的要求视而不见</strong>。你应该对他祖母般的慈祥表示感谢。</p><h3 id="如果还是搞不懂"><a href="#如果还是搞不懂" class="headerlink" title="如果还是搞不懂"></a>如果还是搞不懂</h3><p>如果你看不懂回应，别立刻要求对方解释。像你以前试着自己解决问题时那样（利用手册，FAQ，网络，身边的高手），先试着去搞懂他的回应。如果你真的需要对方解释，记得表现出你已经从中学到了点什么。</p><p>比方说，如果我回答你：<code>看来似乎是 zentry 卡住了；你应该先清除它。</code>，然后，这是一个<strong>很糟的</strong>后续问题回应：<code>zentry 是什么？</code> <strong>好</strong>的问法应该是这样：<code>哦~~~我看过说明了但是只有 -z 和 -p 两个参数中提到了 zentries，而且还都没有清楚的解释如何清除它。你是指这两个中的哪一个吗？还是我看漏了什么？</code></p><h3 id="处理无礼的回应"><a href="#处理无礼的回应" class="headerlink" title="处理无礼的回应"></a>处理无礼的回应</h3><p>很多黑客圈子中看似无礼的行为并不是存心冒犯。相反，它是直接了当，一针见血式的交流风格，这种风格更注重解决问题，而不是使人感觉舒服而却模模糊糊。</p><p>如果你觉得被冒犯了，试着平静地反应。如果有人真的做了出格的事，邮件列表、新闻群组或论坛中的前辈多半会招呼他。如果这<strong>没有</strong>发生而你却发火了，那么你发火对象的言语可能在黑客社区中看起来是正常的，而<strong>你</strong>将被视为有错的一方，这将伤害到你获取信息或帮助的机会。</p><p>另一方面，你偶尔真的会碰到无礼和无聊的言行。与上述相反，对真正的冒犯者狠狠地打击，用犀利的语言将其驳得体无完肤都是可以接受的。然而，在行事之前一定要非常非常的有根据。纠正无礼的言论与开始一场毫无意义的口水战仅一线之隔，黑客们自己莽撞地越线的情况并不鲜见。如果你是新手或外人，避开这种莽撞的机会并不高。如果你想得到的是信息而不是消磨时光，这时最好不要把手放在键盘上以免冒险。</p><p>（有些人断言很多黑客都有轻度的自闭症或亚斯伯格综合症，缺少用于润滑人类社会<strong>正常</strong>交往所需的神经。这既可能是真也可能是假的。如果你自己不是黑客，兴许你认为我们脑袋有问题还能帮助你应付我们的古怪行为。只管这么干好了，我们不在乎。我们<strong>喜欢</strong>我们现在这个样子，并且通常对病患标记都有站得住脚的怀疑）。</p><p>Jeff Bigler 的观察总结和这个相关也值得一读 (<strong><a href="http://www.mit.edu/~jcb/tact.html">tact filters</a></strong>)。</p><p>在下一节，我们会谈到另一个问题，当<strong>你</strong>行为不当时所会受到的<code>冒犯</code>。</p><h2 id="如何避免扮演失败者"><a href="#如何避免扮演失败者" class="headerlink" title="如何避免扮演失败者"></a>如何避免扮演失败者</h2><p>在黑客社区的论坛中有那么几次你可能会搞砸 —— 以本指南所描述到的或类似的方式。而你会在公开场合中被告知你是如何搞砸的，也许攻击的言语中还会带点夹七夹八的颜色。</p><p>这种事发生以后，你能做的最糟糕的事莫过于哀嚎你的遭遇、宣称被口头攻击、要求道歉、高声尖叫、憋闷气、威胁诉诸法律、向其雇主报怨、忘了关马桶盖等等。相反地，你该这么做：</p><p>熬过去，这很正常。事实上，它是有益健康且合理的。</p><p>社区的标准不会自行维持，它们是通过参与者积极而<strong>公开地</strong>执行来维持的。不要哭嚎所有的批评都应该通过私下的邮件传送，它不是这样运作的。当有人评论你的一个说法有误或者提出不同看法时，坚持声称受到个人攻击也毫无益处，这些都是失败者的态度。</p><p>也有其它的黑客论坛，受过高礼节要求的误导，禁止参与者张贴任何对别人帖子挑毛病的消息，并声称<code>如果你不想帮助用户就闭嘴。</code> 结果造成有想法的参与者纷纷离开，这么做只会使它们沦为毫无意义的唠叨与无用的技术论坛。</p><p>夸张的讲法是：你要的是“友善”（以上述方式）还是有用？两个里面挑一个。</p><p>记着：当黑客说你搞砸了，并且（无论多么刺耳）告诉你别再这样做时，他正在为关心<strong>你</strong>和<strong>他的社区</strong>而行动。对他而言，不理你并将你从他的生活中滤掉更简单。如果你无法做到感谢，至少要表现得有点尊严，别大声哀嚎，也别因为自己是个有戏剧性超级敏感的灵魂和自以为有资格的新来者，就指望别人像对待脆弱的洋娃娃那样对你。</p><p>有时候，即使你没有搞砸（或者只是在他的想像中你搞砸了），有些人也会无缘无故地攻击你本人。在这种情况下，抱怨倒是<strong>真的</strong>会把问题搞砸。</p><p>这些来找麻烦的人要么是毫无办法但自以为是专家的不中用家伙，要么就是测试你是否真会搞砸的心理专家。其它读者要么不理睬，要么用自己的方式对付他们。这些来找麻烦的人在给他们自己找麻烦，这点你不用操心。</p><p>也别让自己卷入口水战，最好不要理睬大多数的口水战 —— 当然，这是在你检验它们只是口水战，并且未指出你有搞砸的地方，同时也没有巧妙地将问题真正的答案藏于其后（这也是有可能的）。</p><h2 id="不该问的问题"><a href="#不该问的问题" class="headerlink" title="不该问的问题"></a>不该问的问题</h2><p>以下是几个经典蠢问题，以及黑客没回答时心中所想的：</p><p>问题：<a href="#q1">我能在哪找到 X 程序或 X 资源？</a></p><p>问题：<a href="#q2">我怎样用 X 做 Y？</a></p><p>问题：<a href="#q3">如何设定我的 shell 提示？</a></p><p>问题：<a href="#q4">我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</a></p><p>问题：<a href="#q5">我的程序/设定/SQL 语句没有用</a></p><p>问题：<a href="#q6">我的 Windows 电脑有问题，你能帮我吗？</a></p><p>问题：<a href="#q7">我的程序不会动了，我认为系统工具 X 有问题</a></p><p>问题：<a href="#q8">我在安装 Linux（或者 X ）时有问题，你能帮我吗？</a></p><p>问题：<a href="#q9">我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</a></p><hr><p><a id="q1"></a></p><blockquote><p>问题：我能在哪找到 X 程序或 X 资源？</p></blockquote><p>回答：就在我找到它的地方啊，白痴 —— 搜索引擎的那一头。天哪！难道还有人不会用 <a href="http://www.google.com">Google</a> 吗？</p><p><a id="q2"></a></p><blockquote><p>问题：我怎样用 X 做 Y？</p></blockquote><p>回答：如果你想解决的是 Y ，提问时别给出可能并不恰当的方法。这种问题说明提问者不但对 X 完全无知，也对 Y 要解决的问题糊涂，还被特定形势禁锢了思维。最好忽略这种人，等他们把问题搞清楚了再说。</p><p><a id="q3"></a></p><blockquote><p>问题：如何设定我的 shell 提示？？</p></blockquote><p>回答：如果你有足够的智慧提这个问题，你也该有足够的智慧去 <a href="#RTFM">RTFM</a>，然后自己去找出来。</p><p><a id="q4"></a></p><blockquote><p>问题：我可以用 Bass-o-matic 文件转换工具将 AcmeCorp 档案转换为 TeX 格式吗？</p></blockquote><p>回答：试试看就知道了。如果你试过，你既知道了答案，就不用浪费我的时间了。</p><p><a id="q5"></a></p><blockquote><p>问题：我的{程序/设定/SQL 语句}不工作</p></blockquote><p>回答：这不算是问题吧，我对要我问你二十个问题才找得出你真正问题的问题没兴趣 —— 我有更有意思的事要做呢。在看到这类问题的时候，我的反应通常不外如下三种</p><ul><li>你还有什么要补充的吗？</li><li>真糟糕，希望你能搞定。</li><li>这关我屁事？</li></ul><p><a id="q6"></a></p><blockquote><p>问题：我的 Windows 电脑有问题，你能帮我吗？</p></blockquote><p>回答：能啊，扔掉微软的垃圾，换个像 Linux 或 BSD 的开源操作系统吧。</p><p>注意：如果程序有官方版 Windows 或者与 Windows 有互动（如 Samba），你<strong>可以</strong>问与 Windows 相关的问题， 只是别对问题是由 Windows 操作系统而不是程序本身造成的回复感到惊讶， 因为 Windows 一般来说实在太烂，这种说法通常都是对的。</p><p><a id="q7"></a></p><blockquote><p>问题：我的程序不会动了，我认为系统工具 X 有问题</p></blockquote><p>回答：你完全有可能是第一个注意到被成千上万用户反复使用的系统调用与函数库档案有明显缺陷的人，更有可能的是你完全没有根据。不同凡响的说法需要不同凡响的证据，当你这样声称时，你必须有清楚而详尽的缺陷说明文件作后盾。</p><p><a id="q8"></a></p><blockquote><p>问题：我在安装 Linux（或者 X ）时有问题，你能帮我吗？</p></blockquote><p>回答：不能，我只有亲自在你的电脑上动手才能找到毛病。还是去找你当地的 Linux 使用群组者寻求实际的指导吧（你能在<a href="http://www.linux.org/groups/index.html">这儿</a>找到使用者群组的清单）。</p><p>注意：如果安装问题与某 Linux 的发行版有关，在它的邮件列表、论坛或本地使用者群组中提问也许是恰当的。此时，应描述问题的准确细节。在此之前，先用 <code>Linux</code> 和<strong>所有</strong>被怀疑的硬件作关键词仔细搜索。</p><p><a id="q9"></a></p><blockquote><p>问题：我怎么才能破解 root 帐号/窃取 OP 特权/读别人的邮件呢？</p></blockquote><p>回答：想要这样做，说明了你是个卑鄙小人；想找个黑客帮你，说明你是个白痴！</p><h2 id="好问题与蠢问题"><a href="#好问题与蠢问题" class="headerlink" title="好问题与蠢问题"></a>好问题与蠢问题</h2><p>最后，我将透过举一些例子，来说明怎样聪明的提问；同一个问题的两种问法被放在一起，一种是愚蠢的，另一种才是明智的。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我可以在哪儿找到关于 Foonly Flurbamatic 的资料？</p></blockquote><p>这种问法无非想得到 <a href="#RTFM">STFW</a> 这样的回答。</p><p><strong>聪明问题</strong>：</p><blockquote><p>我用 Google 搜索过 “Foonly Flurbamatic 2600”，但是没找到有用的结果。谁知道上哪儿去找对这种设备编程的资料？</p></blockquote><p>这个问题已经 STFW 过了，看起来他真的遇到了麻烦。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我从 foo 项目找来的源码没法编译。它怎么这么烂？</p></blockquote><p>他觉得都是别人的错，这个傲慢自大的提问者。</p><p><strong>聪明问题</strong>：</p><blockquote><p>foo 项目代码在 Nulix 6.2 版下无法编译通过。我读过了 FAQ，但里面没有提到跟 Nulix 有关的问题。这是我编译过程的记录，我有什么做的不对的地方吗？</p></blockquote><p>提问者已经指明了环境，也读过了 FAQ，还列出了错误，并且他没有把问题的责任推到别人头上，他的问题值得被关注。</p><p><strong>蠢问题</strong>：</p><blockquote><p>我的主机板有问题了，谁来帮我？</p></blockquote><p>某黑客对这类问题的回答通常是：<code>好的，还要帮你拍拍背和换尿布吗？</code>，然后按下删除键。</p><p><strong>聪明问题</strong>：</p><blockquote><p>我在 S2464 主机板上试过了 X 、 Y 和 Z ，但没什么作用，我又试了 A 、 B 和 C 。请注意当我尝试 C 时的奇怪现象。显然 florbish 正在 grommicking，但结果出人意料。通常在 Athlon MP 主机板上引起 grommicking 的原因是什么？有谁知道接下来我该做些什么测试才能找出问题？</p></blockquote><p>这个家伙，从另一个角度来看，值得去回答他。他表现出了解决问题的能力，而不是坐等天上掉答案。</p><p>在最后一个问题中，注意<code>告诉我答案</code>和<code>给我启示，指出我还应该做什么诊断工作</code>之间微妙而又重要的区别。</p><p>事实上，后一个问题源自于 2001 年 8 月在 Linux 内核邮件列表（lkml）上的一个真实的提问。我（Eric）就是那个提出问题的人。我在 Tyan S2464 主板上观察到了这种无法解释的锁定现象，列表成员们提供了解决这一问题的重要信息。</p><p>通过我的提问方法，我给了别人可以咀嚼玩味的东西；我设法让人们很容易参与并且被吸引进来。我显示了自己具备和他们同等的能力，并邀请他们与我共同探讨。通过告诉他们我所走过的弯路，以避免他们再浪费时间，我也表明了对他们宝贵时间的尊重。</p><p>事后，当我向每个人表示感谢，并且赞赏这次良好的讨论经历的时候， 一个 Linux 内核邮件列表的成员表示，他觉得我的问题得到解决并非由于我是这个列表中的<strong>名</strong>人，而是因为我用了正确的方式来提问。</p><p>黑客从某种角度来说是拥有丰富知识但缺乏人情味的家伙；我相信他是对的，如果我<strong>像</strong>个乞讨者那样提问，不论我是谁，一定会惹恼某些人或者被他们忽视。他建议我记下这件事，这直接导致了本指南的出现。</p><h2 id="如果得不到回答"><a href="#如果得不到回答" class="headerlink" title="如果得不到回答"></a>如果得不到回答</h2><p>如果仍得不到回答，请不要以为我们觉得无法帮助你。有时只是看到你问题的人不知道答案罢了。没有回应不代表你被忽视，虽然不可否认这种差别很难区分。</p><p>总的来说，简单的重复张贴问题是个很糟的点子。这将被视为无意义的喧闹。有点耐心，知道你问题答案的人可能生活在不同的时区，可能正在睡觉，也有可能你的问题一开始就没有组织好。</p><p>你可以通过其他渠道获得帮助，这些渠道通常更适合初学者的需要。</p><p>有许多网上的以及本地的使用者群组，由热情的软件爱好者（即使他们可能从没亲自写过任何软件）组成。通常人们组建这样的团体来互相帮助并帮助新手。</p><p>另外，你可以向很多商业公司寻求帮助，不论公司大还是小。别为要付费才能获得帮助而感到沮丧！毕竟，假使你的汽车发动机汽缸密封圈爆掉了 —— 完全可能如此 —— 你还得把它送到修车铺，并且为维修付费。就算软件没花费你一分钱，你也不能强求技术支持总是免费的。</p><p>对像是 Linux 这种大众化的软件，每个开发者至少会对应到上万名使用者。根本不可能由一个人来处理来自上万名使用者的求助电话。要知道，即使你要为这些协助付费，和你所购买的同类软件相比，你所付出的也是微不足道的（通常封闭源代码软件的技术支持费用比开源软件的要高得多，且内容也没那么丰富）。</p><h2 id="如何更好地回答问题"><a href="#如何更好地回答问题" class="headerlink" title="如何更好地回答问题"></a>如何更好地回答问题</h2><p><strong>态度和善一点</strong>。问题带来的压力常使人显得无礼或愚蠢，其实并不是这样。</p><p><strong>对初犯者私下回复</strong>。对那些坦诚犯错之人没有必要当众羞辱，一个真正的新手也许连怎么搜索或在哪找常见问题都不知道。</p><p><strong>如果你不确定，一定要说出来</strong>！一个听起来权威的错误回复比没有还要糟，别因为听起来像个专家很好玩，就给别人乱指路。要谦虚和诚实，给提问者与同行都树个好榜样。</p><p><strong>如果帮不了忙，也别妨碍他</strong>。不要在实际步骤上开玩笑，那样也许会毁了使用者的设置 —— 有些可怜的呆瓜会把它当成真的指令。</p><p><strong>试探性的反问以引出更多的细节</strong>。如果你做得好，提问者可以学到点东西 —— 你也可以。试试将蠢问题转变成好问题，别忘了我们都曾是新手。</p><p>尽管对那些懒虫抱怨一声 RTFM 是正当的，能指出文件的位置（即使只是建议个 Google 搜索关键词）会更好。</p><p><strong>如果你决定回答，就请给出好的答案</strong>。当别人正在用错误的工具或方法时别建议笨拙的权宜之计（workaround），应推荐更好的工具，重新界定问题。</p><p><strong>正面的回答问题</strong>！如果这个提问者已经很深入的研究而且也表明已经试过 X 、 Y 、 Z 、 A 、 B 、 C 但没得到结果，回答 <code>试试看 A 或是 B</code> 或者 <code>试试 X 、 Y 、 Z 、 A 、 B 、 C</code> 并附上一个链接一点用都没有。</p><p><strong>帮助你的社区从问题中学习</strong>。当回复一个好问题时，问问自己<code>如何修改相关文件或常见问题文件以免再次解答同样的问题？</code>，接着再向文件维护者发一份补丁。</p><p>如果你是在研究一番后才做出的回答，<strong>展现你的技巧而不是直接端出结果</strong>。毕竟<code>授人以鱼不如授人以渔</code>。</p><h2 id="相关资源"><a href="#相关资源" class="headerlink" title="相关资源"></a>相关资源</h2><p>如果你需要个人电脑、Unix 系统和网络如何运作的基础知识，参阅 <a href="http://en.tldp.org/HOWTO/Unix-and-Internet-Fundamentals-HOWTO/">Unix 系统和网络基本原理</a>。</p><p>当你发布软件或补丁时，试着按<a href="http://en.tldp.org/HOWTO/Software-Release-Practice-HOWTO/index.html">软件发布实践</a>操作。</p><h2 id="鸣谢"><a href="#鸣谢" class="headerlink" title="鸣谢"></a>鸣谢</h2><p>Evelyn Mitchel 贡献了一些愚蠢问题例子并启发了编写<code>如何更好地回答问题</code>这一节， Mikhail Ramendik 贡献了一些特别有价值的建议和改进。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Install TensorFlow Object Detection API</title>
    <link href="/Install-TensorFlow-Object-Detection-API/"/>
    <url>/Install-TensorFlow-Object-Detection-API/</url>
    
    <content type="html"><![CDATA[<p>This Blog is writing for TensorFlow Object Detection API Installation on Win10.</p><span id="more"></span><h2 id="1-Install-TensorFlow"><a href="#1-Install-TensorFlow" class="headerlink" title="1. Install TensorFlow"></a>1. Install TensorFlow</h2><blockquote><p>Before install TF. Make sure CUDA and cdDNN has been installed successfully. Check the system environment has been set  correctly.</p><p> <strong>Verify the installation</strong></p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python -c <span class="token string">"import tensorflow as tf;print(tf.reduce_sum(tf.random.normal([1000, 1000])))"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><p>If warning <code>Could not load dynamic library &#39;cudnn64_7.dll&#39;</code> copy the file to CUDA\bin.</p></blockquote><h3 id="2-Install-Object-Detection-API"><a href="#2-Install-Object-Detection-API" class="headerlink" title="2. Install Object Detection API"></a>2. Install Object Detection API</h3><blockquote><p>Clone the TensorFlow Models repository and proceed to one of the installation options.</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/tensorflow/models.git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><blockquote><p>Get the Proto Tool. Find the win64.zip in GitHub release packages.</p></blockquote><p><a href="https://github.com/protocolbuffers/protobuf/releases">https://github.com/protocolbuffers/protobuf/releases</a></p><blockquote><p>Unzip the files to Tool folder, and add the Tool/protoc<em>*</em>/bin to the system environment path.</p><p>Install API</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># From within TensorFlow/models/research/</span>Get-ChildItem object_detection/protos/*.proto <span class="token operator">|</span> foreach <span class="token punctuation">&#123;</span>protoc <span class="token string">"object_detection/protos/<span class="token variable"><span class="token variable">$(</span>$_.Name<span class="token variable">)</span></span>"</span> --python_out<span class="token operator">=</span>.<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Install CUDA 11.1 &amp; cuDNN</title>
    <link href="/Install%20CUDA%2011.1%20&amp;%20cuDNN/"/>
    <url>/Install%20CUDA%2011.1%20&amp;%20cuDNN/</url>
    
    <content type="html"><![CDATA[<p>This Blog is writing for steps of CUDA installing on Ubuntu 20.04.</p><span id="more"></span><h2 id="Install-CUDA-11-1"><a href="#Install-CUDA-11-1" class="headerlink" title="Install CUDA 11.1"></a>Install CUDA 11.1</h2><ol><li>Check Updates</li></ol><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> update<span class="token function">sudo</span> <span class="token function">apt-get</span> upgrade<span class="token function">sudo</span> <span class="token function">apt-get</span> autoremove<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><ol><li>Switch Navida Metapackage Version<blockquote><p>Open Software &amp; Updates and switch Navida metapackage to 455.<br>Apply Changes.</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">reboot</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div></blockquote></li></ol><ol><li>Download Installer for Linux Ubuntu 20.04 x86_64 (<a href="https://developer.nvidia.com/cuda-downloads">https://developer.nvidia.com/cuda-downloads</a>) </li></ol><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">wget</span> https://developer.download.nvidia.com/compute/cuda/11.1.0/local_installers/cuda_11.1.0_455.23.05_linux.run<span class="token function">sudo</span> <span class="token function">sh</span> cuda_11.1.0_455.23.05_linux.run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><blockquote><p>On the first prompt choose Continue.<br>On the second prompt press Enter add the first metapackage to blacklist.<br>Choose Install.</p></blockquote><ol><li>Config Environment Variables</li></ol><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gedit ~/.bashrc<span class="token comment"># Add these lines to bashrc file.</span><span class="token builtin class-name">export</span> <span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span><span class="token variable">$LD_LIBRARY_PATH</span>:/usr/local/cuda/lib64<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span>:/usr/local/cuda/bin<span class="token builtin class-name">export</span> <span class="token assign-left variable">CUDA_HOME</span><span class="token operator">=</span><span class="token variable">$CUDA_HOME</span>:/usr/local/cuda<span class="token comment"># Exit current terminal and open a new terminal.</span><span class="token comment"># Config bashrc.</span><span class="token builtin class-name">source</span> ~/.bashrc<span class="token comment"># Do the same with zshrc.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><ol><li>Test CUDA<div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> /usr/local/cuda/samples/1_Utilities/deviceQuery<span class="token function">make</span> <span class="token comment"># If permission denied type $ sudo make</span>./deviceQuery <span class="token comment">#If permission denied type $ sudo ./deviceQuery</span><span class="token comment"># Result = PASS indicate CUDA has installed successfully.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></li></ol><h2 id="Install-cuDNN"><a href="#Install-cuDNN" class="headerlink" title="Install cuDNN"></a>Install cuDNN</h2><ol><li>Download cuDnn</li></ol><ol><li><p>Extract Files</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">cd</span> ~/Downloads<span class="token function">tar</span> -xzf cudnn-11.1-linux-x64-v8.0.4.30.tgz<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div></li><li><p>Copy Files to Dictionary</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">cp</span> cuda/include/cudnn.h /usr/local/cuda/include<span class="token function">sudo</span> <span class="token function">cp</span> cuda/lib64/libcudnn* /usr/local/cuda/lib64<span class="token function">sudo</span> <span class="token function">chmod</span> a+r /usr/local/cuda/include/cudnn.h /usr/local/cuda/lib64/libcudnn*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div></li></ol>]]></content>
    
    
    <categories>
      
      <category>Tips</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Chrome浏览器截屏</title>
    <link href="/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%B1%8F/"/>
    <url>/Chrome%E6%B5%8F%E8%A7%88%E5%99%A8%E6%88%AA%E5%B1%8F/</url>
    
    <content type="html"><![CDATA[<p>快速截取整个页面</p><span id="more"></span><h1 id="Chrome-谷歌浏览器）快速截取整个页面"><a href="#Chrome-谷歌浏览器）快速截取整个页面" class="headerlink" title="Chrome(谷歌浏览器）快速截取整个页面"></a>Chrome(谷歌浏览器）快速截取整个页面</h1><h2 id="打开网页页面"><a href="#打开网页页面" class="headerlink" title="打开网页页面"></a>打开网页页面</h2><p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191225093402263.png" alt="image-20191225093402263"></p><h2 id="按F12打开开发者控制台"><a href="#按F12打开开发者控制台" class="headerlink" title="按F12打开开发者控制台"></a>按F12打开开发者控制台</h2><p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191225093415908.png" alt="image-20191225093415908"></p><h2 id="使用快捷键ctrl-shift-p，打开一个命令行输入框。然后输入screen-选择【Capture-full-size-screenshot】"><a href="#使用快捷键ctrl-shift-p，打开一个命令行输入框。然后输入screen-选择【Capture-full-size-screenshot】" class="headerlink" title="使用快捷键ctrl+shift+p，打开一个命令行输入框。然后输入screen,选择【Capture full size screenshot】"></a>使用快捷键ctrl+shift+p，打开一个命令行输入框。然后输入screen,选择【Capture full size screenshot】</h2><p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191225093458817.png" alt="image-20191225093458817"></p><p>几秒之后会弹出保存窗口，保存图片即可</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>learnmarkdown-cn</title>
    <link href="/Programing/learnmarkdown-cn/"/>
    <url>/Programing/learnmarkdown-cn/</url>
    
    <content type="html"><![CDATA[<p>For markdown.</p><span id="more"></span><p>Markdown 由 John Gruber 于 2004年创立. 它旨在成为一门容易读写的语法结构，并可以便利地转换成 HTML（以及其他很多）格式。</p><p>在不同的解析器中，Markdown 的实现方法有所不同。此教程会指出哪些特征是通用，哪一些只对某一解析器有效。</p><ul><li><a href="#HTML标签">HTML标签</a></li><li><a href="#标题">标题</a></li><li><a href="#文本样式">文本样式</a></li><li><a href="#段落">段落</a></li><li><a href="#列表">列表</a></li><li><a href="#代码块">代码块</a></li><li><a href="#水平线分隔">水平线分隔</a></li><li><a href="#链接">链接</a></li><li><a href="#图片">图片</a></li><li><a href="#杂项">杂项</a></li></ul><p><h2>HTML标签</h2></p><p>Markdown 是 HTML 的父集，所以任何 HTML 文件都是有效的 Markdown。</p><div class="highlight"><div class="code-wrapper"><pre><span></span>&lt;!--这意味着我们可以在 Markdown 里使用任何 HTML 元素，比如注释元素，且不会被 Markdown 解析器所影响。不过如果你在 Markdown 文件内创建了 HTML 元素，你将无法在 HTML 元素的内容中使用 Markdown 语法。--&gt;</pre></div></div><h2>标题</h2><p>通过在文本前加上不同数量的hash(#), 你可以创建相对应的 <code>&lt;h1&gt;</code> 到 <code>&lt;h6&gt;</code> HTML元素。</p><div class="highlight"><div class="code-wrapper"><pre><span></span><span class="gh">#</span> 这是一个 &lt;h1&gt;<span class="gu">##</span> 这是一个 &lt;h2&gt;<span class="gu">###</span> 这是一个 &lt;h3&gt;<span class="gu">####</span> 这是一个 &lt;h4&gt;<span class="gu">#####</span> 这是一个 &lt;h5&gt;<span class="gu">######</span> 这是一个 &lt;h6&gt;</pre></div></div><p>实际效果（最终显示时会因设置而看起来不同）：</p><h1>这是一个</h1><h2>这也是一个</h2><h3>这还是一个</h3><h4>这依旧是一个</h4><h5>这真的是一个</h5><h6>这&hellip;是一个</h6><p>对于 <code>&lt;h1&gt;</code> 和 <code>&lt;h2&gt;</code> 元素，Markdown 额外提供了两种添加方式。</p><div class="highlight"><div class="code-wrapper"><pre><span></span>这是一个 h1=============这是一个 h2-------------</pre></div></div><h2>文本样式</h2><p>文本的<em>斜体</em>，<strong>粗体</strong>在 Markdown 中可以轻易实现。</p><div class="highlight"><div class="code-wrapper"><pre><span></span>*此文本为斜体。*<span class="ge">_此文本也是。_</span><span class="gs">**此文本为粗体。**</span><span class="gs">__此文本也是__</span><span class="gs">***此文本是斜体加粗体。***</span><span class="gs">**_或者这样。_**</span>*__这个也是！__*</pre></div></div><p>GitHub 也支持 Markdown，在 GitHub 的 Markdown 解析器中，我们可以使用~~删除线~~：</p><div class="highlight"><div class="code-wrapper"><pre><span></span>~~此文本为删除线效果。~~</pre></div></div><h2>段落</h2><p>段落由一个句子或是多个中间没有空行的句子组成，每个段落由一个或是多个空行分隔开来。（注：部分解析器有无需空行就能换行的设置，这个主要看个人喜好）</p><div class="highlight"><div class="code-wrapper"><pre><span></span>这是第一段落. 这句话在同一个段落里，好玩么？现在我是第二段落。这句话也在第二段落！这句话在第三段落！</pre></div></div><p>如果你想插入一个 <code>&lt;br /&gt;</code> 标签，你可以在段末加入两个以上的空格，然后另起一段。</p><p>(译者注：试了一下，很多解析器，并不需要空两个空格，直接换行就会添加一个<code>&lt;br /&gt;</code>)</p><div class="highlight"><div class="code-wrapper"><pre><span></span>此段落结尾有两个空格（选中以显示）。  上文有一个 &lt;br /&gt; ！</pre></div></div><p>段落引用可由 <code>&gt;</code> 字符轻松实现。</p><blockquote><p>对的很轻松</p></blockquote><div class="highlight"><div class="code-wrapper"><pre><span></span><span class="k">&gt; </span><span class="ge">这是一个段落引用。 你可以</span><span class="k">&gt; </span><span class="ge">手动断开你的句子，然后在每句句子前面添加 `&gt;` 字符。或者让你的句子变得很长，以至于他们自动得换行。</span><span class="k">&gt; </span><span class="ge">只要你的文字以 `&gt;` 字符开头，两种方式无异。</span><span class="k">&gt; </span><span class="ge">你也可以对文本进行</span>&gt;&gt; 多层引用<span class="k">&gt; </span><span class="ge">这多机智啊！</span></pre></div></div><h2>列表</h2><ul><li>无序列表可由星号，加号或者减号来创建</li></ul><div class="highlight"><div class="code-wrapper"><pre><span></span><span class="k">*</span> 项目<span class="k">*</span> 项目<span class="k">*</span> 另一个项目或者+ 项目+ 项目+ 另一个项目或者 <span class="k">-</span> 项目<span class="k">-</span> 项目<span class="k">-</span> 最后一个项目</pre></div></div><p>有序序列可由数字加上点 <code>.</code> 来实现</p><div class="highlight"><div class="code-wrapper"><pre><span></span><span class="k">1.</span> 项目一<span class="k">2.</span> 项目二<span class="k">3.</span> 项目三</pre></div></div><p>即使你的数字标签有误，Markdown 依旧会呈现出正确的序号，不过这并不是一个好主意</p><div class="highlight"><div class="code-wrapper"><pre><span></span><span class="k">1.</span> 项目一<span class="k">1.</span> 项目二<span class="k">1.</span> 项目三</pre></div></div><p>(此段与上面效果一模一样)</p><p>你也可以使用子列表</p><div class="highlight"><div class="code-wrapper"><pre><span></span><span class="k">1.</span> 项目一<span class="k">2.</span> 项目二<span class="k">3.</span> 项目三    <span class="k">*</span> 子项目    <span class="k">*</span> 子项目<span class="k">4.</span> 项目四</pre></div></div><p>你甚至可以使用任务列表，它将会生成 HTML 的选择框（checkboxes）标签。</p><div class="highlight"><div class="code-wrapper"><pre><span></span>下面方框里包含 &#39;x&#39; 的列表，将会生成选中效果的选择框。<span class="k">- [ ]</span> 任务一需要完成<span class="k">- [ ]</span> 任务二需要完成下面这个选择框将会是选中状态<span class="k">- [x]</span> 这个任务已经完成</pre></div></div><ul><li>[ ] 你看完了这个任务（注：此选择框是无法直接更改的，即禁用状态。）</li></ul><h2>代码块</h2><p>代码块（HTML中 <code>&lt;code&gt;</code> 标签）可以由缩进四格（spaces）或者一个制表符（tab）实现</p><div class="highlight"><div class="code-wrapper"><pre><span></span>    This is code    So is this</pre></div></div><p>在你的代码中，你仍然使用tab（或者四个空格）可以进行缩进操作</p><div class="highlight"><div class="code-wrapper"><pre><span></span>    my_array.each do |item|        puts item    end</pre></div></div><p>内联代码可由反引号 ` 实现</p><div class="highlight"><div class="code-wrapper"><pre><span></span>John 甚至不知道 <span class="sb">`go_to()`</span> 方程是干嘛的!</pre></div></div><p>在GitHub的 Markdown（GitHub Flavored Markdown）解析器中，你可以使用特殊的语法表示代码块</p><div class="code-wrapper"><pre><code class="highlight">&#x60;&#x60;&#x60;rubydef foobar    puts "Hello world!"end&#x60;&#x60;&#x60;</code></pre></div><p>以上代码不需要缩进，而且 GitHub 会根据`&ldquo;后指定的语言来进行语法高亮显示</p><h2>水平线分隔</h2><p>水平线（<code>&lt;hr/&gt;</code>）可由三个或以上的星号或是减号创建，它们之间可以带或不带空格</p><div class="highlight"><div class="code-wrapper"><pre><span></span>***---<span class="k">-</span> - - ****************下面这个就是示例</pre></div></div><hr><h2>链接</h2><p>Markdown 最棒的地方就是便捷的书写链接。把链接文字放在中括号[]内，在随后的括弧()内加入url就可以了。</p><div class="highlight"><div class="code-wrapper"><pre><span></span>[<span class="nt">点我点我!</span>](<span class="na">http://test.com/</span>)</pre></div></div><p>你也可以在小括号内使用引号，为链接加上一个标题（title）</p><div class="highlight"><div class="code-wrapper"><pre><span></span>[<span class="nt">点我点我!</span>](<span class="na">http://test.com/ &quot;连接到Test.com&quot;</span>)</pre></div></div><p>相对路径也可以有 </p><div class="highlight"><div class="code-wrapper"><pre><span></span>[<span class="nt">去 music</span>](<span class="na">/music/</span>).</pre></div></div><p>Markdown同样支持引用形式的链接</p><div class="highlight"><div class="code-wrapper"><pre><span></span>[点此链接][link1] 以获取更多信息！[看一看这个链接][foobar] 如果你愿意的话。</pre></div></div><p>对于引用形式，链接的标题可以处于单引号中，括弧中或是忽略。引用名可以在文档的任何地方，并且可以随意命名，只要名称不重复。</p><p>“隐含式命名” 的功能可以让链接文字作为引用名</p><div class="highlight"><div class="code-wrapper"><pre><span></span>[This][] is a link.</pre></div></div><p>但这并不常用</p><h2>图片</h2><p>图片与链接相似，只需在前添加一个感叹号</p><div class="highlight"><div class="code-wrapper"><pre><span></span>![<span class="nt">这是alt,请把鼠标放在图片上</span>](<span class="na">http://imgur.com/myimage.jpg &quot;这是title&quot;</span>)</pre></div></div><p>引用形式也同样起作用</p><div class="highlight"><div class="code-wrapper"><pre><span></span>![这是alt][myimage]</pre></div></div><h2>杂项</h2><h3>自动链接</h3><div class="highlight"><div class="code-wrapper"><pre><span></span>&lt;http://testwebsite.com/&gt; 与[<span class="nt">http://testwebsite.com/</span>](<span class="na">http://testwebsite.com/</span>) 等同</pre></div></div><h3>电子邮件的自动链接</h3><div class="highlight"><div class="code-wrapper"><pre><span></span>&lt;foo@bar.com&gt;</pre></div></div><h3>转义字符</h3><div class="highlight"><div class="code-wrapper"><pre><span></span>我希望 <span class="ge">*将这段文字置于星号之间*</span> 但是我不希望它被斜体化, 这么做: \*这段置文字于星号之间\*。</pre></div></div><p>对比一下：<em>将这段文字置于星号之间</em> 和 *将这段文字置于星号之间*</p><h3>键盘上的功能键</h3><p>在 GitHub 的 Markdown 中，你可以使用 <code>&lt;kbd&gt;</code> 标签来表示功能键。</p><div class="highlight"><div class="code-wrapper"><pre><span></span>你的电脑死机了？试试&lt;kbd&gt;Ctrl&lt;/kbd&gt;+&lt;kbd&gt;Alt&lt;/kbd&gt;+&lt;kbd&gt;Del&lt;/kbd&gt;</pre></div></div><p><kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd></p><p>（译注：可能由于网站本身样式问题，效果不明显）</p><h3>表格</h3><p>下面示例的表格长这样：</p><table><thead><tr><th align="left">第一列</th><th align="center">第二列</th><th align="right">第三列</th></tr></thead><tbody><tr><td align="left">我是左对齐</td><td align="center">居个中</td><td align="right">右对齐</td></tr><tr><td align="left">注意</td><td align="center">冒</td><td align="right">号</td></tr></tbody></table><p>工整一点的写法是这样的：</p><div class="highlight"><div class="code-wrapper"><pre><span></span>| 第一列        | 第二列    | 第三列       || :----------- | :-------: | ----------: || 我是左对齐    | 居个中    | 右对齐       || 注意          | 冒       | 号           |</pre></div></div><p>好吧，强行对齐字符是很难的。但是，至少比下面这种写法好一点——</p><div class="highlight"><div class="code-wrapper"><pre><span></span>我是超级超级长的第一列 | 第二列 | 第三列:-- | :-: | --:这真的太丑了 | 药不能 | 停！！！！</pre></div></div><p>真的是<em>看着令人头晕</em></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Mark</title>
    <link href="/Mark/"/>
    <url>/Mark/</url>
    
    <content type="html"><![CDATA[<p align="center">    <font face="华文新魏" size="6">Interesting Mark</font>        </p><span id="more"></span><p>文言文編程語言 A programming language for the ancient Chinese. <a href="http://wenyan-lang.lingdong.works/">http://wenyan-lang.lingdong.works</a></p><p>交互线性代数 Interactive Linear Algebra <a href="http://textbooks.math.gatech.edu/ila/index.html">http://textbooks.math.gatech.edu/ila/index.html</a></p><h1 id="科研"><a href="#科研" class="headerlink" title="科研"></a>科研</h1><p>用不同颜色的沙砾代表不同密度的沙进行风沙运动研究 <a href="https://www.sciencedirect.com/science/article/pii/S1875963712000729">https://www.sciencedirect.com/science/article/pii/S1875963712000729</a></p><p>journal finder <a href="https://journalfinder.elsevier.com/">https://journalfinder.elsevier.com/</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>收藏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10专业版激活及卓越性能开启</title>
    <link href="/Win10%E4%B8%93%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E5%8F%8A%E5%8D%93%E8%B6%8A%E6%80%A7%E8%83%BD%E5%BC%80%E5%90%AF/"/>
    <url>/Win10%E4%B8%93%E4%B8%9A%E7%89%88%E7%A0%B4%E8%A7%A3%E5%8F%8A%E5%8D%93%E8%B6%8A%E6%80%A7%E8%83%BD%E5%BC%80%E5%90%AF/</url>
    
    <content type="html"><![CDATA[<p align="center">    <font face="华文新魏" size="6">小白的Win10装机之路（二）</font>        </p><span id="more"></span><h2 id="Win10专业版激活"><a href="#Win10专业版激活" class="headerlink" title="Win10专业版激活"></a>Win10专业版激活</h2><p>Win10专业版可以使用激活码激活也可以使用KMS工具进行激活，为保证系统纯净性推荐使用激活码激活。</p><p>win10专业版激活密钥 ：</p><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">Windows 10专业版：NXRQM-CXV6P-PBGVJ-293T4-R3KTYWindows 10专业版：W269N-WFGWX-YVC9B-4J6C9-T83GXWindows 10专业版：8N67H-M3CY9-QT7C4-2TR7M-TXYCVWindows 10专业版N：2B87N-8KFHP-DKV6R-Y2C8J-PKCKTWindows 10专业版N：MH37W-N47XK-V7XM9-C7227-GCQG9<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>激活码使用方法：</p><ol><li>进入win10系统，右键点击开始，选择管理员模式的命令提示符。</li><li>在命令提示符中输入：<code>slmgr -ipk W269N-WFGWX-YVC9B-4J6C9-T83GX</code>（也可以换成上面的其他激活密钥），回车。</li><li>然后再输入<code>slmgr -skms kms.landian.news</code>，回车。</li><li>提示安装成功后继续键入：<code>slmgr -ato</code>，回车，提示激活成功。</li></ol><h2 id="卓越性能开启"><a href="#卓越性能开启" class="headerlink" title="卓越性能开启"></a>卓越性能开启</h2><ol><li>打开“Windows Powershell”，并右键以管理员身份运行。</li><li>在弹出“windows powershell”窗口界面后，输入如下命令代码<code>powercfg -duplicatescheme e9a42b02-d5df-448d-aa00-03f14749eb61</code>窗口界面上将显示出“电源方案 GUID: xxxxxxxx (卓越性能)”字符串提示，这时我们便成功开启了“卓越性能模式”。</li></ol><p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191214160617256.png" alt="image-20191214160617256"></p>]]></content>
    
    
    
    <tags>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Win10装机指南</title>
    <link href="/Win10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/"/>
    <url>/Win10%E8%A3%85%E6%9C%BA%E6%8C%87%E5%8D%97/</url>
    
    <content type="html"><![CDATA[<p align="center">    <font face="华文新魏" size="6">小白的Win10装机之路（一）</font>        </p><span id="more"></span><ul><li>没有什么问题是重启解决不了的，如果不行就重启两次，如果实在不行就重装系统吧。</li><li>除了电脑硬件问题，几乎所有的电脑问题都可以通过重装系统，重新配置电脑驱动、软件解决。</li><li>在初次使用一些软件时系统环境变量等不能正确配置，造成的软件索引问题过多，最简单有效的方法就是重装系统。</li><li>原装的BUG10系统经常会出现蓝屏死机情况，同时随着使用时间的推移系统会越来越慢，这些问题也可以通过重装系统解决。</li><li>重装系统其实很简单，小白也能轻松重装，看完这篇推送别找了装系统了吧（逃）。</li></ul><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><blockquote><p><strong>重装系统广义上也可以分为：</strong></p></blockquote><ol><li><strong>原系统重置</strong></li><li><strong>系统完全重装</strong></li></ol><blockquote><p><strong>Win10磁盘分区表及文件格式</strong></p></blockquote><h3 id="磁盘分区表"><a href="#磁盘分区表" class="headerlink" title="磁盘分区表"></a>磁盘分区表</h3><ol><li><p><strong>主引导记录MBR（Master Boot Record）</strong></p><p>MBR由3部分组成，包括主引导代码，磁盘分区表和磁盘签名。分区表最多可容纳Windows中主分区的4个条目，也就是最多支持四个主分区。</p><p>如果将磁盘初始化为MBR，则无论磁盘有多大，都只能使用2TB或16TB的硬盘容量。如果磁盘使用传统的512B对齐扇区，则只能使用2TB。如果使用4K对齐扇区，则可以使用16TB。</p></li><li><p><strong>GUID分区表GPT（GUID Partition Table）</strong></p><p>GUID分区表由保护性MBR组成，用于防止基于MBR的磁盘实用程序误识别并可能覆盖GPT磁盘；<strong>主要GUID分区表标头</strong>（记录了其自身的大小、位置以及辅助GPT标头），<strong>主GUID分区条目数组</strong>，<strong>备份GUID分区条目数组</strong>和<strong>备份GUID分区表标头</strong>。</p><p>在Windows中，GUID分区表最多可以包含128个分区条目。</p><p>XP及以下系统只能使用MBR分区格式的磁盘，当前Windows操作系统都可以使用GPT分区格式磁盘读写数据。如果主板仅支持Legacy启动，只能从MBR启动Windows，当主板支持UEFI启动时，Windows的64位系统支持从GPT启动。</p></li></ol><h3 id="文件格式"><a href="#文件格式" class="headerlink" title="文件格式"></a>文件格式</h3><p>Windows操作系统支持 NTFS, FAT32, and exFAT三种不同文件系统，在Win10装机时，硬盘格式一般选择NTFS，目前也有在exFAT文件系统上运行的Win10系统。</p><ol><li>NTFS是目前Windows系统中一种现代文件系统，目前使用最广泛，内置的硬盘大多数都是NTFS格式。</li><li>FAT32是一种相对老旧的文件系统，不能像NTFS格式支持很多现代文件格式的属性，但对于不同系统平台具有良好的兼容性，可以在Linux、Mac或Android系统平台上通用。</li><li>exFAT是FAT32文件格式的替代品，很多设备和操作系统都支持该文件系统。</li></ol><h2 id="原系统重置"><a href="#原系统重置" class="headerlink" title="原系统重置"></a>原系统重置</h2><p><img src="C:\Users\VEEN_Z~1\AppData\Local\Temp\Ditto\DragFiles\image_3.png" alt="image_3"></p><p>有三个选项能够初始化电脑。</p><ul><li>选项 1：依次选择“开始” &gt;“设置” &gt;“更新和安全” &gt;“恢复”。在“初始化此电脑”下，选择“开始”。<a href="ms-settings:recovery?activationSource=SMC-IA-4026528">打开“恢复”设置</a>。</li><li>选项 2：重启电脑以访问登录屏幕，然后长按 Shift 键，同时依次选择屏幕右下角的“电源”图标 &gt;“重启”。在计算机重启后，依次选择“疑难解答”&gt;“初始化此电脑”。</li><li>选项 3：选择“开始”，然后长按 Shift 键，同时依次选择“电源”图标 &gt;“重启”将计算机重启到恢复模式。在计算机重启后，依次选择“疑难解答”&gt;“初始化此电脑”。</li></ul><blockquote><p>重置电脑是重置所有用户安装的软件，可以选择保存自己的文档，在重置时不会完全删除所有驱动。</p><p>全新安装会删除所有的用户数据，在安装之前也可以保存文档，全新安装后需要重新安装驱动。</p></blockquote><h2 id="系统完全重置"><a href="#系统完全重置" class="headerlink" title="系统完全重置"></a>系统完全重置</h2><blockquote><p>本文教程不使用第三方工具进行装机，如需要第三方工具的装机可以百度“微PE”。</p></blockquote><h3 id="开始之前"><a href="#开始之前" class="headerlink" title="开始之前"></a>开始之前</h3><p>确保你的数据已经全部备份，在完全重置的系统安装中建议完全格式化系统盘。对于双硬盘的用户，建议在重装系统前将其取出。</p><blockquote><p>对于正版系统的安装：</p><ul><li>确保 Windows 10 已激活</li><li>在重新安装 Windows 之前，你需要将 Microsoft 帐户链接到数字许可证</li><li>如果你对电脑进行了重大的硬件更换，需要重新激活 Windows 10</li><li>你将需要重新安装与你的许可证匹配的 Windows 版本</li></ul></blockquote><h3 id="使用安装介质执行-Windows-10-的干净安装"><a href="#使用安装介质执行-Windows-10-的干净安装" class="headerlink" title="使用安装介质执行 Windows 10 的干净安装"></a>使用安装介质执行 Windows 10 的干净安装</h3><h4 id="制作系统镜像盘"><a href="#制作系统镜像盘" class="headerlink" title="制作系统镜像盘"></a>制作系统镜像盘</h4><ol><li>在工作电脑上，转到 <a href="http://go.microsoft.com/fwlink/p/?LinkID=616447">Microsoft 软件下载网站</a> <a href="http://go.microsoft.com/fwlink/p/?LinkID=616447">http://go.microsoft.com/fwlink/p/?LinkID=616447</a> ，然后选择<strong>立即下载工具</strong>。</li></ol><p><img src="D:\Veen&#39;s Files\win10\1.png" alt="1"></p><p><img src="D:\Veen&#39;s Files\win10\2.png" alt="2"></p><ol><li>在下载完成后，从你的桌面中打开该工具，然后在询问是否要使用工具对设备进行更改时，选择“是”。</li><li>当出现 Windows 10 设置指南时，请接受许可条款和协议。</li></ol><p><img src="D:\Veen&#39;s Files\win10\3.png" alt="3"></p><ol><li>选择<strong>从其他电脑中创建安装介质（U 盘、DVD 或 ISO 文件）</strong>，然后选择“下一步”。</li></ol><p><img src="D:\Veen&#39;s Files\win10\5.png" alt="5"></p><ol><li>选择语言、版本和体系结构（64 位或 32 位），推荐使用64位系统。</li></ol><p><img src="D:\Veen&#39;s Files\win10\6.png" alt="6"></p><ol><li>按照这些步骤创建安装介质，然后选择“完成”。</li></ol><p><img src="D:\Veen&#39;s Files\win10\9.png" alt="9"></p><p><img src="D:\Veen&#39;s Files\win10\7.png" alt="7"></p><p><img src="D:\Veen&#39;s Files\win10\8.png" alt="8"></p><blockquote><p>此时系统镜像已经写入U盘，此时开始准备重新装机，请确认重要文件已经备份完毕。</p></blockquote><h4 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h4><blockquote><p>在安装系统之前请确认电脑的启动模式是UEFI模式。</p><ul><li>在计算机启动时连续按特定键进入EFI设置。通常台式机为Del，笔记本电脑为F2。按Esc键将提供完整菜单，然后选择BIOS设置。</li><li>在“Boot”选项卡下找到Legacy / UEFI引导模式配置。禁用（<em>Disabled</em>）Legacy并启用（<em>Enabled</em>）UEFI。</li><li>按F10保存设置，然后退出。</li></ul></blockquote><ol><li>接下来重启电脑，在重启之后按下选择启动介质的快捷键，选择“<strong>USB Storage Device</strong>”。</li></ol><blockquote><p>常见品牌的选择启动介质的快捷键：联想和戴尔是F12；华硕：F8 其他的：百度一下，你就知道。</p></blockquote><ol><li>此时U盘引导系统进入Win10安装程序，请选择最符合你的需求的选项，然后选择“下一步”。（家庭版正版重装请选择家庭版，需要重装专业版可选择专业版，在之后一篇推送中提供专业版破解指南） </li><li>选择“立即安装”，然后选中“我接受”框。</li><li>选择“下一步”，然后选择“自定义: 仅安装 Windows (高级)”。</li><li>你的设备将显示驱动器和分区的列表，删除/格式化系统盘，多个硬盘用户请勿删除有重要数据的硬盘。</li><li>选择“删除”系统盘所有分区。指示“未分配空间”的驱动器除外。完成后，仅应保留驱动器 0 未分配空间。（双SSD用户可能为驱动器1，因此安装前最好取出第二块硬盘）</li><li>选择“下一步”，（此时如果提示硬盘格式错误，请使用命令行diskpart工具 进行修复，参照文末TIPS）Windows 安装程序屏幕将显示“正在安装 Windows”。安装完成后，设备可能提示重启，在有倒计时的界面不要自行点击重启，等待自动重启。</li><li>之后就是进入系统初始界面，按照提示进行设置即可。</li><li>进入系统后点击更新，更新所有系统驱动。</li></ol><p><img src="C:\Users\VEEN_ZHOU\Pictures\1.png" alt="1"></p><p><img src="C:\Users\VEEN_ZHOU\Pictures\2.png" alt="2"></p><h2 id="TIPS"><a href="#TIPS" class="headerlink" title="TIPS"></a>TIPS</h2><p>重装时出现硬盘分区表错误可以使用命令行diskpart工具进行磁盘修复、格式转换。在重装系统界面按“shift+F10”调出命令提示符，输入diskpart进入分区程序，部分命令说明如下：</p><p><strong><code>list disk</code></strong>：显示本机安装的硬盘，编号为0、1、2……只有一块硬盘的用户只有“磁盘0”</p><p><strong><code>select disk X</code></strong>：选择上面列出的硬盘</p><p><strong><code>clean</code></strong>：清空选中硬盘原有分区信息</p><p><strong><code>convert gpt</code></strong>：将分区格式转换为GPT</p><p><strong><code>list partition</code></strong>：显示已有分区</p><p><strong><code>create partition efi/msr/primary size=n</code></strong>：新建EFI/MSR/主分区，单位为MB</p>]]></content>
    
    
    
    <tags>
      
      <tag>系统</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CFD Case Test</title>
    <link href="/CFD%20Case%20Test/"/>
    <url>/CFD%20Case%20Test/</url>
    
    <content type="html"><![CDATA[<h1 id="网格无关性检验"><a href="#网格无关性检验" class="headerlink" title="网格无关性检验"></a>网格无关性检验</h1><span id="more"></span><p><a href="https://www.grc.nasa.gov/www/wind/valid/tutorial/spatconv.html">Reprinted From NASA V&amp;A</a> </p><h2 align="center" class="style3">Examining Spatial (Grid) Convergence</h2><!-------------------------------------------------------------------------><h3 class="style1">Introduction </h3><p> The examination of the spatial convergence of a simulation is a straight-forward method fordetermining the <i>ordered</i> <a href="errors.html">discretizationerror</a> in a CFD simulation.  The method involves performing thesimulation on two or more successively finer grids.  The term <i>gridconvergence study</i> is equivalent to the commonly used term <i>gridrefinement study</i>. </p><p> As the grid is refined (grid cells become smaller and the numberof cells in the flow domain increase) and the time step is refined (reduced) the spatial and temporal discretization errors, respectively,should asymptotically approaches zero, excluding computer round-off error.</p><p> Methods for examining the spatial and temporal convergence of CFDsimulations are presented in the book by <ahref="bibliog.html#Roach94">Roache</a>.  They are based on use ofRichardson's extrapolation.  A summary of the method is presentedhere.</p><p> A general discussion of <a href="errors.html">errors in CFD computations</a> is available for background.</p><p> We will mostly likely want to determine the error band for theengineering quantities obtained from the finest grid solution.However, if the CFD simulations are part of a design study that mayrequire tens or hundreds of simulations, we may want to use one of thecoarser grids.  Thus we may also want to be able to determine the erroron the coarser grid.</p><!-------------------------------------------------------------------------><h3 class="style1">Grid Considerations for a Grid Convergence Study</h3><p> The easiest approach for generating the series of grids is togenerate a grid with what one would consider <i>fine</i> grid spacing,perhaps reaching the upper limit of one's tolerance for generating agrid or waiting for the computation on that grid to converge.  Thencoarser grids can be obtained by removing every other grid line in eachcoordinate direction.  This can be continued to create additionallevels of coarser grids.  In generating the fine grid, one can build inthe <b>n</b> levels of coarser grids by making sure that the number ofgrid points in each coordinate direction satisfies the relation</p><p align="center"><b> N = 2<sup>n</sup> m + 1</b></p><p> where <b>m</b> is an integer.  For example, if two levels of coarsergrids are desired (i.e. fine, medium, and coarse grids) then the numberof grid points in each coordinate direction must equal <b>4 m + 1</b>.The <b>m</b> may be different for each coordinate direction.</p><p> The <a href="http://www.grc.nasa.gov/WWW/winddocs">WIND</a> code has a <a href="http://www.grc.nasa.gov/WWW/winddocs/user/keywords/sequence.html">gridsequencing control</a> that will solve the solution on the coarser gridwithout having to change the grid input file, boundary conditionsettings, or the input data file.  Further, the converged solution onthe coarser grid then can be used directly as the initial solution onthe finer grid.  This option was originally used to speed upconvergence of solutions; however, can be used effectively for a gridconvergence study.</p><p> It is not necessary to halve the number of grid points in eachcoordinate direction to obtain the coarser grid.  <i>Non-integer</i> gridrefinement or coarsening can be used.  This may be desired since<i>halfing</i> a grid may put the solution out of the asymptotic range.Non-integer grid refinement or coarsening will require the generationof a new grid.  It is important to maintain the same grid generationparameters as the original grid. One approach is to select several gridspacings as reference grid spacings.  One should be the grid spacingnormal to the walls.  Others may be spacings at flow boundaries, atjunctures in the geometry, or at zonal interfaces.  Upon picking theratio as which the grid is to be refined or coarsened, this same ratiois applied to these spacings.  The number of grid points are thenadjusted according to grid quality parameters, such as grid spacingratio limits.  The surface and volume grids are then generated usingthe same methods as the original grid.  The grid refinement ratioshould be a minimum of <b>r &gt;= 1.1</b> to allow the discretizationerror to be differentiated from other error sources (iterativeconvergence errors, computer round-off, etc...).</p><!-------------------------------------------------------------------------><h3 class="style1">Order of Grid Convergence</h3><p> The order of grid convergence involves the behavior of the solutionerror defined as the difference between the discrete solution and theexact solution,</p><p align="center"><img src="eq_error1.gif" alt="Formula is described in the surrounding text"></p><p> where <b>C</b> is a constant, <b>h</b> is some measure of gridspacing, and <b>p</b> is the order of convergence.  A &quot;second-order&quot;solution would have <b>p = 2</b>.</p><p> A CFD code uses a numerical algorithm that will provide a <i>theoretical order of convergence</i>; however, the boundary conditions,numerical models, and grid will reduce this order so that the <i>observed order of convergence</i> will likely be lower.</p> <p> Neglecting higher-order terms and taking the logarithm of both sides of the above equation results in: </p> <p align="center"><img src="eq_logerror.gif" alt="formula is described in the surrounding text"></p><p> The order of convergence <b>p</b> can be obtained from the slope of thecurve of <b>log(E)</b> versus <b>log(h)</b>.   If such data pointsare available, the slope can be read from the graph or the slope can becomputed from a least-squares fit of the data.  The least-squares will likely be inaccurate if there are only a few data points.</p><p> A more direct evaluation of <b>p</b> can be obtained from three solutions using a constant grid refinement ratio <b>r</b>, </p><p align="center"><img src="eq_porder1.gif" alt="formula is described in the surrounding text"></p><p> The <i>order of accuracy</i> is determined by the order of theleading term of the <i>truncation error</i> and is represented withrespect to the scale of the discretization, <b>h</b>. The <i>localorder of accuracy</i> is the order for the stencil representing thediscretization of the equation at one location in the grid. The<i>global order of accuracy</i> considers the propagation andaccumulation of errors outside the stencil. This propagation causes theglobal order of accuracy to be, in general, one degree less than thelocal order of accuracy.  The order of accuracy of the boundaryconditions can be one order of accuracy lower than the interior orderof accuracy without degrading the overall global accuracy.</p><!-------------------------------------------------------------------------><h3 class="style1">Asymptotic Range of Convergence</h3><p> Assessing the accuracy of code and caluculations requires that the gridis sufficiently refined such that the solution is in the asymptoticrange of convergence. The asymptotic range of convergence is obtainedwhen the grid spacing is such that the various grid spacings <b>h</b> anderrors <b>E</b> result in the constancy of <b>C</b>,</p><p align="center"><b> C = E / h<sup>p</sup> </b></p><p> Another check of the asymptotic range will be discussed in the section on the grid convergence index.</p><!-------------------------------------------------------------------------><h3 class="style1">Richardson Extrapolation</h3><p> Richardson extrapolation is a method for obtaining a higher-orderestimate of the continuum value (value at zero grid spacing) from aseries of lower-order discrete values.</p><p> A simulation will yield a quantity <b>f</b> that can be expressedin a general form by the series expansion:</p><p align="center"><b>   f = f<sub>h=0</sub> + g<sub>1</sub> h + g<sub>2</sub> h<sup>2</sup>     + g<sub>3</sub> h<sup>3</sup> + ...</b></p><p> where <b>h</b> is the grid spacing and the functions<b>g<sub>1</sub></b>, <b>g<sub>2</sub></b>, and <b>g<sub>3</sub></b>are independent of the grid spacing.  The quantity <b>f</b> isconsidered &quot;second-order&quot; if <b>g<sub>1</sub> = 0.0</b>.  The<b>f<sub>h=0</sub></b> is the continuum value at zero grid spacing.</p><p> If one assumes a second-order solution and has computed <b>f</b> ontwo grids of spacing <b>h<sub>1</sub></b> and <b>h<sub>2</sub></b> with<b>h<sub>1</sub></b> being the finer (smaller) spacing, then one canwrite two equations for the above expansion, neglect third-order andhigher terms, and solve for <b>f<sub>h=0</sub></b> to estimate thecontinuum value,</p><p align="center"><img src="eq_rich1.gif" alt="Forumla is described in the surrounding text"></p><p> where the grid refinement ratio is:</p> <p align="center"><b> r = h<sub>2</sub> /  h<sub>1</sub></b></p><p> The Richardson extrapolation can be generalized for a <b>p-th</b>order methods and <b>r</b>-value of grid ratio (which does not have tobe an integer) as:</p><p align="center"><img src="eq_rich2.gif" alt="Forumla is described in the surrounding text"></p><p> Traditionally, Richardson extrapolation has been used with gridrefinement ratios of <b>r = 2</b>.  Thus, the above equation simplifiesto:</p><p align="center"><img src="eq_rich3.gif" alt="Forumla is described in the surrounding text"></p><p> In theory, the above equations for the Richardson extrapolation willprovide a fourth-order estimate of <b>f<sub>h=0</sub></b>, if <b>f<sub>1</sub></b> and <b>f<sub>2</sub></b>were computed using exactly second-order methods.  Otherwise, it willbe a third-order estimate.  In general, we will consider <b>f<sub>h=0</sub></b>to be <b>p+1</b> order accurate.  Richardson extrapolation can be appliedfor the solution at each grid point, or to solution functionals, suchas pressure recovery or drag.  This assumes that the solution isglobally second-order in addition to locally second-order and that thesolution functionals were computed using consistent second-ordermethods.  Other cautions with using Richardson extrapolation(non-conservative, amplification of round-off error, etc...) arediscussed in the book by <a href="bibliog.html#Roachebook">Roache</a>.</p><p> For our purposes we will assume <b>f</b> is a solution functional (i.e.pressure recovery).  The <b>f<sub>h=0</sub></b> is then as an estimate of <b>f</b>in the limit as the grid spacing goes to zero.  One use of<b>f<sub>h=0</sub></b> is to report the value as the an improved estimate of<b>f<sub>1</sub></b> from the CFD study; however, one has to understand the caveatsmentioned above that go along with that value. </p> <p> The other use of <b>f<sub>h=0</sub></b> is to obtain an estimate of thediscretization error that bands <b>f</b> obtained from the CFD.  This usewill now be examined.</p><p> The difference between <b>f<sub>1</sub></b> and <b>f<sub>h=0</sub></b> is one error estimator;however, this requires consideration of the caveats attached to<b>f<sub>h=0</sub></b>.</p><p> We will focus on using <b>f<sub>1</sub></b> and <b>f<sub>2</sub></b> to obtain an error estimate.Examining the generalized Richardson extrapolation equation above, the second term on the right-hand sidecan be considered to be an an error estimator of <b>f<sub>1</sub></b>.  The equation can be expressed as:</p><p align="center"><b>   A<sub>1</sub> =  E<sub>1</sub>   + O( h<sup>p+1</sup>, E<sub>1</sub><sup>2</sup>) </b></p><p> where <b>A<sub>1</sub></b> is the actual fractional error defined as:</p> <p align="center"><b>   A<sub>1</sub> =  ( f<sub>1</sub> - f<sub>h=0</sub> ) / f<sub>h=0</sub> </b></p><p> and <b>E<sub>1</sub></b> is the estimated fractional error for <b>f<sub>1</sub></b> defined as:</p> <p align="center"><img src="eq_eerror1.gif" alt="Forumla is described in the surrounding text"></p><p> where the relative error is defined as:</p><p align="center"><img src="eq_eps1.gif" alt="Forumla is described in the surrounding text"></p><p> This quantity should not be used as an error estimator since it does not take into account <b>r</b> or <b>p</b>.  This may lead to anunderestimation or overestimation of the error.  One could make this quantity artificially small by simply using a grid refinement ratio <b>r</b> close to 1.0.</p><p> The estimated fractional error <b>E<sub>1</sub></b> is an<i>ordered</i> error estimator and a good approximation of thediscretization error on the fine grid if <b>f<sub>1</sub></b> and<b>f<sub>2</sub></b> were obtained with good accuracy (i.e.<b>E<sub>1</sub>&lt;1</b>).  The value of <b>E<sub>1</sub></b> may bemeaningless if <b>f<sub>1</sub></b> and <b>f<sub>h=0</sub></b> are zeroor very small relative to <b>f<sub>2</sub>-f<sub>1</sub></b>.  If suchis the case, then another normalizing value should be used in place of<b>f<sub>1</sub></b>.</p><p> If a large number of CFD computations are to be performed (i.e fora DOE study), one may wish to use the coarser grid with<b>h<sub>2</sub></b>.  We will then want to estimate the error on thecoarser grid.  The Richardson extrapolation can be expressed as:</p><p align="center"><img src="eq_rich4.gif" alt="Forumla is described in the surrounding text"></p><p> The estimated fractional error for <b>f<sub>2</sub></b> is defined as:</p> <p align="center"><img src="eq_eerror2.gif" alt="Forumla is described in the surrounding text"></p><p> Richardson extrapolation is based on a Taylor series representation as indicated in Eqn. \ref{eq:series}.  If there are shocks and other discontinuities present, the Richardson extrapolation is invalid in the region of the discontinuity.  It is still felt that it applies to solution functionals computed from the entire flow field.</p><!-------------------------------------------------------------------------><h3 class="style1">Grid Convergence Index (GCI)</h3><p> <a href="bibliog.html#Roach94">Roache</a> suggests a gridconvergence index <b>GCI</b> to provide a consistent manner inreporting the results of grid convergence studies and perhaps providean error band on the grid convergence of the solution.  The <b>GCI</b>can be computed using two levels of grid; however, three levels arerecommended in order to accurately estimate the order of convergenceand to check that the solutions are within the asymptotic range ofconvergence.</p><p> A consistent numerical analysis will provide a result whichapproaches the actual result as the grid resolution approaches zero.Thus, the discretized equations will approach the solution of theactual equations. One significant issue in numerical computations iswhat level of grid resolution is appropriate. This is a function of theflow conditions, type of analysis, geometry, and other variables. Oneis often left to start with a grid resolution and then conduct a seriesof grid refinements to assess the effect of grid resolution. This isknown as a grid refinement study.</p><p> One must recognize the distinction between a numerical result whichapproaches an asymptotic numerical value and one which approaches thetrue solution. It is hoped that as the grid is refined and resolutionimproves that the computed solution will not change much and approachan asymptotic value (i.e. the true numerical solution). There still maybe error between this asymptotic value and the true physical solutionto the equations.</p><p> <a href="bibliog.html#Roach94">Roache</a> has provided a methodologyfor the uniform reporting of grid refinement studies. &quot;The basic ideais to approximately relate the results from any grid refinement test tothe expected results from a grid doubling using a second-order method.The <b>GCI</b> is based upon a grid refinement error estimator derivedfrom the theory of generalized Richardson Extrapolation.  It isrecommended for use whether or not Richardson Extrapolation is actuallyused to improve the accuracy, and in some cases even if the conditionsfor the theory do not strictly hold.&quot; The object is to provide ameasure of uncertainty of the grid convergence.</p><p> The <b>GCI</b> is a measure of the percentage the computed value isaway from the value of the asymptotic numerical value. It indicates anerror band on how far the solution is from the asymptotic value. Itindicates how much the solution would change with a further refinementof the grid. A small value of <b>GCI</b> indicates that the computationis within the asymptotic range.</p><p> The <b>GCI</b> on the fine grid is defined as:</p> <p align="center"><img src="eq_gcifine1.gif" alt="Forumla is described in the surrounding text"></p><p> where <b>F<sub>s</sub></b> is a factor of safety.  The refinementmay be spatial or in time.  The factor of safety is recommended to be<b>F<sub>s</sub>=3.0</b> for comparisons of two grids and<b>F<sub>s</sub>=1.25</b> for comparisons over three or more grids.The higher factor of safety is recommended for reporting purposes andis quite conservative of the actual errors.</p><p> When a design or analysis activity will involve many CFD simulations (i.e. DOE study), one may want to use the coarser grid <b>h<sub>2</sub></b>.  It is then necessary to quantify the error for the coarser grid.  The <b>GCI</b> for the coarser grid is defined as:</p><p align="center"><img src="eq_gcicoarse1.gif" alt="Forumla is described in the surrounding text" ></p><p> It is important that each grid level yield solutions that are in the asymptotic range of convergence for the computed solution.  This can be checked by observing two <b>GCI</b> values as computed over three grids,</p><p align="center"><b>GCI<sub>23</sub> = r<sup>p</sup> GCI<sub>12</sub></b></p><!-------------------------------------------------------------------------><h3 class="style1">Required Grid Resolution</h3><p> If a desired accuracy level is known and results from the gridresolution study are available, one can then estimate the gridresolution required to obtain the desired level of accuracy,</p><p align="center"><img src="eq_rstar.gif" alt="Forumla is described in the surrounding text"></p><!-------------------------------------------------------------------------><h3 class="style1">Independent Coordinate Refinement and Mixed Order Methods</h3><p> The grid refinement ratio assumes that the refinement ratio<b>r</b> applies equally in all coordinate directions <b>(i,j,k)</b>for steady-state solutions and also time <b>t</b> for time-dependentsolutions.  If this is not the case, then the grid convergence indicescan be computed for each direction independently and then added to givethe overall grid convergence index,</p><p align="center"><img src="eq_gcisum.gif" alt="Forumla is described in the surrounding text"></p><!-------------------------------------------------------------------------><h3 class="style1">Effective Grid Refinement Ratio</h3><p> If one generates a finer or coarser grid and is unsure of the value of grid refinement ratio to use, one can compute an effective grid refinement ratio as:</p><p align="center"><img src="eq_reffective.gif" alt="Forumla is described in the surrounding text"></p><p> where <b>N</b> is the total number of grid points used for the gridand <b>D</b> is the dimension of the flow domain. This effective gridrefinement ratio can also be used for unstructured grids.</p><!-------------------------------------------------------------------------><h3 class="style1">Example Grid Convergence Study</h3><p> The following example demonstrates the application of the aboveprocedures in conducting a grid convergence study.  The objective ofthe CFD analysis was to determine the pressure recovery for an inlet.The flow field is computed on three grids, each with twice the numberof grid points in the <b>i</b> and <b>j</b> coordinate directions asthe previous grid.  The number of grid points in the <b>k</b> directionremains the same.  Since the flow is axisymmetric in the <b>k</b>direction, we consider the finer grid to be double the next coarsergrid.   The table below indicates the grid information and the resultingpressure recovery computed from the solutions. Each solution wasproperly converged with respect to iterations.  The column indicated by&quot;spacing&quot; is the spacing normalized by the spacing of the finest grid.</p><table border cellpadding=0 rules="none" align="center"><tr ><th align=center scope="col"> Grid </th><th align=center> Normalized Grid Spacing </th><th align=center> Pressure Recovery, Pr </th></tr><tr ><td align=center scope="row"> 1 </td><td align=center> 1 </td><td align=center> 0.97050 </td></tr><tr ><td align=center scope="row"> 2 </td><td align=center> 2 </td><td align=center> 0.96854 </td></tr><tr ><td align=center scope="row"> 3 </td><td align=center> 4 </td><td align=center> 0.96178 </td></tr></table><p> The figure below shows the plot of pressure recoveries with varying grid spacings.  As the grid spacing reduces, the pressure recoveries approach an asymptotic zero-grid spacing value. </p><p> We determine the order of convergence observed from these results,</p><p align="center"><b> p = ln[ ( 0.96178 - 0.96854 ) / ( 0.96854 - 0.97050 ) ]      / ln(2) = 1.786170 </b></p><p> The theoretical order of convergence is <b>p=2.0</b>.  Thedifference is most likely due to grid stretching, grid quality,non-linearities in the solution, presence of shocks, turbulencemodeling, and perhaps other factors.</p><p> We now can apply Richardson extrapolation using the two finestgrids to obtain an estimate of the value of the pressure recovery atzero grid spacing,</p><p align="center"><b> Pr<sub>h=0</sub> = 0.97050 +                  ( 0.97050 - 0.96854 ) / ( 2<sup>1.786170</sup> - 1 ) <br>                 = 0.97050 + 0.00080 = 0.97130 </b></p><p> This value is also plotted on the figure below.</p><p> The grid convergence index for the fine grid solution can now be computed. A factor of safety of <b>F<sub>S</sub>=1.25</b> is used since three grids were used to estimage <b>p</b>.  The <b>GCI</b> for grids 1 and 2 is:</p><p align="center"><b> GCI<sub>12</sub> = 1.25 | ( 0.97050 - 0.96854 ) / 0.97050 |             / ( 2<sup>1.786170</sup> - 1 )            100%  = 0.103083% </b></p><p> The <b>GCI</b> for grids 2 and 3 is:</p><p align="center"><b> GCI<sub>23</sub> = 1.25 | ( 0.96854 - 0.96178 ) / 0.96854 |             / ( 2<sup>1.786170</sup> - 1 )            100%  = 0.356249% </b></p><p> We can now check that the solutions were in the asymptotic range of convergence, </p><p align="center"><b> 0.356249 / ( 2<sup>1.786170</sup> 0.103083 ) = 1.002019    </b></p><p> which is approximately one and indicates that the solutions are well within the asymptotic range of convergence.</p><p> Based on this study we could say that the pressure recovery for the supersonic ramp is estimated to be <b> Pr = 0.97130 </b> with an error band of <b>0.103%</b> or <b>0.001</b>.</p><p align="center"><img src="pr.gif" alt="Forumla is described in the surrounding text"></p><!-------------------------------------------------------------------------><h3 class="style1">VERIFY: A Fortran program to Perform Calculations Associated with a Grid Convergence Study</h3><p> The Fortran 90 program <a href="verify.f90"> verify.f90</a> was written to carry out the calculations associated with a grid convergence study involving 3 or more grids.  The program is compiled on a unix system through the commands:</p><blockquote><b> f90 verify.f90 -o verify </b></blockquote><p> It reads in an ASCII file (<a href="prD.do">prD.do</a>) through thestandard input unit (5) that contains a list of pairs of grid size andvalue of the observed quantity <b>f</b>.</p> <blockquote><b> verify &lt; <a href="prD.do">prD.do</a> &gt; <a href="prD.out">prD.out</a></b></blockquote><p> It assumes the values from the finest grid are listed first.  The output is then written to the standard output unit (6)  <a href="prD.out">prD.out</a>.The output from the of {\tt verify} for the results of Appendix A are:</p><blockquote><div class="code-wrapper"><pre> --- VERIFY: Performs verification calculations --- Number of data sets read =  3      Grid Size     Quantity      1.000000      0.970500      2.000000      0.968540      4.000000      0.961780 Order of convergence using first three finest grid  and assuming constant grid refinement (Eqn. 5.10.6.1)  Order of Convergence, p =  1.78618479 Richardson Extrapolation: Use above order of convergence and first and second finest grids (Eqn. 5.4.1)  Estimate to zero grid value, f_exact =  0.971300304 Grid Convergence Index on fine grids. Uses p from above. Factor of Safety =  1.25   Grid     Refinement               Step      Ratio, r       GCI(%)   1  2      2.000000      0.103080   2  3      2.000000      0.356244 Checking for asymptotic range using Eqn. 5.10.5.2. A ratio of 1.0 indicates asymptotic range.  Grid Range    Ratio  12 23      0.997980 --- End of VERIFY ---</pre></div></blockquote><!-------------------------------------------------------------------------><h3 class="style1">Examples of Grid Converence Studies in the Archive</h3><p>A grid convergence study is performed in the<br><a href="wedge/wedge.html"> Supersonic Wedge</a> case.</p><!-------------------------------------------------------------------------><h3 class="style1">Examples of Grid Converence Studies in Literature</h3><p> Other examples of grid convergence studies that use the procedures outlined above can be found in <a href="bibliog.html#Roachebook">the book by Roache</a> and the paper by <a href="bibliog.html#Steffen95" > Steffen et al.</a>. </p><!-------------------------------------------------------------------------><h3 class="style1">NPARC Alliance Policy with Respect to Grid Converence Studies</h3><p> For the WIND verification and validation effort, it is suggestedthat the above procedures be used when conducting and reporting resultsfrom a grid convergence study.</p><!-------------------------------------------------------------------------><p><hr><br><span style="font-weight: bold;">Last Updated:</span> Thursday, 17-Jul-2008 09:46:07 EDT<br></p><div id="footer"><!-- <img src="images/nasa_logo.gif" class="right"      width= "50" height="40" alt="NASA meatball" />--><div>  <span style="font-weight: bold;">Responsible NASA Official/Curator:</span>       <a href="mailto:john.w.slater@nasa.gov">John W. Slater</a></div><p><span><span style="font-weight: bold;">Web Policies: </span><br>      <a href="http://www.grc.nasa.gov/Doc/grcwebpolicies.html">Web Privacy Policy and Important Notices</a>&lt;/span&gt;<br /><br>        <span style="font-weight: bold;">Adobe Reader Download: </span><br>        <a href="http://www.adobe.com/products/acrobat/readstep2.html" title="Go to Adobe Web Site"><br>        Adobe Reader</a><br><!-- <span class="notprinted"><span style="font-weight: bold;">Adobe Reader Download: </span>          <a href="http://www.adobe.com/products/acrobat/readstep2.html" title="Go to Adobe Web Site">        Adobe Reader</a></span> --></p><p>&lt;/div&gt;</p><p>&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</p><p>&lt;/body&gt;<br>&lt;/html&gt;</p>]]></content>
    
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Research</title>
    <link href="/Research/"/>
    <url>/Research/</url>
    
    <content type="html"><![CDATA[<p><img src="C:\Users\VEEN_ZHOU\AppData\Roaming\Typora\typora-user-images\image-20191206215017237.png" alt="image-20191206215017237"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Linux</title>
    <link href="/Linux/"/>
    <url>/Linux/</url>
    
    <content type="html"><![CDATA[<p>It is a document for Linux using.  </p><span id="more"></span><div class="code-wrapper"><pre class="line-numbers language-shell" data-language="shell"><code class="language-shell"><span class="token function">apt-get</span> <span class="token function">install</span> --reinstall <span class="token punctuation">[</span>Package<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Git Bash</title>
    <link href="/Git%20bash/"/>
    <url>/Git%20bash/</url>
    
    <content type="html"><![CDATA[<p>本文用于记录Git常用语法。</p><span id="more"></span><h2 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h2><h3 id="Git-Bash登录"><a href="#Git-Bash登录" class="headerlink" title="Git Bash登录"></a>Git Bash登录</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> config --global user.name “Your Name” <span class="token comment">#（注意前边是“- -global”，有两个横线） </span>$ <span class="token function">git</span> config --global user.email “email@example.com”<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="Git-SSH配置"><a href="#Git-SSH配置" class="headerlink" title="Git SSH配置"></a>Git SSH配置</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ssh-keygen -t rsa -C “email@example.com”<span class="token comment">#全部回车</span><span class="token comment">#打开.ssh文件夹下的id-rsa.pub文件的内容，复制到ssh key</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="Git-Bash创建仓库"><a href="#Git-Bash创建仓库" class="headerlink" title="Git Bash创建仓库"></a>Git Bash创建仓库</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> init newrepo$ <span class="token function">git</span> <span class="token function">add</span> README <span class="token comment">#将目录下以README文件提交到仓库中</span>$ <span class="token function">git</span> commit -m <span class="token string">'初始化项目版本'</span><span class="token comment">#备注功能</span>$ <span class="token function">git</span> clone <span class="token operator">&lt;</span>repo<span class="token comment">###  &lt;directory###  #repo:Git 仓库 directory:本地目录。</span>$ <span class="token function">git</span> status <span class="token comment">#查看项目的当前状态</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看工作区和暂存区的状态</span>$ <span class="token function">git</span> status <span class="token comment"># 将工作区的文件提交到暂存区</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>  <span class="token comment"># 提交到本地仓库</span>$ <span class="token function">git</span> commit -m <span class="token string">"本次提交说明"</span><span class="token comment"># add和commit的合并，便捷写法（未追踪的文件无法直接提交到暂存区/本地仓库）</span>$ <span class="token function">git</span> commit -am <span class="token string">"本次提交说明"</span>  <span class="token comment"># 将本地分支和远程分支进行关联</span>$ <span class="token function">git</span> push -u origin branchName <span class="token comment"># 将本地仓库的文件推送到远程分支</span>$ <span class="token function">git</span> push<span class="token comment"># 拉取远程分支的代码</span>$ <span class="token function">git</span> pull origin branchName <span class="token comment"># 合并分支</span>$ <span class="token function">git</span> merge branchName <span class="token comment"># 查看本地拥有哪些分支</span>$ <span class="token function">git</span> branch<span class="token comment"># 查看所有分支（包括远程分支和本地分支）</span>$ <span class="token function">git</span> branch -a <span class="token comment"># 切换分支</span>$ <span class="token function">git</span> checkout branchName <span class="token comment"># 临时将工作区文件的修改保存至堆栈中</span>$ <span class="token function">git</span> stash<span class="token comment"># 将之前保存至堆栈中的文件取出来</span>$ <span class="token function">git</span> stash pop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Git-Bash提交修改"><a href="#Git-Bash提交修改" class="headerlink" title="Git Bash提交修改"></a>Git Bash提交修改</h3><ul><li>远程仓库未创建</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> init <span class="token comment">#初始化一只本地仓库（或者基于初始化仓库建立项目vue init webpack demoxxxx）</span><span class="token function">git</span> status <span class="token comment">#查看状态</span><span class="token function">git</span> <span class="token function">add</span> -A <span class="token comment">#提交所有文件改动</span><span class="token function">git</span> remote <span class="token function">add</span> origin ssh地址 <span class="token comment"># 链接远程仓库步骤1</span><span class="token function">git</span> push -u origin master <span class="token comment">#链接远程仓库步骤2</span><span class="token function">git</span> <span class="token function">add</span> -A <span class="token comment">#提交所有文件改动</span><span class="token function">git</span> status <span class="token comment">#查看状态</span><span class="token function">git</span> commit -m <span class="token string">"xx"</span> <span class="token comment">#备注功能</span><span class="token function">git</span> status <span class="token comment">#查看状态</span><span class="token function">git</span> pull origin master <span class="token comment">#拉最新代码 （下载）</span><span class="token function">git</span> push origin master <span class="token comment">#推送到远程 （上传）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><hr><ul><li>远程仓库已创建：</li></ul><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone ssh地址 <span class="token comment">#关联远程</span><span class="token function">git</span> remote <span class="token function">add</span> origin ssh地址 <span class="token comment">#链接远程仓库步骤1</span><span class="token function">git</span> pull origin master <span class="token comment">#拉最新代码 （下载）</span><span class="token function">git</span> <span class="token function">add</span> -A <span class="token comment">#提交所有文件改动</span><span class="token function">git</span> commit -m <span class="token string">"xx"</span> <span class="token comment">#备注功能</span><span class="token function">git</span> push origin master <span class="token comment">#推送到远程 （上传）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="基础命令"><a href="#基础命令" class="headerlink" title="基础命令"></a>基础命令</h2><h3 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> <span class="token comment">#他会监控工作区的状态树，使用它会把工作时的所有变化提交到暂存区，包括文件内容修改(modified)以及新文件(new)，但不包括被删除的文件。</span>$ <span class="token function">git</span> <span class="token function">add</span> -u <span class="token comment">#他仅监控已经被add的文件（即tracked file），他会将被修改的文件提交到暂存区。add -u 不会提交新文件（untracked file）。（git add --update的缩写）</span>$ <span class="token function">git</span> <span class="token function">add</span> -A <span class="token comment">#是上面两个功能的合集（git add --all的缩写）</span><span class="token comment"># 添加指定文件到暂存区（追踪新增的指定文件）</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token punctuation">[</span>file1<span class="token punctuation">]</span> <span class="token punctuation">[</span>file2<span class="token punctuation">]</span> <span class="token punctuation">..</span>.<span class="token comment"># 添加指定目录到暂存区，包括子目录</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token punctuation">[</span>dir<span class="token punctuation">]</span><span class="token comment"># 添加当前目录的所有文件到暂存区（追踪所有新增的文件）</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span class="token comment"># 删除工作区/暂存区的文件</span>$ <span class="token function">git</span> <span class="token function">rm</span> <span class="token punctuation">[</span>file1<span class="token punctuation">]</span> <span class="token punctuation">[</span>file2<span class="token punctuation">]</span> <span class="token punctuation">..</span>.<span class="token comment"># 停止追踪指定文件，但该文件会保留在工作区</span>$ <span class="token function">git</span> <span class="token function">rm</span> --cached <span class="token punctuation">[</span>file<span class="token punctuation">]</span><span class="token comment"># 改名工作区/暂存区的文件</span>$ <span class="token function">git</span> <span class="token function">mv</span> <span class="token punctuation">[</span>file-original<span class="token punctuation">]</span> <span class="token punctuation">[</span>file-renamed<span class="token punctuation">]</span><span class="token comment"># Git 2.0 以下版本</span><span class="token comment">#只作用于文件的新增和修改</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>  <span class="token comment">#只作用于文件的修改和删除</span>$ gti <span class="token function">add</span> -u<span class="token comment">#作用于文件的增删改</span>$ <span class="token function">git</span> <span class="token function">add</span> -A <span class="token comment"># Git 2.0 版本</span>$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span> 等价于 $ <span class="token function">git</span> <span class="token function">add</span> -A <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Git-Commit"><a href="#Git-Commit" class="headerlink" title="Git Commit"></a>Git Commit</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将暂存区的文件提交到本地仓库并添加提交说明</span>$ <span class="token function">git</span> commit -m <span class="token string">"本次提交的说明"</span>   <span class="token comment"># add 和 commit 的合并，便捷写法</span><span class="token comment"># 和 git add -u 命令一样，未跟踪的文件是无法提交上去的</span>$ <span class="token function">git</span> commit -am <span class="token string">"本次提交的说明"</span>  <span class="token comment"># 跳过验证继续提交</span>$ <span class="token function">git</span> commit --no-verify$ <span class="token function">git</span> commit -n<span class="token comment"># 编辑器会弹出上一次提交的信息，可以在这里修改提交信息</span>$ <span class="token function">git</span> commit --amend<span class="token comment"># 修复提交，同时修改提交信息</span>$ <span class="token function">git</span> commit --amend -m <span class="token string">"本次提交的说明"</span><span class="token comment"># 加入 --no-edit 标记会修复提交但不修改提交信息，编辑器不会弹出上一次提交的信息</span>$ <span class="token function">git</span> commit --amend --no-edit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Git-pull-push"><a href="#Git-pull-push" class="headerlink" title="Git pull push"></a>Git pull push</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 将本地仓库的文件推送到远程分支</span><span class="token comment"># 如果远程仓库没有这个分支，会新建一个同名的远程分支</span><span class="token comment"># 如果省略远程分支名，则表示两者同名</span>$ <span class="token function">git</span> push <span class="token operator">&lt;</span>远程主机名<span class="token comment">###  &lt;本地分支名>:&lt;远程分支名></span>$ <span class="token function">git</span> push origin branchname  <span class="token comment"># 如果省略本地分支名，则表示删除指定的远程分支</span><span class="token comment"># 因为这等同于推送一个空的本地分支到远程分支。</span>$ <span class="token function">git</span> push origin :master<span class="token comment"># 等同于</span>$ <span class="token function">git</span> push origin --delete master<span class="token comment"># 建立当前分支和远程分支的追踪关系</span>$ <span class="token function">git</span> push -u origin master<span class="token comment"># 如果当前分支与远程分支之间存在追踪关系</span><span class="token comment"># 则可以省略分支和 -u </span>$ <span class="token function">git</span> push<span class="token comment"># 不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机</span>$ <span class="token function">git</span> push --all origin<span class="token comment"># 拉取所有远程分支到本地镜像仓库中</span>$ <span class="token function">git</span> pull<span class="token comment"># 拉取并合并项目其他人员的一个分支 </span>$ <span class="token function">git</span> pull origin branchname  <span class="token comment"># 等同于 fetch + merge</span>$ <span class="token function">git</span> fetch origin branchName$ <span class="token function">git</span> merge origin/branchName<span class="token comment"># 如果远程主机的版本比本地版本更新，推送时 Git 会报错，要求先在本地做 git pull 合并差异，</span><span class="token comment"># 然后再推送到远程主机。这时，如果你一定要推送，可以使用 –-force 选项 </span><span class="token comment"># （尽量避免使用）</span>$ <span class="token function">git</span> push --force origin <span class="token operator">|</span> <span class="token function">git</span> push -f origin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Git-merge"><a href="#Git-merge" class="headerlink" title="Git merge"></a>Git merge</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 默认 fast-forward ，HEAD 指针直接指向被合并的分支</span>$ <span class="token function">git</span> merge <span class="token comment"># 禁止快进式合并</span>$ <span class="token function">git</span> merge --no-ff $ <span class="token function">git</span> merge --squash <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Git-Bash分支管理"><a href="#Git-Bash分支管理" class="headerlink" title="Git Bash分支管理"></a>Git Bash分支管理</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> branch <span class="token punctuation">(</span>branchname<span class="token punctuation">)</span> <span class="token comment">#创建分支命令</span>$ <span class="token function">git</span> checkout <span class="token punctuation">(</span>branchname<span class="token punctuation">)</span> <span class="token comment">#切换分支命令</span>$ <span class="token function">git</span> merge <span class="token comment">#合并分支</span>$ <span class="token function">git</span> branch <span class="token comment">#列出分支</span>$ <span class="token function">git</span> branch -d <span class="token punctuation">(</span>branchname<span class="token punctuation">)</span> <span class="token comment">#删除分支</span><span class="token comment"># 查看本地分支</span>$ <span class="token function">git</span> branch <span class="token operator">|</span> <span class="token function">git</span> branch -l <span class="token comment"># 查看远程分支</span>$ <span class="token function">git</span> branch -r <span class="token comment"># 查看所有分支（本地分支+远程分支）</span>$ <span class="token function">git</span> branch -a <span class="token comment"># 查看所有分支并带上最新的提交信息</span>$ <span class="token function">git</span> branch -av <span class="token comment"># 查看本地分支对应的远程分支</span>$ <span class="token function">git</span> branch -vv <span class="token comment"># 新建分支</span><span class="token comment"># 在别的分支下新建一个分支，新分支会复制当前分支的内容</span><span class="token comment"># 注意：如果当前分支有修改，但是没有提交到仓库，此时修改的内容是不会被复制到新分支的</span>$ <span class="token function">git</span> branch branchname <span class="token comment"># 切换分支(切换分支时，本地工作区，仓库都会相应切换到对应分支的内容)</span>$ <span class="token function">git</span> checkout branchname <span class="token comment"># 创建一个 aaa 分支，并切换到该分支 （新建分支和切换分支的简写）</span>$ <span class="token function">git</span> checkout -b aaa <span class="token comment"># 可以看做是基于 master 分支创建一个 aaa 分支，并切换到该分支</span>$ <span class="token function">git</span> checkout -b aaa master<span class="token comment"># 新建一条空分支（详情请看问题列表）</span>$ <span class="token function">git</span> checkout --orphan emptyBranchName$ <span class="token function">git</span> <span class="token function">rm</span> -rf <span class="token builtin class-name">.</span> <span class="token comment"># 删除本地分支,会阻止删除包含未合并更改的分支</span>$ <span class="token function">git</span> brnach -d branchname <span class="token comment"># 强制删除一个本地分支，即使包含未合并更改的分支</span>$ <span class="token function">git</span> branch -D branchname  <span class="token comment"># 删除远程分支</span><span class="token comment"># 推送一个空分支到远程分支，其实就相当于删除远程分支</span>$ <span class="token function">git</span> push origin  :远程分支名<span class="token comment"># 或者</span>$ <span class="token function">git</span> push origin --delete 远程分支名 <span class="token comment"># 修改当前分支名</span>$ <span class="token function">git</span> branch -m branchname<span class="token comment"># 将名字为xxx的分支重命名为yyy</span><span class="token function">git</span> branch -m xxx yyy <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Git-Bash查看提交历史"><a href="#Git-Bash查看提交历史" class="headerlink" title="Git Bash查看提交历史"></a>Git Bash查看提交历史</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> log$ <span class="token function">git</span> log --oneline <span class="token comment">#用 --oneline 选项来查看历史记录的简洁的版本</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="Git-Bash创建标签"><a href="#Git-Bash创建标签" class="headerlink" title="Git Bash创建标签"></a>Git Bash创建标签</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> tag -a v1.0 <span class="token comment">#创建标签</span>$ <span class="token function">git</span> tag -d v1.1 <span class="token comment">#删除标签</span>$ <span class="token function">git</span> show v1.0 <span class="token comment">#查看此版本修改内容</span><span class="token comment"># 默认在 HEAD 上创建一个标签 </span>$ <span class="token function">git</span> tag v1.0<span class="token comment"># 指定一个 commit id 创建一个标签 </span>$ <span class="token function">git</span> tag v0.9 f52c633<span class="token comment"># 创建带有说明的标签，用 -a 指定标签名，-m 指定说明文字</span>$ <span class="token function">git</span> tag -a v0.1 -m <span class="token string">"version 0.1 released"</span> <span class="token comment"># 查看所有标签</span><span class="token comment"># 注意：标签不是按时间顺序列出，而是按字母排序的。</span>$ <span class="token function">git</span> tag<span class="token comment"># 查看单个标签具体信息</span>$ <span class="token function">git</span> show <span class="token operator">&lt;</span>tagname<span class="token operator">></span><span class="token comment"># 推送一个本地标签</span>$ <span class="token function">git</span> push origin <span class="token operator">&lt;</span>tagname<span class="token operator">></span><span class="token comment"># 推送全部未推送过的本地标签</span>$ <span class="token function">git</span> push origin --tags<span class="token comment"># 删除本地标签</span><span class="token comment"># 因为创建的标签都只存储在本地，不会自动推送到远程。</span><span class="token comment"># 所以，打错的标签可以在本地安全删除。</span>$ <span class="token function">git</span> tag -d v0.1<span class="token comment"># 删除一个远程标签（先删除本地 tag ，然后再删除远程 tag）</span>$ <span class="token function">git</span> push origin :refs/tags/<span class="token operator">&lt;</span>tagname<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="进阶用法"><a href="#进阶用法" class="headerlink" title="进阶用法"></a>进阶用法</h2><h3 id="如何解决-gitignore-不起作用问题"><a href="#如何解决-gitignore-不起作用问题" class="headerlink" title="如何解决 .gitignore 不起作用问题"></a>如何解决 .gitignore 不起作用问题</h3><p><code>.gitignore</code> 仅适用于未跟踪的文件。如果您正在跟踪，那么 <code>.gitignore</code> 将不适用；如果想暴力的解决，可以使用如下方法，予以修复：</p><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> <span class="token function">rm</span> --cached -r <span class="token builtin class-name">.</span><span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>更详细的答案，可参见: <a href="https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository">ignore-files</a>。</p><h3 id="删除远程分支"><a href="#删除远程分支" class="headerlink" title="删除远程分支"></a>删除远程分支</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> push origin --delete branch-name// eg:<span class="token function">git</span> push origin --delete develop<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="查看-Git-信息"><a href="#查看-Git-信息" class="headerlink" title="查看 Git 信息"></a>查看 Git 信息</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看系统配置</span>$ <span class="token function">git</span> config --list<span class="token comment"># 查看用户配置</span>$ <span class="token function">cat</span> ~/.gitconfig <span class="token comment"># 查看当前项目的 git 配置</span>$ <span class="token function">cat</span> .git/config<span class="token comment"># 查看暂存区的文件</span>$ <span class="token function">git</span> ls-files<span class="token comment"># 查看本地 git 命令历史</span>$ <span class="token function">git</span> reflog<span class="token comment"># 查看所有 git 命令</span>$ <span class="token function">git</span> --help -a <span class="token comment"># 查看当前 HEAD 指向</span>$ <span class="token function">cat</span> .git/HEAD<span class="token comment"># git 中 D 向下翻一行  F 向下翻页  B 向上翻页  Q 退出</span><span class="token comment"># 查看提交历史</span>$ <span class="token function">git</span> log --oneline            --grep<span class="token operator">=</span><span class="token string">"关键字"</span>          --graph           --all                --author <span class="token string">"username"</span>               --reverse           -num          -p          --before<span class="token operator">=</span>  <span class="token number">1</span>  day/1  week/1  <span class="token string">"2019-06-06"</span>           --after<span class="token operator">=</span> <span class="token string">"2019-06-06"</span>          --stat           --abbrev-commit           --pretty<span class="token operator">=</span>format:<span class="token string">"xxx"</span>          <span class="token comment"># oneline -###  将日志记录一行一行的显示</span><span class="token comment"># grep="关键字" -###  查找日志记录中(commit提交时的注释)与关键字有关的记录</span><span class="token comment"># graph -###  记录图形化显示 ！！！    </span><span class="token comment"># all -###  将所有记录都详细的显示出来</span><span class="token comment"># author "username" -###  查找这个作者提交的记录</span><span class="token comment"># reverse -###  commit 提交记录顺序翻转      </span><span class="token comment"># before -###  查找规定的时间(如:1天/1周)之前的记录   </span><span class="token comment"># num -###  git log -10 显示最近10次提交 ！！！    </span><span class="token comment"># stat -###  显示每次更新的文件修改统计信息，会列出具体文件列表 ！！！</span><span class="token comment"># abbrev-commit -###  仅显示 SHA-1 的前几个字符，而非所有的 40 个字符 ！！！</span><span class="token comment"># pretty=format:"xxx" -###   可以定制要显示的记录格式 ！！！</span><span class="token comment"># p -###  显示每次提交所引入的差异（按 补丁 的格式输出）！！！</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Checkout"><a href="#Checkout" class="headerlink" title="Checkout"></a>Checkout</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 恢复暂存区的指定文件到工作区</span>$ <span class="token function">git</span> checkout <span class="token operator">&lt;</span>filename<span class="token operator">></span><span class="token comment"># 恢复暂存区的所有文件到工作区</span>$ <span class="token function">git</span> checkout <span class="token builtin class-name">.</span><span class="token comment"># 回滚到最近的一次提交</span><span class="token comment"># 如果修改某些文件后，没有提交到暂存区，此时的回滚是回滚到上一次提交</span><span class="token comment"># 如果是已经将修改的文件提交到仓库了，这时再用这个命令回滚无效</span><span class="token comment"># 因为回滚到的是之前自己修改后提交的版本</span>$ <span class="token function">git</span> checkout HEAD $ <span class="token function">git</span> checkout HEAD -- filename<span class="token comment"># 回滚到最近一次提交的上一个版本</span>$ <span class="token function">git</span> checkout HEAD^ <span class="token comment"># 回滚到最近一次提交的上2个版本</span>$ <span class="token function">git</span> checkout HEAD^^ <span class="token comment"># 切换分支，在这里也可以看做是回到项目「当前」状态的方式</span>$ <span class="token function">git</span> checkout <span class="token operator">&lt;</span>当前你正在使用的分支<span class="token operator">></span><span class="token comment"># 切换到某个指定的 commit 版本</span>$ <span class="token function">git</span> checkout <span class="token operator">&lt;</span>commit_id<span class="token operator">></span><span class="token comment"># 切换指定 tag </span>$ <span class="token function">git</span> checkout <span class="token operator">&lt;</span>tag<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Reset"><a href="#Reset" class="headerlink" title="Reset"></a>Reset</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 从暂存区撤销特定文件，但不改变工作区。它会取消这个文件的暂存，而不覆盖任何更改</span>$ <span class="token function">git</span> reset <span class="token operator">&lt;</span>fileName<span class="token operator">></span><span class="token comment"># 重置暂存区最近的一次提交，但工作区的文件不变</span>$ <span class="token function">git</span> reset <span class="token comment"># 等价于 </span>$ <span class="token function">git</span> reset HEAD （默认）<span class="token comment"># 重置暂存区与工作区，回退到最近一次提交的版本内容</span>$ <span class="token function">git</span> reset --hard <span class="token comment"># 重置暂存区与工作区，回退到最近一次提交的上一个版本</span>$ <span class="token function">git</span> reset --hard HEAD^ <span class="token comment"># 将当前分支的指针指向为指定 commit（该提交之后的提交都会被移除），同时重置暂存区，但工作区不变</span>$ <span class="token function">git</span> reset <span class="token operator">&lt;</span>commit<span class="token operator">></span><span class="token comment"># 等价于 </span>$ <span class="token function">git</span> reset --mixed  <span class="token operator">&lt;</span>commit<span class="token operator">></span><span class="token comment"># 将当前分支的指针指向为指定 commit（该提交之后的提交都会被移除），但保持暂存区和工作区不变</span>$ <span class="token function">git</span> reset --soft  <span class="token operator">&lt;</span>commit<span class="token operator">></span><span class="token comment"># 将当前分支的指针指向为指定 commit（该提交之后的提交都会被移除），同时重置暂存区、工作区</span>$ <span class="token function">git</span> reset --hard  <span class="token operator">&lt;</span>commit<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Revert"><a href="#Revert" class="headerlink" title="Revert"></a>Revert</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 生成一个撤销最近的一次提交的新提交</span>$ <span class="token function">git</span> revert HEAD <span class="token comment"># 生成一个撤销最近一次提交的上一次提交的新提交</span>$ <span class="token function">git</span> revert HEAD^ <span class="token comment"># 生成一个撤销最近一次提交的上两次提交的新提交</span>$ <span class="token function">git</span> revert HEAD^^ <span class="token comment"># 生成一个撤销最近一次提交的上n次提交的新提交</span>$ <span class="token function">git</span> revert HEAD~num <span class="token comment"># 生成一个撤销指定提交版本的新提交</span>$ <span class="token function">git</span> revert <span class="token operator">&lt;</span>commit_id<span class="token operator">></span><span class="token comment"># 生成一个撤销指定提交版本的新提交，执行时不打开默认编辑器，直接使用 Git 自动生成的提交信息</span>$ <span class="token function">git</span> revert <span class="token operator">&lt;</span>commit_id<span class="token comment">###  --no-edit</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="ReBase"><a href="#ReBase" class="headerlink" title="ReBase"></a>ReBase</h3><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 查看提交信息</span><span class="token function">git</span> log<span class="token comment"># 需要开始合并的commitID</span><span class="token function">git</span> rebase -i commitId<span class="token comment"># 进入编辑模式选择需要合并的方式</span><span class="token comment"># 保存后退出编辑提交的信息</span><span class="token comment"># 继续保存后退出提示：</span><span class="token comment"># Successfully rebased and updated refs/heads/master.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><div class="code-wrapper"><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">git</span> push originfatal: unable to access <span class="token string">'xxx'</span><span class="token builtin class-name">:</span> Failed to connect to github.com port <span class="token number">443</span>: Timed out$ <span class="token function">git</span> config --global http.sslVerify <span class="token string">"false"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello Markdown</title>
    <link href="/Programing/Hello%20Markdown/"/>
    <url>/Programing/Hello%20Markdown/</url>
    
    <content type="html"><![CDATA[<p>本文用于记录Markdown常用语法。</p><span id="more"></span><p><strong>Markdown</strong> is created by <a href="http://daringfireball.net/">Daring Fireball</a>; the original guideline is <a href="http://daringfireball.net/projects/markdown/syntax">here</a>. Its syntax, however, varies between different parsers or editors. <strong>Typora</strong> is using [GitHub Flavored Markdown][GFM].</p><p>每个符号后加一个空格才能正确渲染，推荐在进行写作时切换到源代码模式。</p><p>[toc]</p><h2 id="块元素"><a href="#块元素" class="headerlink" title="块元素"></a>块元素</h2><h3 id="段落（-ctrl-0）"><a href="#段落（-ctrl-0）" class="headerlink" title="段落（ ctrl+ 0）"></a>段落（ <code>ctrl</code>+ <code>0</code>）</h3><p>在Typora中通过回车 <code>Return</code>来创建新的段落。</p><p> <code>Shift</code> + <code>Return</code> 可用于创建单个换行符。</p><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 一级标题（ `ctrl`+ `1`）</span><span class="token title important"><span class="token punctuation">##</span> 二级标题（ `ctrl`+ `2`）</span><span class="token title important"><span class="token punctuation">###</span> 三级标题（ `ctrl`+ `3`）</span><span class="token title important"><span class="token punctuation">####</span> 四级标题（ `ctrl`+ `4`）</span><span class="token title important"><span class="token punctuation">#####</span> 五级标题（ `ctrl`+ `5`）</span><span class="token title important"><span class="token punctuation">######</span> 六级标题（ `ctrl`+ `6`）</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="块引用（-ctrl-Shift-Q）"><a href="#块引用（-ctrl-Shift-Q）" class="headerlink" title="块引用（ ctrl+ Shift+ Q）"></a>块引用（ <code>ctrl</code>+ <code>Shift</code>+ <code>Q</code>）</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 这是一个文字块<span class="token blockquote punctuation">></span><span class="token blockquote punctuation">></span> 这是第二个文字块<span class="token blockquote punctuation">></span><span class="token blockquote punctuation">></span><span class="token title important"><span class="token punctuation">##</span> 这是添加在二级标题上的文字块</span><span class="token blockquote punctuation">>></span> 这是二级引用<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 无序列表</span><span class="token list punctuation">*</span> red<span class="token list punctuation">*</span> blue<span class="token list punctuation">*</span> green<span class="token title important"><span class="token punctuation">#</span> 有序列表</span><span class="token list punctuation">1.</span> red<span class="token list punctuation">2.</span> blue<span class="token list punctuation">3.</span> green<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="代码块（-ctrl-Shift-K）"><a href="#代码块（-ctrl-Shift-K）" class="headerlink" title="代码块（ ctrl+ Shift+ K）"></a>代码块（ <code>ctrl</code>+ <code>Shift</code>+ <code>K</code>）</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 普通代码块</span>​```Hello World!​```<span class="token title important"><span class="token punctuation">#</span> 根据语言高亮代码块</span>​```rubyrequire 'redcarpet'markdown = Redcarpet.new("Hello World!")puts markdown.to_html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">### 公式（ &#96;ctrl&#96;+ &#96;Shift&#96;+ &#96;M&#96;）$$\frac&#123;\partial p&#125;&#123;\partial x&#125;&#x3D;0$$​&#96;&#96;&#96;markdown$$\frac&#123;\partial p&#125;&#123;\partial x&#125;&#x3D;0$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>You can find more details <a href="https://support.typora.io/Math/">here</a>.</p><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><ol><li><h4 id="极简方式"><a href="#极简方式" class="headerlink" title="极简方式"></a>极简方式</h4><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">name | 价格 |  数量  -|-|-香蕉 | $1 | 5 |苹果 | $1 | 6 |草莓 | $1 | 7 |<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>| name | 价格 | 数量 |<br>| —— | —— | —— |<br>| 香蕉 | $1   | 5    |<br>| 苹果 | $1   | 6    |<br>| 草莓 | $1   | 7    |</p></li><li><h4 id="简单方法"><a href="#简单方法" class="headerlink" title="简单方法"></a>简单方法</h4><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">name | 111 | 222 | 333 | 444<span class="token list punctuation">-</span> | :-: | :-: | :-: | -:aaa | bbb | ccc | ddd | eee| fff | ggg| hhh | iii | 000|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>| name | 111  | 222  | 333  |  444 |<br>| —— | :—: | :—: | :—: | —-: |<br>| aaa  | bbb  | ccc  | ddd  |  eee |<br>| fff  | ggg  | hhh  | iii  |  000 |</p></li><li><p>原生方法</p><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">name | 111 | 222 | 333 | 444:-: | :-: | :-: | :-: | :-:aaa | bbb | ccc | ddd | eee| fff | ggg| hhh | iii | 000|<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><p>| name | 111  | 222  | 333  | 444  |<br>| :—: | :—: | :—: | :—: | :—: |<br>| aaa  | bbb  | ccc  | ddd  | eee  |<br>| fff  | ggg  | hhh  | iii  | 000  |</p></li></ol><h3 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">You can create footnotes like this[^1].<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">^1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> Here</span> is the <span class="token italic"><span class="token punctuation">*</span><span class="token content">text</span><span class="token punctuation">*</span></span> of the <span class="token bold"><span class="token punctuation">**</span><span class="token content">footnote</span><span class="token punctuation">**</span></span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h3 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token list punctuation">-</span> [x] 已完成<span class="token list punctuation">-</span> [ ] 待完成<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><p> <code>***</code> 或者<code>---</code>都可以插入一条分割线。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>输入<code>[toc]</code>用于创建目录。</p><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><p>通过如下代码可以便捷的绘制流程图：</p><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">st=>start: Startop=>operation: Your Operationcond=>condition: Yes or No?e=>endst->op->condcond(yes)->econd(no)->op<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-flow" data-language="flow"><code class="language-flow">st<span class="token operator">=></span>start<span class="token operator">:</span> Startop<span class="token operator">=></span>operation<span class="token operator">:</span> Your Operationcond<span class="token operator">=></span>condition<span class="token operator">:</span> Yes or No<span class="token operator">?</span>e<span class="token operator">=></span>endst<span class="token operator">-</span><span class="token operator">></span>op<span class="token operator">-</span><span class="token operator">></span>cond<span class="token function">cond</span><span class="token punctuation">(</span>yes<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span>e<span class="token function">cond</span><span class="token punctuation">(</span>no<span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span>op<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="行内元素"><a href="#行内元素" class="headerlink" title="行内元素"></a>行内元素</h2><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 原生方法</span>This is <span class="token url">[<span class="token content">an example</span>](<span class="token url">http://example.com/</span> <span class="token string">"Title"</span>)</span> inline link.<span class="token url">[<span class="token content">This link</span>](<span class="token url">http://example.net/</span>)</span> has no title attribute.<span class="token title important"><span class="token punctuation">#</span> HTML</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This is <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://example.com/<span class="token punctuation">"</span></span> <span class="token attr-name">title</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Title<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>http://example.net/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This link<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> has no'按住ctrl可以在浏览器中访问链接'<span class="token title important"><span class="token punctuation">#</span> 插入URLs</span>例如插入邮箱<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>veenzhou@gmail.com</span><span class="token punctuation">></span></span>有的网址也能直接识别，例如www.google.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="引用链接"><a href="#引用链接" class="headerlink" title="引用链接"></a>引用链接</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown">This is <span class="token url">[<span class="token content">an example</span>][<span class="token variable">id</span>]</span> reference-style link.Then, anywhere in the document, you define your link label on a line by itself like this:<span class="token url-reference url"><span class="token punctuation">[</span><span class="token variable">id</span><span class="token punctuation">]</span><span class="token punctuation">:</span> http://example.com/  <span class="token string">"Optional Title Here"</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token url"><span class="token operator">!</span>[<span class="token content">这个文字我也不知道是干啥的</span>](<span class="token url">/path/to/img.jpg</span>)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="文字样式"><a href="#文字样式" class="headerlink" title="文字样式"></a>文字样式</h3><div class="code-wrapper"><pre class="line-numbers language-markdown" data-language="markdown"><code class="language-markdown"><span class="token italic"><span class="token punctuation">*</span><span class="token content">此文本为斜体。</span><span class="token punctuation">*</span></span><span class="token italic"><span class="token punctuation">_</span><span class="token content">此文本也是。</span><span class="token punctuation">_</span></span><span class="token bold"><span class="token punctuation">**</span><span class="token content">此文本为粗体。</span><span class="token punctuation">**</span></span><span class="token bold"><span class="token punctuation">__</span><span class="token content">此文本也是</span><span class="token punctuation">__</span></span><span class="token bold"><span class="token punctuation">**</span><span class="token content"><span class="token italic"><span class="token punctuation">*</span><span class="token content">此文本是斜体加粗体。</span><span class="token punctuation">*</span></span></span><span class="token punctuation">**</span></span><span class="token bold"><span class="token punctuation">**</span><span class="token content"><span class="token italic"><span class="token punctuation">_</span><span class="token content">或者这样。</span><span class="token punctuation">_</span></span></span><span class="token punctuation">**</span></span><span class="token italic"><span class="token punctuation">*</span><span class="token content"><span class="token bold"><span class="token punctuation">__</span><span class="token content">这个也是！</span><span class="token punctuation">__</span></span></span><span class="token punctuation">*</span></span><span class="token strike"><span class="token punctuation">~~</span><span class="token content">此文本为删除线效果。</span><span class="token punctuation">~~</span></span>行内代码Use the <span class="token code-snippet code keyword">`printf()`</span> function.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>u</span><span class="token punctuation">></span></span>下划线<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>u</span><span class="token punctuation">></span></span>表情符号:smile:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><p>HTML基本语法都支持，之后有时间再出教程吧。</p><p>You can use HTML to style content what pure Markdown does not support. For example, use <code>&lt;span style=&quot;color:red&quot;&gt;this text is red&lt;/span&gt;</code> to add text with red color.</p><h3 id="Embed-Contents"><a href="#Embed-Contents" class="headerlink" title="Embed Contents"></a>Embed Contents</h3><p>Some websites provide iframe-based embed code which you can also paste into Typora. For example:</p><iframe height='265' scrolling='no' title='Fancy Animated SVG Menu' src='http://codepen.io/jeangontijo/embed/OxVywj/?height=265&theme-id=0&default-tab=css,result&embed-version=2' frameborder='no' allowtransparency='true' allowfullscreen='true' style='width: 100%;'></iframe><div class="code-wrapper"><pre class="line-numbers language-Markdown" data-language="Markdown"><code class="language-Markdown">&lt;iframe height&#x3D;&#39;265&#39; scrolling&#x3D;&#39;no&#39; title&#x3D;&#39;Fancy Animated SVG Menu&#39; src&#x3D;&#39;http:&#x2F;&#x2F;codepen.io&#x2F;jeangontijo&#x2F;embed&#x2F;OxVywj&#x2F;?height&#x3D;265&amp;theme-id&#x3D;0&amp;default-tab&#x3D;css,result&amp;embed-version&#x3D;2&#39; frameborder&#x3D;&#39;no&#39; allowtransparency&#x3D;&#39;true&#39; allowfullscreen&#x3D;&#39;true&#39; style&#x3D;&#39;width: 100%;&#39;&gt;&lt;&#x2F;iframe&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h3><p>You can use the <code>&lt;video&gt;</code> HTML tag to embed videos. For example:</p><div class="code-wrapper"><pre class="line-numbers language-Markdown" data-language="Markdown"><code class="language-Markdown">&lt;video src&#x3D;&quot;xxx.mp4&quot; &#x2F;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><h3 id="Other-HTML-Support"><a href="#Other-HTML-Support" class="headerlink" title="Other HTML Support"></a>Other HTML Support</h3><p>You can find more details <a href="https://support.typora.io/HTML/">here</a>.</p>]]></content>
    
    
    <categories>
      
      <category>Tools</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Markdown</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>OpenFOAM Note</title>
    <link href="/NOTE/"/>
    <url>/NOTE/</url>
    
    <content type="html"><![CDATA[<p>OpenFOAM 2019</p><span id="more"></span><h1 id="elbow"><a href="#elbow" class="headerlink" title="elbow"></a>elbow</h1><blockquote><p>terminal<br><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">fluentMeshToFoam elbow.mshsim &#x2F;&#x2F;constant\poluMesh mesh locationfoamCleanTutorials cleanDirtouch case.foam<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></p><p>boundary condition<br>type            empty; 2D</p></blockquote><p>type            noSlip;</p><p>type            fixedValue;</p><p>value           uniform 0;</p><blockquote><p>flies<br>flie 0 boundary</p></blockquote><p>flie constant<br>transportProperties nu<br>turbulenceProperties method RAS LES laminar</p><p>flie system </p><blockquote><p>units</p><p>[kg,m,s,k…]</p><p>solve<br>steady: deltaT          1;<br>writeFormat     binary\ascii;</p></blockquote><h1 id="TShspe-TEST"><a href="#TShspe-TEST" class="headerlink" title="TShspe_TEST"></a>TShspe_TEST</h1><blockquote><p>constant    /boundary    /nu    /laminar<br>0    /p    /U</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">blockMeshtouch case.foamsimpleFoam<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></div><h1 id="arota-transient"><a href="#arota-transient" class="headerlink" title="arota_transient"></a>arota_transient</h1><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">fluent3DMeshToFoam fluent.msh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div><blockquote><p>/p<br>type            codedFixedValue;<br>changable pressure with time on boundary</p></blockquote><p>“OUTLET.*”=OUTLET1 OUTLET2 OUTLET3…</p><blockquote><p>/controlDict<br>important: deltaT<br>writeFormat     binary;</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">pimpleFoamfoamListTimes -rm  &#x2F;&#x2F;delete previous solution data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></div><p>postProcessing residuals data</p><p>foamMonitor -l postProcessing/residuals/0/residuals.dat</p><h1 id="sylinder-TEST"><a href="#sylinder-TEST" class="headerlink" title="_sylinder_TEST"></a>_sylinder_TEST</h1><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">inGroups        List&lt;word&gt; 1(mywall);empty cyclic cyclicAMI wedge symmetry &gt; #includeEtc &quot;caseDicts&#x2F;setConstraintTypes&quot;internalField   uniform (1 0 0);pimpleFoam &amp;&gt; lognOuterCorrectors    15&gt;&gt;1; pimple to pisofoamMonitor yrange &quot;[0 1]&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h1 id="TaylorCouettte-steadyState"><a href="#TaylorCouettte-steadyState" class="headerlink" title="_TaylorCouettte_steadyState"></a>_TaylorCouettte_steadyState</h1><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&quot;.*&quot;&#123;type zeroGradient;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&gt; foamGet residualsfunctions&#123;#includeFunc residuals&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">decomposePar mpirun -np 4 simpleFoam -parallel<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></div><h1 id="cyclic-RANS"><a href="#cyclic-RANS" class="headerlink" title="cyclic_RANS"></a>cyclic_RANS</h1><p>👉<br>wall function<br>    type    kqRWallFunction;<br>    value    $internalField;</p><p>./Allrun<br>decomposePar -force<br>mpirun -np 4 simpleFoam -parallel<br>reconstructPar</p><h1 id="dynMesh"><a href="#dynMesh" class="headerlink" title="_dynMesh"></a>_dynMesh</h1><p>dynamicMeshDict   movingwall nessary file</p><p>pointDisplacement</p><h1 id="livingRoom"><a href="#livingRoom" class="headerlink" title="_livingRoom"></a>_livingRoom</h1><p>topoSet<br>        name    window;<br>        type    faceSet;<br>        action  new;<br>        source  boxToFace;<br>        sourceInfo<br>        {<br>            box (0.5 1.0 -0.001)(2.5 2.0 0.001);<br>        }</p><p>p_rgh</p><div class="code-wrapper"><pre><code>type        zerogradient;    type            fixedFluxPressure;    value           uniform 0;equationOfState perfectGas;</code></pre></div><p>buoyantSimpleFoam</p><h1 id="BernardCells"><a href="#BernardCells" class="headerlink" title="_BernardCells"></a>_BernardCells</h1><p>buoyantPimpleFoam</p><p>—&gt; FOAM FATAL ERROR:<br>LHS and RHS of - have different dimensions<br>     dimensions : [0 2 -2 0 0 0 0] - [1 -1 -2 0 0 0 0]</p><h1 id="rhiCentralFoam"><a href="#rhiCentralFoam" class="headerlink" title="rhiCentralFoam"></a>rhiCentralFoam</h1><h1 id="rhoSimpleFoam"><a href="#rhoSimpleFoam" class="headerlink" title="rhoSimpleFoam"></a>rhoSimpleFoam</h1><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">mu          0;sutherland  mu relacted with TinternalField   uniform $Uinlet;internalField   uniform $pOut;type           fixedMean;  &#x2F;&#x2F;face averagetype       totalTemperature;type turbulentIntensityKineticEnergyInlet;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h1 id="VOF"><a href="#VOF" class="headerlink" title="VOF"></a>VOF</h1><p>type           constantAlphaContactAngle;<br>interFoam</p><div class="code-wrapper"><pre><code>pRefCell    0;pRefValue           0;</code></pre></div><h1 id="Mixture"><a href="#Mixture" class="headerlink" title="Mixture"></a>Mixture</h1><p>driftFluxFoam</p><p>relativeVelocityModel simple; //relative Velocity</p><h1 id="find-solvers"><a href="#find-solvers" class="headerlink" title="find solvers"></a>find solvers</h1><p>OpenFOAM/OpenFOAM-7/applications/solvers/xx/xx.c &gt; discriptions</p><p>OKSS2</p><p>laplacianFoam.c<br><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">Application    laplacianFoamDescription    Solves a simple Laplace equation, e.g. for thermal diffusion in a solid.            fvScalarMatrix TEqn            (                fvm::ddt(T) - fvm::laplacian(DT, T)             &#x3D;&#x3D;                fvOptions(T)            );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></p><p>scalarTransportFoam<br><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">Application    scalarTransportFoamDescription    Solves the steady or transient transport equation for a passive scalar.            fvScalarMatrix TEqn            (                fvm::ddt(T)              + fvm::div(phi, T)              - fvm::laplacian(DT, T)             &#x3D;&#x3D;                fvOptions(T)            );<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div></p><h1 id="Energe-equation"><a href="#Energe-equation" class="headerlink" title="Energe equation"></a>Energe equation</h1><p>name.c&gt;Make&gt;flies&gt;name.C name</p><p>$ wmake</p><blockquote><p>name.c</p></blockquote><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">   volScalarField T   &#123;IOobject&#123;    &quot;T&quot;,           runTime.timeName(),           mesh,           IOobject::MUST_READ,           IOobject::AUTO_WRITE&#125;,       mesh   &#125;;   dimensionedScalar DT   &#123;       &quot;DT&quot;,       dimensionSet(0,2,-1,0,0),       0.0001   &#125;;   fvScalarMatrix TEqn   &#123;       fvm::ddt(T)     + fvc::div(phi, T)     - fvc::laplacian(DT, T)   &#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h1 id="projectionFoam"><a href="#projectionFoam" class="headerlink" title="projectionFoam"></a>projectionFoam</h1><p>projectionFoam.C</p><p>EXE = $(FOAM_USER_APPBIN)/projectionFoam</p><p>phi = fvc::interpolate(U) &amp; mesh.Sf(); volume to surface</p><h1 id="dym"><a href="#dym" class="headerlink" title="dym"></a>dym</h1><div class="code-wrapper"><pre class="line-numbers language-none"><code class="language-none">&gt;pisoDyMFoam.C#include &quot;dynamicFvMesh.H&quot;#include &quot;createDynamicFvMesh.H&quot;mesh.update();&gt;UEqnphi &#x3D; phi - mesh.phi();&gt;options-ldynamicFvMesh \-ltopoChangerFvMesh \-I$(LIB_SRC)&#x2F;dynamicFvMesh&#x2F;lnInclude \<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><p>missing operator &gt;options environment variables</p><h1 id="EMMS"><a href="#EMMS" class="headerlink" title="EMMS"></a>EMMS</h1><h1 id="BASUOQU"><a href="#BASUOQU" class="headerlink" title="BASUOQU"></a>BASUOQU</h1><p>pimpleFoam -listScalarBCs -listVectorBCs \list boundary type</p>]]></content>
    
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>C Summary</title>
    <link href="/Programing/C-Summary/"/>
    <url>/Programing/C-Summary/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CFD Theory</title>
    <link href="/CFD-Theory/"/>
    <url>/CFD-Theory/</url>
    
    <content type="html"><![CDATA[<p>Basic CFD Theory</p><span id="more"></span><h3 id="CFD-Equations"><a href="#CFD-Equations" class="headerlink" title="CFD-Equations"></a>CFD-Equations</h3><h4 id="Navier-Stokes-N-S-Equation"><a href="#Navier-Stokes-N-S-Equation" class="headerlink" title="Navier-Stokes (N-S) Equation"></a>Navier-Stokes (N-S) Equation</h4><script type="math/tex; mode=display">\begin{align}& \frac{\partial u_{i}}{\partial t}+ u_{j}\frac{\partial u_{i}}{\partial x_{j}}=-\frac{1}{\rho}\frac{\partial p}{\partial x_{i}}+\nu \frac{\partial^2 u_{i}}{\partial x_{j}\partial x_{j}}+g_{i}\tag{1.1}\\& \frac{\partial u_{i}}{\partial x_{i}}=0\tag{1.2}\end{align}</script><script type="math/tex; mode=display">\begin{align}& \frac{\partial u_{i}}{\partial t}+ u_{j}\frac{\partial u_{i}}{\partial x_{j}}=-\frac{1}{\rho}\frac{\partial p}{\partial x_{i}}+\nu \frac{\partial^2 u_{i}}{\partial x_{j}\partial x_{j}}+g_{i}\\& \frac{\partial u_{i}}{\partial x_{i}}=0\end{align}</script><p>where  $u_i$ represents the air velocity, p is the pressure, $g_i$ is the gravitational acceleration.</p><h4 id="Energy-Equation"><a href="#Energy-Equation" class="headerlink" title="Energy Equation"></a>Energy Equation</h4><script type="math/tex; mode=display">\begin{aligned}&\rho \frac{\partial\left(c_{p} T\right)}{\partial t}+\rho \frac{\partial\left(c_{p} u_{j} T\right)}{\partial x_{j}}=\frac{\partial}{\partial x_{j}}\left[k \frac{\partial T}{\partial x_{j}}\right]+\Phi+S_{T}\\&\Phi = \mu\left(\frac{\partial u_{i}}{\partial x_{j}}+\frac{\partial u_{j}}{\partial x_{i}}\right) \frac{\partial u_{i}}{\partial x_{j}}\end{aligned}</script><h4 id="DEM"><a href="#DEM" class="headerlink" title="DEM"></a>DEM</h4><script type="math/tex; mode=display">\begin{aligned}& m_{p} \frac{d u_{i}^{p}}{d t}=\sum F_{i}+\left(m_{p}-m_{f}\right) g_{i}\\& F_{i}^{D}=\frac{\pi}{8} \rho_{f} d_{p}^{2} C_{D}\left(u_{i}^{f}-u_{i}^{p}\right)\left|u_{i}^{f}-u_{i}^{p}\right|\\& C_{D}=\frac{24}{\operatorname{Re}_{p}}+3.6 \operatorname{Re}_{p}^{-0.313}\end{aligned}</script><script type="math/tex; mode=display">C_{D}=\left\{\begin{array}{c}\frac{24\left(1+0.15 R e^{0.687}\right)}{\operatorname{Re}} \text {Re} \leq 1000 \\0.44 \mathrm{Re}>1000\end{array}\right.</script><script type="math/tex; mode=display">\begin{aligned}C_{\mathrm{D}}=\left\{\begin{array}{cc}\frac{24}{\operatorname{Re}_{\mathrm{p}}} & \text { if } \operatorname{Re}_{\mathrm{p}} \leq 10^{3} \\\frac{24}{\mathrm{Re}_{\mathrm{p}}}\left(1+0.15 \mathrm{Re}_{\mathrm{p}}^{0.678}\right) & \text { if } \quad \operatorname{Re}_{\mathrm{p}}>10^{3}\end{array}\right.\end{aligned}</script><script type="math/tex; mode=display">m_{p} \frac{d u_{i}^{p}}{d t}=\sum F_{i}+\left(m_{p}-m_{f}\right) g_{i}\\</script><script type="math/tex; mode=display">F_{p} = \frac{C_D Re_{p}}{24}\\</script><script type="math/tex; mode=display">C_D = \left\{ \begin{array}{**lr**}  \frac{24(1+0.15Re_{p}^{0.687})}{Re_{p}} \qquad &Re_{p}\leq 10^{3} \\0.44Re_{p}\qquad &Re_{p}<10^{3}\end{array}\right.</script><script type="math/tex; mode=display">Re_{p}=\frac{\rho\left|\vec{u}-\vec{u}_{p}\right| d_{p}}{\mu_{p}}</script>]]></content>
    
    
    <categories>
      
      <category>CFD</category>
      
    </categories>
    
    
    <tags>
      
      <tag>CFD</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Study C++</title>
    <link href="/Programing/Study-C/"/>
    <url>/Programing/Study-C/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>C++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Study HTML</title>
    <link href="/Programing/Study-HTML/"/>
    <url>/Programing/Study-HTML/</url>
    
    <content type="html"><![CDATA[<p>For HTML Study.</p><span id="more"></span><h2 id="常规用法"><a href="#常规用法" class="headerlink" title="常规用法"></a>常规用法</h2><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token comment">&lt;!--注释--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">align</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>font</span> <span class="token attr-name">face</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>华文新魏<span class="token punctuation">"</span></span> <span class="token attr-name">size</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>6<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        定义对齐、字体、字号<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>font</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>这是普通文本 - <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>b</span><span class="token punctuation">></span></span>这是粗体文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>b</span><span class="token punctuation">></span></span>。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h3 id="Style用法"><a href="#Style用法" class="headerlink" title="Style用法"></a>Style用法</h3><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style"><span class="token language-css"><span class="token selector">h1</span> <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">&#125;</span><span class="token selector">p</span> <span class="token punctuation">&#123;</span><span class="token property">color</span><span class="token punctuation">:</span>blue<span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Header 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>A paragraph.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>text/javascript<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript"><span class="token keyword">function</span> <span class="token function">setFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">"p1"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>style<span class="token punctuation">.</span>font<span class="token operator">=</span><span class="token string">"italic bold 12px arial,serif"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>p1<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>This is an example paragraph.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>button<span class="token punctuation">"</span></span> <span class="token special-attr"><span class="token attr-name">onclick</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span><span class="token value javascript language-javascript"><span class="token function">setFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span><span class="token punctuation">"</span></span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>Change font<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></div><h2 id="插入超链接"><a href="#插入超链接" class="headerlink" title="插入超链接"></a>插入超链接</h2><div class="code-wrapper"><pre class="line-numbers language-html" data-language="html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>https://veenxz.github.io/<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Veen's Blog<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></div>]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HTML</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Study Julia</title>
    <link href="/Programing/Study-Julia/"/>
    <url>/Programing/Study-Julia/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>Programming</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Julia</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>My first post</title>
    <link href="/My%20first%20post/"/>
    <url>/My%20first%20post/</url>
    
    <content type="html"><![CDATA[<h2 id="关于"><a href="#关于" class="headerlink" title="关于"></a>关于</h2><p>本博客使用Github与Hexo搭建，使用<a href="https://github.com/fluid-dev/hexo-theme-fluid">hexo-theme-fluid</a>。</p><p>支持valine评论。</p>]]></content>
    
    
    
    <tags>
      
      <tag>Others</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
